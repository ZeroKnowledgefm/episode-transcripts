Anna (00:00:05):
Welcome to Zero Knowledge. I'm your host Anna Rose in this podcast, we will be exploring the latest in zero knowledge research and the decentralized web, as well as new paradigms that promise to change the way we interact and transact online. This week, I chat with Pedro from WalletConnect. We trace back to the beginnings of the project, to the evolving role of wallets and wallet connecting protocols like WalletConnect. We look at their use of the Waku protocol. What prompted the new WalletConnect 2.0 development decisions and what it will mean in a MultiChain future. But before we start in, I want to highlight something for job seekers in the ZK space, the next ZK Jobs Fair happening on September 30th. This will be our fourth. We host these interactive virtual events on Gather.Town. It's an awesome way to get to know the teams that are hiring in a casual social setting as you are applying. So if you're looking for your next job, be sure to get your application in, I've added the link in the show notes. For potential hiring teams, we still have booths available, do get in touch with us by emailing sponsorships@zeroknowledge.fm. And in the meantime, you can always check out the new website and the updated ZK Jobs Board. There you can find open positions at a number of great ZK-focused companies, so do check it out. I also want to thank this week's sponsor, Anoma. Anoma is a multivariant and multivariable bartering protocol that enables bartering among N-parties of arbitrary assets, including NFTs, all with zero-knowledge privacy. Anoma makes large-scale settlements extremely efficient since the design of the Anoma state machine is not based on a step-by-step execution model and it removes the requirements of a double coincidence of wants or direct matches. Check out the Twitter thread from Awa, one of the co-founders I've added the link to this thread in the show notes. It's a great description of the project. We did have another one of the co-founders Adrian, on the show back in June, in case you want to hear more about the project and full disclosure, ZK Validator has since become an investor in the project. So be sure to stay tuned for Anoma's first public testnet in which you'll be able to play with Anoma's proof of stake, intent gossip matchmaking there, and custom validity predicates, check out their code base on GitHub and just know the team building Anoma is hiring. So if you're interested in bringing financial privacy and sovereignty to the world, check out the links in the show notes to their jobs. So thank you again, Anoma. Now here is my interview with Pedro. So this week I'm catching up with Pedro from WalletConnect. We will be diving into the wild world of wallets and wallet protocols. Welcome to the show, Pedro.

Pedro (00:02:55):
Thank you, and it's actually my favorite show. So I'm really excited to be here.

Anna (00:03:00):
That's so cool. Pedro, I feel like you and I we've known each other for sure a few years, and I think we might've met before WalletConnect, but give me a little bit of a background. How did we know each other? Was it hackathons? Where were we seeing each other originally?

Pedro (00:03:16):
I doubt it was before WalletConnect because I really started with WalletConnect when I actually started going to conferences and hanging out with the community, I would say. WalletConnect already there, it's just like, it was so unknown that was just like this dev walking around.

Anna (00:03:34):
That's probably what it was actually.

Pedro (00:03:37):
So I did go to hackathons and conferences and spent quite a lot of time in Berlin where we met a couple of times, but the project once it got to be known, it became like, oh, Pedro from WalletConnect. And it kind of like shifted from like, what do you do to like, they kind of associated it to me. So that was a good transition.

Anna (00:03:58):
Tell me what you were up to you beforehand then? What were you doing before WalletConnect?

Pedro (00:04:02):
Yeah, so I got into crypto, when I was working in London, I was working in a startup bank, you know, like N26 or Revolut. If people know those new banks that are mobile-focused and everything. And it really got to me to learn a lot about the financial industry. And around like December 2016, it was just starting like the bull market and I got to learn about crypto and I knew about Bitcoin, but I didn't know about Ethereum and Ethereum really fit the bill for a lot of my complaints that I had with the financial industry, because we were like in the startup bank, it was so exciting. We built this whole new product around personal finance but then regulations stopped you every time. We had so many nice features but it kind of either got stalled or completely modified to the point that it this is not even the original feature anymore. And Ethereum kind of just like said do it. And Ethereum was like you just do it. So after 6 months after learning about Ethereum and talking about it at work, I just had to quit. I had to move on and that's when I met Richard Burton, and he was working on Balance, which was like a portfolio manager like Zerion Zapper. When I joined Balance, that's when I started really getting into Ethereum and the crypto world. There we were working on the portfolio manager a lot but we really felt that one of the most important parts was the actual wallet. So out expereince was so strongly tied to the wallets that existed which were hardware wallets and MetaMask and so we couldn't really give the full-on experience that we wanted to change what it means to own a wallet and manage your portfolio. So that's where we started to build the Balance wallet, but then it just became these 2 products that didn't talk to each other, and WalletConnect just came out of need.

Anna (00:06:10):
Okay, so did it spin out of the company?

Pedro (00:06:12):
Yeah, yeah, exactly.

Anna (00:06:13):
Who are your other co-founders?

Pedro (00:06:16):
I wasn't a co-founder I actually joined when it was Chris, Richard and Sven, but then the company has evolved a lot. The company had like three pivots or something and it changed even founders and everything, and Balance Wallet today is actually Rainbow. The teams just kind of started like not agreeing on the vision and then they split. And then when there was the split, the code was separated into Balance Wallet and Rainbow Wallet, and then eventually Balance, they didn't survive and became like just the portfolio manager and Rainbow Wallet, just stuck with the wallet.

Anna (00:06:59):
But what about WalletConnect? Like you sort of mentioned it also came out of that. So who was it that first launched that out? Were you not part of that?

Pedro (00:07:08):
Yeah, I came up with WalletConnect. Actually, I didn't come up with the name, that was actually Jen. Jen came up with the name WalletConnect as a joke to BitConnect and then it just stuck. It just sticks.

Anna (00:07:21):
Oh my God. I didn't know that's where it came from. That's good.

Pedro (00:07:24):
It worked really well because it was such a good meme. That it just really worked on when, when you got to the conferences and you just joke about it, then it just, it becomes so catchy. We came up with the protocol to fix basically something that we wanted. And it just felt like what is the user experience that we want? And then we just build the tech to fit the user experience rather than the other way around, because it was like completely greenfield project. And I just like came up with WalletConnect and at the time it wasn't even like what we have in production. I kind of call it like the alpha and the alpha was like completely different at the time, but it was good enough for us to do it demo. And then we pitched it to Ethereum Foundation for a grant so that it would become its own thing. And that's when I actually left the company to focus on it. I got the Ethereum Foundation grant and I just decided to focus on it a hundred percent. There was so much to it. And we can see since 2018, there's still so much to build on it.

Anna (00:08:27):
So who were the original, the we that wrote the grant, I guess that's what I'm trying to understand, was it just yourself or was it like you and a few people?

Pedro (00:08:34):
Me and Richard wrote the grant, but then Richard became more like the community builder of WalletConnect. And I was focusing on the actual technology, but then obviously Richard had to focus on Balance and then I just took on and eventually it was during that summer and I just took like WalletConnect by myself and I went to conferences and just talk to people and it just became this thing that I just like evangelized WalletConnect. And I kind of became like this preaching everyone about this whole new world where like wallet competition will just exist under this whole protocol that everyone shares. And we don't have to depend on MetaMask and it worked. It was kind of crazy at the time. And I think I was a little bit naive to even try, but I'm glad I was.

Anna (00:09:23):
That's cool. So let's explain to the audience, what is WalletConnect? Exactly because it has the word wallet in it, but his WalletConnect a wallet.

Pedro (00:09:34):
No, I think that's the best part about it, right. I don't have to build a wallet and I don't have to build a dApp, but I have to make sure that it works with every wallet and with every dApp. And it has become quite interesting how non-technological it is sometimes. And it just becomes kind of political because I just have to make these decisions that are the net positive. And I have to measure that myself about what are we actually going to implement or not? And it just ended up being the more low level you go into the technology, the more neutral it becomes. So it kind of worked out and I kind of just had to listen a lot. I think listening was really what made WalletConnect work because after talking with so many wallets and dApps, you start to understand some patterns about what they actually need from each other. And I just have to like connect them, that's my whole responsibility. If I go too much out of it, then I start to become a little bit too opinionated and some wallet it doesn't like the way I do it or some dApp doesn't like it. And if it's neutral enough, everyone can use it. So yeah, it's an open protocol to connect wallets to dApps.

Anna (00:10:48):
Like how does a user see WalletConnect? Like what does it look like to a wallet user?

Pedro (00:10:55):
Yeah WalletConnect came as an alternative to MetaMask, so whenever you actually connect your wallet or dApp with MetaMask, right now you actually get prompted a lot in a lot of dApps to actually choose between MetaMask or WalletConnect. And what actually that provides you is with the QR codes and your mobile wallet will be able to scan the QR codes. And when it scans the QR code, it just has enough information to establish a pairing between the two devices and start a session where they can talk to each other. And this is very, very focused because WalletConnect as it exists today only works with Ethereum or EVM chains, because that was what we were building at the time. And that session kind of just understands, oh, this is an Ethereum wallet talking to an Ethereum dApp.

Anna (00:11:45):
Got it. I actually did try WalletConnect. I think for the first time a month ago or two months ago or something, it was really cool. It was really fun. It was kind of like the mobile wallet. It's very different experience. It's like you hook it up. It's sort of going to prompt you, whatever in the wallet you're going to get the same kind of prompts you would get in MetaMask. But that first connection point it was when I realized like what it actually did, the fact that you yeah, from your mobile phone without having the extension or anything like that could start to interact with this thing in the web. And it's kind of happening in real time. So you'll like do something online, maybe in a browser and then it will be prompted on your phone. And anyway, yeah, for me, that was kind of exciting. I know this might even be like for real hardcore users, like they might've been doing this for a longer time, but yeah. I thought it was cool.

Pedro (00:12:32):
Yeah. I mean, when you start to understand what MetaMask is actually doing, because just most dApps are provided in a browser and a browser is probably the most insecure place for you to manage your private keys. So they just kind of move the private key outside of it, to an extension. So why don't we do that with probably the most popular device on earth, which is a smartphone and some might still have some pre-concept of mobile phones are not as secure as desktop, but actually in 2021, it's actually quite the opposite. Mobile phones have evolved way more because they're not so much professional tools. They are more end-user tools for leisure mostly. So they actually are more sandbox. And these applications actually secure data between each one of them more securely than desktop applications. So that means that a desktop application can be compromised by another desktop application while a mobile application would happen, if an iPhone is jailbroken or an Android is rooted. So I actually believe that mobile phones are more prepared to manage your private keys than desktop.

Anna (00:13:46):
Is WalletConnect only for mobile though, is that the main focus like mobile wallet to dApp or could it be extension wallet to dApp as well?

Pedro (00:13:56):
Well, extension wallet wouldn't necessarily make much sense because, as a browser extension doesn't need it, it already is built into the browser, but we are mostly focused on mobile wallets and we have more than 70 wallets, which it surprises a lot of people because they're like, wow, there's 70 Ethereum wallets. Yeah, there's more than these are just the ones that support WalletConnect, but we are starting to see a lot of desktop applications actually making use of this. The reason for this is that browser extension design is not actually very competitive and it only allows one browser extension at a time to use Ethereum by the way the standards were developed. So that means that like in order to compete with MetaMask, a user has to either disable or uninstall MetaMask, which does not end up well for new wallets. So they kind of resort WalletConnect as a venue for them to actually hit new dApps. So for example, Gnosis Safe actually had Chrome extension, but then because of this property of browser extensions, they ended up deprecating it and just focusing on the mobile app and adding WalletConnect. And they even added to their web app, which manages multi-sigs ability to connect to WalletConnect. So it can even be mobile to desktop and desktop to desktop. And we also have mobile to mobile experience as well.

Anna (00:15:21):
Actually, happening when you said sort of like WalletConnect enabled, or like it adds WalletConnect, what are they doing to do that?

Pedro (00:15:31):
If you're a developer, the most simple explanation is you're installing a package, a library, a dependency to your codes. That basically means that you're installing some software that enables your browser to connect to a server. And in that application, you actually have the logic to how to establish a connection with another device that is connected to the same server and encrypt the data in order to relay the data across the server, without the server knowing what's going on. Because if we were actually putting this in more simpler terms, WalletConnect is just a signal for wallets, it's just a direct message that it's end to end encrypted. And there's a dApp and a wallet talking to each other.

Anna (00:16:17):
Would you say, is there any other comparable protocol, like, is there anything that's in your that actually does the same thing you're doing?

Pedro (00:16:26):
Back in 2018, I remember the first time I actually pitched this to MyEtherWallet, they didn't dislike it, but they kind of had some different approaches to some properties of WalletConnect and they actually decided to go with their own approach and they developed MyEtherWaller connect or MEWconnect. And basically they have some differences and the problem with MEWconnect, it kind of is not developed for multiple wallets, right. It kind of just like works for their wallet and it works very well, but it just works for their wallet. And the idea of WalletConnect like was that there's this strong assumption that it will be a competitive market and this is supposed to work with every wallet and it's open and it's not permissioned. And also this also happened with Coinbase Wallet as well, where Coinbase Wallet kind of just took their own approach because they didn't find WalletConnect to fit what they expected from it. And they just created Walletlink, which is just for Coinbase Wallet as well. And I mean, I think they could argue that it's open for other wallets, but at the end of the day, it is a proprietary solution for a single wallet, which kind of defies the whole point of WalletConnect.

Anna (00:17:38):
Going back to what you were saying before, where it's like the dApps use some library to enable WalletConnect the wallets, I guess, are also doing that on their side. Is this just like a repo that you've and it's standard for everyone? Or is it sort of like for each individual one you've had to create a new integration?

Pedro (00:17:55):
That's actually a good question. I'm a JavaScript developer, so I basically just designed the system. I wrote the spec and then I implemented it in JavaScript and that was actually a huge blocker in the beginning because a lot of the wallets actually wanted Swift and Kotlin. And only if you were a react native wallet who uses JavaScript, then you would be able to integrate. So in the beginning Trust Wallet, and the Gnosis Safe actually came in and they were like, okay, we want to use this. And we're just gonna like write clients for it. And they basically just followed the spec and saw the JavaScript code and they wrote implementations for certain Kotlin. And that's how most of the integrations actually followed.

Anna (00:18:40):
Cool. And this as an open source project, like the repos are public, did they just submit it to yours? I always wonder about this. Like if they do this contribution, does it land in your repo or does it stay in theirs?

Pedro (00:18:51):
So from 2018 to 2020, I was just like this maintainer living off grants, trying to like make the standard a thing. And I was very lucky that it was useful enough that they actually wanted to contribute and they basically just offered that, can we put this under the GitHub organization so other people can look at it? And yeah, they were happy to do that. And that was also one of the greatest thing about Ethereum is that it's very collaborative and open source. So they just wrote the implementation and I just moved it to the WalletConnect organization so whenever someone wanted the Swift or Kotlin implementation, I just pointed them there.

Anna (00:19:31):
Nice, were there other implementations that needed to be made that you noticed, like were there other wallets using other languages that they need?

Pedro (00:19:39):
No, only very recently, there has been a huge demand for Flutter. But JavaScript, Swift and Kotlin covers pretty much all of it.

Anna (00:19:50):
And what about on the dApp side?

Pedro (00:19:51):
That's JavaScript, right?

Anna (00:19:54):
Are dApps always Javascript actually? Aren't they Solidity?

Pedro (00:19:58):
Okay. So this brings up to a good point, right? What is dApp right? Is a dApp the interface or is the dApp the smart contract on the chain? In my context the dApp that is the interface. So there is a website and you connect that website to a smart contract, but then it needs to connect to a wallet. But the linking point here is JavaScript.

Anna (00:20:22):
Got it. Smart contract links to JavaScript, JavaScript links to the wallet. I actually didn't realize that. I didn't know that that was the flow.

Pedro (00:20:29):
I mean JavaScript is huge because of this, because it's the language that browsers accept and launching an app to the app store and launching a website has completely different requirements. Like it's super easy to create a website nowadays, for free.

Anna (00:20:45):
What is your dApp is mobile though, first. If your dApp is mobile-first - first question is can WalletConnect with it?

Pedro (00:20:55):
Yes.

Anna (00:20:55):
And second question would be, does it need special languages to do that? Because that's not going to be JavaScript, I guess?

Pedro (00:21:01):
No, so when I designed the protocol, I designed in the sense that it's a conversation between two clients and the idea of who's the dApp and who's the wallet was kind of assumed that if I'm proposing to connect to you, then I'm the dApp and the wallet is learning about you wanting to connect to me. So there's this strong assumption in the protocol, but at the end of the day, they can act as either dApp as the wallet, it's just, whoever is asking to connect to, right.

Anna (00:21:37):
I see. Okay.

Pedro (00:21:38):
So the codebase is actually the exact same for the dApp and the wallet, it's just them acting as different agents, I guess.

Anna (00:21:47):
I see, but you couldn't connect a mobile wallet to a mobile dApp. Could you, or does it not matter?

Pedro (00:21:55):
It doesn't matter. That was also like one of the decisions at the beginning that I tried to use as more popular technology as possible. So I tried to keep it as simple as possible. And I basically used the WebSockets, which are supported in almost every platform, if not every single platform. So that made it very easy that you can have a desktop application and mobile application, a browser application. It doesn't really matter, like as long as WebSockets are supported, it works.

Anna (00:22:26):
Got it. So my first question there was, is it possible to even have a mobile dApp? It sounds like, yes. It sounds like the answer is totally. Are there examples of this? Like, is there something that maybe is very commonly used and is dApp, but didn't occur to me is a mobile dApp.

Pedro (00:22:43):
It's interesting because this goes a little bit back on the history and the team at Zerion was actually the first dApp to actually support WalletConnect outside of Balance. And they have been a huge support because they have been there even since the first alpha. And they also have been thinking about WalletConnect like a little bit more than most, I think. So they were also the first mobile dApp that wasn't in the browsers to support WalletConnect, so Zerion on the web and Zerion on the mobile, both support WalletConnect, which means they are a native mobile dApp that connects to native mobile wallets, and they do this through WalletConnect.

Anna (00:23:24):
Nice. What was that like those early kind of partners? What was it like trying to find them?

Pedro (00:23:29):
It's interesting because there was no money in it, right? It was literally just open source and a vision and the open source just kind of existed there to make it easier for people to participate. So I kind of just pitched it to a lot of people and hope they would share the same goals. And I just went to a lot of conferences to be honest in 2018 to 2020 just went to almost all of them. And I talked to as many people as possible. And eventually you just get lucky and find people that like actually agree that this should be a thing and they help and they participate. And honestly, I'm like the face to WalletConnect, and I did write the protocols, but the community support behind it, it's really what makes it happen.

Anna (00:24:22):
Let's talk a little bit about like stability, like you're asking teams to use this thing, was there a real challenge in getting the level of the protocol up to, I don't know, a professional level to actually be usable while they're trying it out. Yeah. What was that like early on?

Pedro (00:24:39):
Yeah, that's interesting because we're talking about this in 2021, because 2019 Pedro was like, this is production ready. And once again, I would say that like my naiveness is really what brought me here because I look today to the version 1 and I don't see that as something that's production ready because I just gone through more, and as WalletConnect you're not just trying to satisfy your own product, you're trying to satisfy everyone's product. So if UniSwap has a problem, it's my problem. If compound has a problem, it's my problem. Like if a yield farm has a problem, it's my problem. And it goes even beyond like just what Ethereum mainnet, like we actually see a huge traffic that comes from like these apps that I never learned about. And they are mostly from Binance Smart Chain and now we're starting to see from other ones like Polygon and all of these new L2s, so it is production ready in the sense that it did fit what I needed it to do. But now that I see that there's like so many use cases, I feel like the technology needs to be matured to allow everyone to build on top of it better.

Anna (00:25:56):
So let's talk about like stability today then. Is it very stable or are there actually some challenges you still see?

Pedro (00:26:04):
So as I mentioned before, WalletConnect is a very simple protocol because you're having this conversation through WebSockets, which are widely supported and it's a standard that exists for years and it basically, you just encrypt put some data in the QR code and you're able to do end to end encryption. However, it's funny to see how the usage really impacted or hit its limits with this latest bull market. Especially when there's huge price rises, we totally notice our monitoring systems really glowing red and maybe people don't know, but WalletConnect from 2018 to 2020, just before DeFi summer was like a $5 DigitalOcean droplets that I just paid like $5 a month and it would work. It just like managed all the capacity, but then it went from 20 to 40 to 60 to 100. And now it's more than 36 servers, like on its max capacity on DigitalOcean not handling the capacity that it's needed for all the users that exist. But this doesn't mean that it has a lot of users. It does have, but that capacity also is showing, oh, maybe it's not designed for scale. So even though it's not a blockchain, it does have hit its scalability limits.

Anna (00:27:28):
Why is that? Like, you sort of mentioned servers, so it's a protocol, but you're also running it. So what does that actually mean? Like, is it computing something? Is it, what are these servers actually doing?

Pedro (00:27:38):
I guess you could just like, think of it as a mirror. Imagine you have to have a conversation where you just have to like bounce a message back and forth and you can't do it directly, so you have to bounce it on a server. It's just relaying across messages back and forth. But the scalability problem actually comes from some strong assumptions that I made in the beginning that really have hit their limit because I just thought, oh, it's fine. We just like for each session, we just create a new WebSocket, it's fine. But then there's like, if there's too many sessions, then there's like too many WebSockets and I didn't reuse resources properly because it kind of just worked. And I mean, from a startup perspective, I guess that makes sense because you just want to have the idea moving that's what created the movement. Now everyone sees the value in WalletConnect. So those assumptions were good enough that I didn't over-engineer and waited another year to push it into production. But now that we actually have like huge usage, we actually need better solutions. But the reason servers actually exist is that in the beginning I wanted to build it on top of Whisper because the whole trifecta Ethereum was Ethereum, Whisper and Swarm. And I thought what is the most decentralized solution: Whisper, but we wanted to also execute fast. So I just thought, I know we'll just create this server that mimics the behavior Whisper. And that's how WalletConnect is basically just has this publish and subscribe pattern in a server. And it doesn't really matter if it's Whisper because it kind of looks like it. So I think that it's good because now that we're actually transitioning into a new protocol, we actually get to build it on top of Waku, which is the predecessor of Whisper. Now that it's in a much more mature stage as well, because Whisper wasn't really ready at the time for prime time I would say.

Anna (00:29:39):
I actually have a question Waku. I actually had Oskar and Sanaz from Status on the show, like, I don't know, three months ago. So I can put a link to that, but I want to come back to that because now I have a few more kind of questions just about the protocol as is. So you mentioned a session, are those time-bound, is there like a limit of time when you open one of these sessions or is it open always?

Pedro (00:30:04):
It's open always in the sense that that doesn't mean that you're connected to the server all the time, but the two clients do not decide to close it until one of them tells it. So that means that like, if you have client A and client B and they agreed that the session is open, even if one of them go offline, you can come back online and they still have the same agreement of talking with each other, unless one of them says, oh, I'm going to disconnect this. And then the session is over. So, but this is a Version 1. So like I mentioned, we're working on Version 2. We already have people who've used Version 2 in production. And we decided that actually, this wasn't a great decision. And we actually decided to make them bound by seven days, actually.

Anna (00:30:54):
Wow. So you would have to redo this reconnection after seven days.

Pedro (00:30:57):
Yes and no. The reason we also made it bounded is because we started to understand this concept of like pairing and session. And we realized that, wait, why are we always scanning this QR code every time we wanted to connect the session? Because the QR code is actually doing something completely different than what the session is doing. The session is just an agreement between two applications to say, we are going to talk to each other on these terms. And the pairing is actually finding each other to encrypt the messages. So we just realized, wait, why are we doing this every time we have a new session? Why don't we just do it like once a month or something? And then we can create multiple sessions out of that pairing that already exists.

Anna (00:31:44):
Got it, so the pairing is less often, but the sessions might be more often.

Pedro (00:31:50):
And you can create as many as you want with no limits.

Anna (00:31:53):
Cool. You also just mentioned something about like Binance chain and Polygon. What do you mean with that? Are you saying like actually already WalletConnect could work on all of the other like custom RPCs, is that what you call them? By the way, are they called custom RPCs this is like the EVM compatible other chains.

Pedro (00:32:12):
Well, they're EVM compatible, right? So they are compatible with WalletConnect. This actually was very early on, that was one of the major differences between alpha and beta. Alpha actually I had to implement at the protocol level each sig of the methods. And then I realized this makes no sense because signed up data was kind of like just starting to exist. Then I have to like update everyone on each method that exists and that kind of just wanted to send messages, so I just made it, oh, you can talk on EVM because we would understand that you're an EVM chain by using the chain ID. So it just became a matter of adding a chain ID and that kind of made it much easier. Then I didn't need to care if it's a testnet or a mainnet or anything. I just give you a chain ID and it just works. Even if you have like a local network that you're just doing some testing, it would work with WalletConnect as long as the wallet understood what that Chain ID meant.

Anna (00:33:13):
Cool. This has already been done then, can you already work with those other EVM compatible chains?

Pedro (00:33:20):
Yes. This hasn't been the case since 2019, in 2019, when the beta came, it became compatible with any chain. And like we even saw like early scenarios of using with xDai, which xDai was just starting to come up. And it was as simple as like Ethereum mainnet is chain ID 1. So whenever you switched to xDai day, it was just chain ID 100. It was that simple. And it became very powerful because of that. And I remember at the time there was even like a lot of confusion between chain ID and network ID. And that's when we actually created the Ethereum registry for chains, which now is like one of the biggest registries where we list every single EVM chain ID.

Anna (00:34:01):
Okay. I would love to get that list. I'm always looking for that.

Pedro (00:34:05):
Oh, actually we created the domain for that. So it's very easy. You just do the chainid.network. It just gets you to a website with the list.

Anna (00:34:14):
That's so good. Yeah. We'll add that in the show notes and thanks for sharing that actually I've been looking for something like that. I have a side question and I think I may have even already asked this on the show, but I used the term like custom RPC. Yeah. I use that because that's like, what you, at least on MetaMask, what you have to enter, but what does that actually stand for? RPC?

Pedro (00:34:36):
Oh, RPC stands for 'remote procedure call'. And this is how wallets talk to the dApps. This is how dApps talk to nodes. And it's just an easier way of creating endpoints. That's, you know, traditionally you would put, I don't know, like example.com/user, that would be an endpoint and this would be the exact same thing, but it would follow the RPC standard.

Anna (00:35:03):
Got it. And do you have to do that within WalletConnect as well? Do you have to manually enter these? Like, do you actually have to add them or is it sort of prebuilt in?

Pedro (00:35:13):
So WalletConnect v1 doesn't really care what you send it through. It just, it's the actual session agreement about like, which chain are you actually going to talk to that actually cares about it. You could actually send like a method that says, Pedro says hello, and then it would send to the wallet and then the wallet will look at this method then be I don't know what this does and just reject it, but if you send it like Ethereum send transaction, then it would work.

Anna (00:35:43):
Okay. Got it. So now let's jump into WalletConnect 2.0, you've mentioned it, a few features, a few things about it. Let's kind of go back to that first point of like stability is WalletConnect 2.0 different in terms of the way it, it uses servers.

Pedro (00:36:00):
Yes. Very different than in my opinion is the biggest feature, but I like to emphasize the MultiChain capability because that's very trendy and I still think it's very important, but on the infrastructure side, it completely changed because in WalletConnect v1 you had to talk to the same server and in WalletConnect v2 it didn't really matter. You could just like have dApp talk to one server and the wallet talking to another server or a user could be very decentralized in have their own server that talks to the dApp server. And this is possible because of Waku, because these servers are in the sense, just remote Waku nodes that are connected to the network. And you just use the server for convenience. We even can imagine in the future, not using servers at all, and the messages are broadcasted directly to the Waku network. Although I wouldn't necessarily recommend it today, but it is possible like in theory. So what we actually want to do is just have a more, distributed network of servers that are actually geographically located so that if you are in the US you connect to the US server. And if you are in Europe, you connect to the European server. And that actually provides you with better performance and also better stability because of distributes load across different servers. So, yeah, WalletConnect 2.0, fixes a lot of the issues that cause like the outages that we saw around summer.

Anna (00:37:40):
Which Waku are you using though? Because in our episode, we actually talked about their versions. So you're saying WalletConnect 2.0 uses Waku. Yeah which waku?

Pedro (00:37:49):
So it's Waku 2.0, and it uses our own Waku in a sense, I guess, because WalletConnect uses Waku 2.0, and then we use our own topic, I guess, that's the terminology, a topic within Waku. Which kind of it's like this idea of like a conversation, and so that means that Status would have its own Waku and WalletConnect would have its own Waku.

Anna (00:38:23):
Is it an implementation or is it like a, is it an instance of it or something?

Pedro (00:38:28):
It's almost like the chain IDs. It's kind of like when you actually spin off a EVM chain, you're basically just changing a number and you have a new chain, which is completely different from the other chain and it has a different number. And it's basically like that. Let's say Status, will have the chain ID one and then WalletConnect will have the chain ID 2.

Anna (00:38:49):
Okay, but it's the same thing. It's the same implementation. You didn't rebuild it or anything?

Pedro (00:38:53):
The exact same code, the same thing. We worked very closely with Waku team because we were the first implementation outside of Status. So they had a lot of feedback from us and we also had a lot of help from them. And it has been extremely collaborative because we get to share use cases and priorities and things that we want, what Waku is better for each one of us.

Anna (00:39:19):
Cool. So you had just mentioned that WalletConnect 2.0 is like focused more on this MultiChain universe. So we already talked about the different EVM compatible chains and the fact that that's already kind of been included for a while, what does a MultiChain universe mean to the WalletConnect protocol?

Pedro (00:39:40):
I think MultiChain will change a lot of things. Personally, when I was in Berlin, I actually interacted with a lot of people in Cosmos and I like that they were thinking about this much earlier than any of us. Ethereum had the smart contracts and the composability. We also only had one chain. We never have to think about two chains and thinking about two chains, completely changes how you even design everything. So WalletConnect v1 just tried to be like MetaMask and just try to do exactly what MetaMask did. But MetaMask isn't necessarily designed for MultiChain because as a user, if you connected it to dApp with one chain, then you go to another and then you have to switch it and you can't connect to two chains at the same time. And I just thought that WalletConnect 2.0 provided us with the ability of wait a minute, we can rethink about it because what's coming ahead is not single chain. It's MultiChain. So with WalletConnect 2.0, you are not tied to one chain. We actually reversed the pattern where the dApp actually chooses what to connect to rather than the wallet. So you can have a dApp that says, okay, let's take UniSwap, for example, that they're going to Optimism. They can connect to Ethereum and to Optimism and they would just tell the wallet, look, I'm UniSwap and I need you to connect to Ethereum and Optimism. It's more like a set of permissions and the wallet either fits the bill or it doesn't. And then the wallet was seeing the, oh, Ethereum and Optimism. I know those chains, let's connect and that's it.

Anna (00:41:17):
Okay. Kind of like think of this from like a wallet right now. So like say you have a wallet, you have created an account on Ethereum main chain. You've also created a wallet on one of the L2s, like an Optimism chain. And then UniSwap tries to talk to the wallet, but like, do these wallets actually allow you to create these multiple accounts on different layers? And I think the answer is probably yeah, but then how would wallet connect to both of them within the wallet itself.

Pedro (00:41:51):
On Ethereum, an idea of an account that is maintained by a private key is simply a hash of its public key. So when you have this address, which is the hash of the public key, it means the same in every single EVM chain. So if you have the private key, you technically have accounts in every single possible EVM chain because the chain will just switch the number of the ID. So what we actually did was okay for you to actually expose the accounts, we need to actually understand what accounts are because that's one of the things that I kind of pushing a lot is that we've been talking about addresses as accounts, but an address by itself does not have enough information for an account. And the account is the sum of an address and the chain ID. So if you have, for example, dApp connected to a Ethereum and Optimism, the wallet will actually expose two accounts with the same address attached to two different chain IDs. And this is one thing that we actually came up outside of WalletConnect as early as 2019, when we created the Chain Agnostic Improvement Proposals, we basically created this GitHub organization that tried to be as neutral as possible that we found that Ethereum improvement proposals wouldn't be neutral enough because it's too focused for Ethereum. And we started creating standards for how we talk about MultiChain beyond Ethereum. And that actually included how we identify accounts by joining the address and the Chain ID together.

Anna (00:43:31):
In this MultiChain, you're still thinking very EVM, very Ethereum-focused like so it's EVM compatible. These are not zones in Cosmos or like Parachains on Polkadot, are they? Or are you also looking at that as a potential future?

Pedro (00:43:48):
So it is already chain-agnostic because of the Chain Agnostic Improvement Proposals. That was one of the things that we noticed is that we're putting all of this effort for MultiChain and then we're only EVM compatible, that makes no sense. So with the Chain Agnostic Improvement Proposals, we actually came up with a solution that basically creates a composable chain ID, where for each chain ID it's associated to a namespace. So EVM gets its own namespace, which has associated a EIP 1155 chain ID identifier. And then for Cosmos, they would actually have their own namespace. So you could have in WalletConnect an account that meets the requirements of the specification of the Chain Agnostic Improvement Proposals that attaches an address to a Cosmos chain and Ethereum chain simultaneously.

Anna (00:44:41):
Are these universal standards like would they have to be accepted by the individual chains in order for this to work?

Pedro (00:44:49):
No, because they're more like interfaces between dApps and wallets and you know, more end user facing applications. So the chains themselves don't actually need this because they're just talking internally and they have these relationships between chains using smart contracts and IPC and everything. This is more in the sense that as a wallet and as a dApp, you have to understand this more complexity that comes with like, oh, now we talk to EVM, but we also talk to Cosmos and talk Polkadot and now we need to understand why they're different. And that's where the standards actually come, it's trying to provide some unity around the idea of blockchains as a whole.

Anna (00:45:37):
Although, like aren't the wallets built for these other protocols different too.

Pedro (00:45:43):
Yes, but then the dApps need to understand how each one of these wallets, groups and categorizes different chains. Right? If we look at the source code, we're going to see that even Ethereum wallets think about accounts differently and organize themselves differently. But these interfaces between the dApps don't need to understand, oh, when I talk to wallet A they always use accounts in this manner. But if I talk to wallet B, they use accounts in this manner and that becomes not productive.

Anna (00:46:15):
I mean, I get it sort of WalletConnect creates the connection and the session, but it isn't sending the things itself. It doesn't care what's being passed between the wallet and the dApps.

Pedro (00:46:28):
Yeah, it doesn't, I mean, it doesn't matter to the server and it doesn't even matter to the clients. The clients basically just created these protocols for them to reach agreements. And that's why it was many times talked about this, like Bluetooth, like it's not like Bluetooth cares. If you send the PDF or you send the audio file, they just send stuff across and then just want to make sure that these two devices connect to each other and they agree on it.

Anna (00:46:59):
Yeah but then the wallets themselves, like if a wallet wanted to actually interact with two chains, the wallet would need to have all of that setup on its side.

Pedro (00:47:07):
Yes, and that's why very early on, I proposed this idea that like dApps should propose to wallets new chains. And I'm glad that this eventually caught on, and now we have this today because there was a lot of EVMs, but then users have to go into the custom RPC manually. And then we basically created a standard that you can just like have the dApp site, oh, add this new chain and it's all automatic, and it just made more sense. And now I'm even proposing differently where the dApp kind of just like straight up front, says, I need these chains. So you better be compatible. It's the wallet's job to kind of like meet that requirement.

Anna (00:47:54):
Co-host James was sort of supposed to be on the show, but sadly was not able to at the last minute. And I know that one point that we had talked about in the prep for this and something that I really do wish he could have been the voice here, but I'll try to channel him. It's this idea of like, you know, a lot of the focus of James's work is optics and bridges. So bridging and what you're describing, like are these compatible concepts or are they actually different? Like, are you taking the MultiChain out of the bridges and more towards the wallet and end user, and I'm just curious what you make of it. I don't know if I've done justice at all to the debate, but like, let's talk about that.

Pedro (00:48:31):
I think it makes a lot of justice because I tweeted a lot about Chain Agnostic Improvement Proposals, and James has always had his opinions about what it was actually trying to fix right. Because he always said, what is this actually achieving, right? Because it came from the perspective of building the bridges between the chains and WalletConnect was trying to more build the tools for end user applications to talk to each other and understand. And that's kind of brings different requirements about user experience and allowing more complexity around how wallets can add more chains or builds different setups. Because at the end of the day, a good wallet for me is the wallets that allows the more combinations of how people manage their wallets, right? That's what they provide. If you're a wallet, then you, you have to manage your key in this way and you don't get an option then, you know, not a really good wallet. You're very opinionated about what the user should do or shouldn't do. And the standards allow people to build whatever experience they want for their wallets and dApps. And I think that's where we actually conflicted that a lot because bridges should allow some flexibility, but at the end of the day, become very inefficient at that. And I remember me and Joel, Joel from 3Box Ceramic, we actually came up with a Chain Agnostic Improvement Proposals. They use as multiformats, and it was more efficient and more opinionated, but even James had some comments on it. And it was very interesting because like, this is what I do, with WalletConnect, it's all about standards and there's always going to be disagreements about what are we trying to achieve. And I think if I had to put a simply Chain Agnostic Improvement Proposals is just trying to achieve interoperability, optimizing interoperability, anyone can build a dApp, a wallet, just like they want, and we know how they will interoperate with each other.

Anna (00:50:41):
Going back though, to the MultiChain world, I also have heard it through the polkadot kind of lens, this idea that like individual chains would serve different purposes. That like the actions on a blockchain could be split between these different chains and potentially like these chains could be significantly different as well. Are we looking at a future from the wallet side, like where you're actually acting on multiple networks at the same time, and that has an impact on an outcome on one other chain. Like, I'm just trying to imagine when you start enabling all of this action and potentially having it happen in parallel, like, what does that mean as an experience?

Pedro (00:51:22):
I think that a lot of people will have different opinions on this and it's more about what do different needs applications have, right. And I'm not sure if each application will become its own chain. Like, I think it's kind of like a spectrum. I don't think all applications will be in the same chain, but I also don't think that like each application will have its own chain, but I think there's kind of like this sort of in the middle of, oh, I have certain requirements and chains optimize for different requirements, right? You can see that Ethereum definitely fits the requirements for financial products. Does it fit the requirements for NFTs and DAOs? I think that there will exist changes that optimize for those much better. And maybe they'll migrate for that. And it might just be whether the block time is shorter or slower, whether the requirements for a node are bigger because do we need everyone to run a node on a mobile phone? Or is it fine if it needs to be like this a thousand dollar a month, AWS bill to run a node. Those are the requirements that actually are going to provide this MultiChain diversity, because it's not like an application needs its own chain, but an application might not be satisfied with the properties of a certain chain and it's to create a new one.

Anna (00:52:54):
Yeah. I actually wondered about this. Like, could you imagine where like you're using a wallet to vote in a DAO that lives on one chain that will affect an outcome on another?

Pedro (00:53:04):
I think that's a good use case that you just mentioned because that will require MultiChain, right? You need to vote in another one, but then you need to make a financial transaction on another one. So are you as a user going to connect to this dApp where you are going to make a vote and a financial transaction and then have to switch networks while you're doing it. Isn't it much better if dApp just says, oh, please connect me to chain A and B. And then one of them is a Cosmos and one of them is an Ethereum one and you're going to have to send transactions on both of them, and WalletConnect kind of fits that bill for the WalletConnect 2.0, because it just understands that these use cases will exist. And even on Ethereum we saw this with bridges between EVM chains. If you ever used the xDai bridge, you have to send a transaction on Ethereum Mainnet and one in xDai. So there's this awkward path where, oh, sign this transaction and then you get blocked and like, wait, you need to switch. And then you switch and then you do the other transaction. And it would have been much simpler of like, just tell me to send two transactions at the same time.

Anna (00:54:12):
Wild. Although this sounds like this is a lot of work on the wallet side, again, this isn't WalletConnect's work so much. This is like a wallet needs to have the interface to be able to like shuffle through these things.

Pedro (00:54:23):
I think UI's are adapting and I've seen already Rainbow adapt their UI Pillar Wallet also adapted their UI to be more MultiChain. IMtoken was also very MultiChained from the beginning. Trust Wallet, as well, like they even don't think about it as chains, but they think of it as coins. You see, like everyone has their own way of organizing their wallets. So the MultiChain capabilities are already there. This is more about how are these going to interface with the dApps, are these possible? And today they're not, that's where WalletConnect 2.0 comes in and WalletConnect 2.0 is not even just about chains. We actually have a project that's using it purely for DIDs. So they basically just kind of like ignore the blockchain capability and they just have this ability of remotely signing and verifying credentials to WalletConnect.

Anna (00:55:24):
Interesting, DID being 'decentralized identification'.

Pedro (00:55:28):
Correct, so the decentralized identifiers, which is a standard, even part of the W3C community, and it will soon be part of what we consider the web, eventually.

Anna (00:55:40):
So you mentioned these Chain Agnostic Improvement Proposals, like a couple of times now, where is that actually at? Like, what's the status of that? And also for anyone who's reading the show notes afterwards, this is usually shortened as 'CAIP' but that we're talking about the 'Chain Agnostic Improvement Proposals'.

Pedro (00:55:59):
Yeah. As I was explaining WalletConnect 2.0. You can't miss talking about CAIPs or Chain Agnostic Improvement Proposals because it became like a core component to how WalletConnect works because I didn't want to create the WalletConnect standard. I wanted to create something that it fits for more use cases outside of WalletConnect. And we have started to see happen. For example, the first use case was actually Starname, which basically provides a naming resolution for different chains. And they have like this Cosmos chain for resolving addresses and they use CAIPs to actually understand, give me an address for this chain ID and it uses the CAIP 2 and then it returns you an account with the CAIP 10, and that's basically the same pattern that WalletConnect uses as well, where a dApp asks a CAIP 2 chain ID and wallet returns a CAIP 10 accounts identifier. We have other use cases like Ceramic Network, which provides you with a network for smart documents using the DIDs, and then you can link your blockchain accounts, using CAIP 10.

Anna (00:57:15):
Is there anything else that we should know about for the WalletConnect 2.0?

Pedro (00:57:20):
I think I've covered pretty much the most important parts. At the end, the WalletConnect 2.0 is a maturing point on top of the experience of two years of v1 that not only provides MultiChain capability and more stability, but it also opens up to a lot of other use cases like the DID world that it didn't fit before. So it's something that's, as a protocol will become more useful to more people.

Anna (00:57:51):
Nice, would you say between WalletConnect and MetaMask, do you know which one is used the most?

Pedro (00:57:57):
I think MetaMask would be used more because they counted like 10 million active users or something recently on one of the posts. And I think our peak, in terms of like server usage, we haven't hit the 1 million yet, at least not in the same day.

Anna (00:58:21):
I see. I see. Okay, but do you see yourselves as competitors or are you integrated with each other?

Pedro (00:58:28):
Yeah, we are integrated, most of the time people think of MetaMask as the MetaMask the Chrome extension, because that is definitely not compatible with WalletConnect as a protocol, but MetaMask mobile, the mobile application uses WalletConnect as well.

Anna (00:58:45):
Interesting. How is WalletConnect actually funded? So you talked about it like it was grants and it was a small team and a lot of outside contribution. Is it a company now or is it still a project?

Pedro (00:58:59):
Today, it is a company with seven people.

Anna (00:59:02):
Okay, nice. I love that size by the way. That's the best size team I think. So how is it funded?

Pedro (00:59:08):
WalletConnect was funded by grants until 2021 this year. And earlier around spring, we actually raised a seed round and we started to have a much more product-focused approach. We see ourselves as a product company that builds on top of the protocol that we open source. And that basically is a response also to the stability issues that we've seen, because there could be a world where everyone's self hosts infrastructure for WalletConnect, but then we saw everyone actually just using our infrastructure and that's build just became bigger and bigger and bigger and bigger and bigger. And now we're basically like the Infura for WalletConnect. And that's what the team focuses. The team just focuses on building the infrastructure and we are actually going to build a dashboard for developers to register and expose API keys. And that's what we call the WalletConnect cloud. The WalletConnect cloud is just the cloud-hosted version that is just as compatible with other WalletConnects it, just run on our infrastructure, just like it is today.

Anna (01:00:29):
Is that sort of your vision then? Is it like other teams would run their own WalletConnect instances in a way like they would run the servers and yeah, then I think you mentioned this earlier, this like decentralization of it.

Pedro (01:00:41):
Yeah. Yeah. So the good thing about the Waku network that we use is that allows anyone to run their server and not have to kind of like agree on which server it uses. So that means that people can use our WalletConnect cloud, but if you self host, you can also use your WalletConnect server, and it will just talk to our servers for the Waku network. And there can be some competition in service providers. So we actually see, WalletConnect cloud, is going to evolve into this WalletConnect network. And that's why we hinted a EthCC, that there is a strong possibility of a token because we see a lot of potential on building services and competition around this infrastructure, because it has a lot of demand.

Anna (01:01:30):
Interesting. Let's talk about the future of WalletConnect. So you mentioned WalletConnect 2.0, is that already out or is that coming out? Like what's the timeline?

Pedro (01:01:40):
WalletConnect 2.0 hit feature freeze early summer and the JavaScript implementation has already been used in Celo Wallet and Valora so actually if you're using WalletConnect in the Celo community, it's the WalletConnect 2.0 version because they didn't need the backwards compatibility with WalletConect v1 obviously, but Ethereum community is still using the WalletConnect v2, but recently we've had people from Cosmos and even Stellar working with WalletConnect 2.0 but that's still in development phase. That's not in production, but one of the biggest blockers once again, is the Swift and Kotlin implementations that are taking a little longer to hit production.

Anna (01:02:24):
Ah, okay. But they're on their way?

Pedro (01:02:26):
Yes, yes. They're in progress and we actually have in-house developers.

Anna (01:02:31):
Cool. Tell me a little bit about the roadmap, what is coming up?

Pedro (01:02:36):
So one of the things that we see is that WalletConnect as the signing protocol that we see today is just one of the components that we want to tackle. We think that the wallet experience will have a lot of infrastructure that needs to be built. And the first thing that we actually want to do is WalletConnect notifications. And the protocol is actually already designed to do these, but we just need to actually build the integrations for them because WalletConnect notifications are kind of just like WalletConnect sessions, but they actually, they're more passive in a sense where, when you're actually signing the users present in the moment, interacting with the actual application, a WalletConnect notification is more like a passive session where the dApp is actually alerting you to, an event while you were outside of the application. So notifications is the first thing we actually wanted to offer for WalletConnect cloud users. And we want to make it as simple as possible as part of our cloud infrastructure offering. And another thing that we want to actually provide is analytics because we actually seen a lot of demand for people want to actually understand their users better. Most analytics are so web 2 focused that they're kind of against the ethos of web 3. It's a very thin line. Yeah, exactly. It's very hard to actually hit the sweet spot where you want to understand your users better, but you also want to provide them privacy. So because WalletConnect kind of sits just in the middle, we actually are able to understand usage with privacy. So that's actually something that we actually want to do as an offering also for the WalletConnect cloud.

Anna (01:04:36):
Cool. Do you imagine using zero-knowledge proofs for this?

Pedro (01:04:39):
Maybe I actually, I was reading about that the other day and it's very good because one of the biggest concerns of analytics is it's actually identifiable, but even if you make it non-identifiable, you still have a great insight into your user base.

Anna (01:04:58):
Well, this is the whole problem with analytics, generally, even if you anonymize and you try to kind of create some sort of like, you know, lack of identifier, just the mixture of behaviors can often lead you to identifying. In this world, do you have to worry about vulnerabilities? Do you worry about like hacks and stuff like that?

Pedro (01:05:17):
The only vulnerability is like people when they actually connect to a dApp, they get this popup that says, oh, you UniSwap wants to connect, but there's no actual authentication of that information. And some people pointed out, oh, that's a vulnerability, but it's not because the user is looking at the app. If you were to mimic that connection, it's still very easily detectable because then you just like, get a different connection, right? So I've like played out so many scenarios where this could be a vulnerability. And I think most people actually lose money and phishing scams then actual complex, like trying to mimic an app and sending a transaction to the wrong place. Yeah, it's such a thin layer that WalletConnect touches. I kind of made it on purpose that like it provides enough utility without liability, but when people bring up vulnerabilities, I'm like, it's not really, it is, but we're talking about an impact that it's so minimal that anyone can just tell, oh, it's the wrong app. And they will just think it was a mistake more than actual vulnerability. If you connect to UniSwap and then you can tell.

Anna (01:06:51):
Cool. Pedro, thank you so much for coming on the show and going on this WalletConnect journey. I got a chance to ask a lot of questions that I've had for a while about this whole world. Yeah thanks so much for kind of going into it.

Pedro (01:07:06):
Thank you for letting me share with the audience and the WalletConnect journey and where are we going.

Anna (01:07:11):
Yeah. And good luck with everything.

Pedro (01:07:12):
Thank you.

Anna (01:07:13):
I want to say thank you to the podcast editor Henrik. I also want to say a big thank you to Andrey, the podcast producer, who's actually going to be leaving us I think this is his last episode and I want to welcome Tanya. Who's the new podcast producer to the show. Andrey is planning on working on a new project. So Andrey, I want to wish you luck with that. And since we're on the topic of team, I do want to let you know that we're looking right now for someone to join the podcast, to work with us on marketing and events. So if that sounds like you or someone you know, please do get in touch with us. Cool. All right. Thanks again, everyone. And to our listeners. Thanks for listening.

