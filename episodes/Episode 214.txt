Anna Rose (00:00:05):
Welcome to zero knowledge. I'm your host, Anna Rose. In this podcast, we will be exploring the latest in zero knowledge research and the decentralized web, as well as new paradigms that promised to change the way we interact and transact online.

Anna Rose (00:00:27):
Today, I chat with Emin Gün Sirer, the CEO at Ava Labs and the founder of the Avalanche network. We chat about his early experiences that led him to get interested in distributed systems research. We also map his journey from his work as a professor at Cornell to his work on Avalanche. One of the leading smart contract platforms with EVM compatibility. We dig into Avalanche's novel consensus mechanism, which uses the sub-sampling technique. We look at the architecture of the network. We talk about bridges and more, but before we start in, I wanted to remind you to check out the ZK Jobs Board, especially if you're looking for new opportunity to work with the teams, building ZK tech and tools, we've added the link in the show notes. Be sure to check it out. I now wanna pass the mic to my producer, Tanya, to tell you a little bit about this week's sponsor

Tanya (00:01:11):
Today's episode is sponsored by Polygon. Polygon is one of the top Ethereum scaling platforms for developers with over 130 million unique user wallets. They're committed to bringing web 3 to the masses by improving scalability and fostering the network effects of Ethereum. They're known for Polygon POS chain. One of the most popular chains built on top of Ethereum clocking even more daily active users than Ethereum itself at times. But the team is actually working on a spectrum of solutions, solutions like Polygon Edge, which offers developers the capability to build sovereign EVM compatible chains, as well as a number of fully secured EVM compatible, zero knowledge rollup solutions like Polygon Hermez, Polygon Miden and Polygon Nightfall - which is built in association with Ernst & Young, as well as the most recently announced acquisition of the Mir protocol. Now known as Polygon Zero. These solutions inherit the security of Ethereum and use the power of Zero Knowledge. Over here at the podcast we've been tracking Polygon's journey and have recently had Bobbin Threadbare from Miden and Jordi & David from Hermez on the Podcast to talk about their respective projects. We strongly recommend you check out those episodes so you can learn more about their vision, project roadmap and progress so far. So thanks again to the Polygon team. Now here is Anna's interview with Emin from Avalanche.

Anna Rose (00:02:28):
So today I'm sitting with Emin Gün Sirer, the CEO at Ava Labs and the founder of the Avalanche protocol. He also used to be a professor at Cornell. I wanna welcome you to the show.

Emin Gün Sirer  (00:02:38):
Hi Anna. Very nice to be here. Thank you for having me.

Anna Rose (00:02:40):
Cool. I'm excited to have you on, we actually met, I think 2-3 years ago, and I sort of, I was like, Hey, maybe you should come on the show and then we just didn't, but it's really great that we got a chance to reconnect and that we finally bring you on.

Emin Gün Sirer  (00:02:53):
Where was that? Was that in Berlin?

Anna Rose (00:02:55):
Yeah, it was the Web Summit 2, I think. Okay. Sorry. The Web3 Summit.

Emin Gün Sirer  (00:03:00):
Yeah, Web3 Summit in Berlin. I think it was in in the former East Berlin area in a fantastic house that used to be the radio for, for for Eastern Germany, Germany funk house. Yeah, funk house. That's what it was called. Totally. It was the funk house. Yes.

Anna Rose (00:03:16):
That's a great venue. Cool. Okay. So yeah, I think we wanted to dig into Avalanche on this episode. I, since it's the first time that I have you on the show, I think it would also be great to get to know you a little bit. You have been known as an expert distributed systems researcher. That's sort of the space. I understand that you're in, I'm curious about like, where did you get started? Why do you choose this field in the first place?

Emin Gün Sirer  (00:03:42):
Well, that's a really interesting question. I mean, do you really want the actual personal answer or do you want the, the bogus answer? I'll give you the actual personal answer. And and I think it started out when I was a kid, I grew up in Turkey and I grew up in a country where, you know, everything done and everything is well done, I would say, but to a standard that's sort of 97% there, I grew up in Istanbul with these drafty houses, the windows closed, but they closed, you know, and then they let some air in the doors closed and then they are not really square in the frame. And I remember going to this American High School that I got into it, you had to take an exam when you were 11 years old. And if you were in the top 110, you get to go to this American school. And so, so there I was in this giant building, it's called gold hole and it's got these ginormous, it's the very first high school American high school built outside of the US. It's got these ginormous doors built to American standards. And I remember opening this door and closing with a satisfying click behind me and thinking, oh my God, this is exactly how everything should work. And and if you, if you remember those days, you know, you would show up to, to a bank and things wouldn't work. They would be like, our systems are down. Can you come back the next day? You would go airport. And the the overhead displays wouldn't work. So so that's how I grew up. And that I think was the formative thing that forced me to think, Hey, the world can be built out of components that are completely reliable. We can and should be able to engineer systems that anybody could rely on. And if, if we're not doing that, everything else is a luxury, you know, as, as every sort of geeky kid in, in, you know, in his teens, you know, I was interested in AI. I was interested in, you know, building robots that did like creative things and so on. And I thought, that's the luxury mankind can't have, we gotta get the basics down. You know, I'm here, I live in a country where the doors don't close and and here we all live in a world where the information systems are down the whole time down the whole time they're down, like quite so often that you can't really use them. And the better world is, is definitely possible. So, so that's sort of my creation story. It was so clear and preordained that I go into into systems and start out in operating systems. I was always a low level system builder. I love building things that, that give you a strong guarantee for how they should work. I love building reliable things. I love building things that have a very strong reason for why they should work every time without exception. So that was my background.

Anna Rose (00:06:21):
That's interesting. What era were you getting into this academically? Like what was happening around when you decided to kind of go into exactly the field you were going into? What was, what was the state of the art at that point?

Emin Gün Sirer  (00:06:36):
So when I was a teenager the PC revolution was just beginning to take place. I was a Commodor 64 kid. Okay. So so there's a, there's a crowd out there that knows exactly what I'm talking about, and I love you all. You know, we, we are, we are kindred spirits. It was a fantastic time of experimentation people building their own machines or people taking these Commodor and, and do things on them that is so close to the hardware that that's just really creative. This kind of sound you could get out of a Commodor 64, you know, it wouldn't be possible to get that kind of control over the sound chip for another 25 years. Right. We lost that. And then it came back, but it took, it took a decade. Anyhow. So that was the era when I was a teenager and I was just being exposed to computers. I, I'm not a dinosaur dinosaur, I'm not a mainframe kind of person. I started out with personal computers and when I went to grad school, so I decided, you know, Hey, after I went to Princeton and I got a scholarship there and it was a lot easier to go to Princeton with a scholarship than to, to, to, I had to take a placement exam in Turkey. So I left the country, came to the US and and then I thought, Hey, I wanna study more. And and if you, if you go into a PhD program, they pay for you. And if you go to a Master's program, you have to pay. I was like, well, I kind of wanna do I wanna learn more? So why don't I do a PhD and leave after a year or two? It was the initial thinking. Obviously, once you get into that, you get sucked in...

Anna Rose (00:08:04):
Oh, you are stuck in the academic vortex. Huh.

Emin Gün Sirer  (00:08:07):
Absolutely. It pulls you in and, and the process of solving things, the process of sort of figuring out things that mankind doesn't know how to solve it's. So, I mean, you know, those of you who did graduate studies, you know, how exciting this is. So that sucked me in and around that time I think it was the era when I think in the world, the biggest thing that was happening then was the internet. So Mozilla I think got released the second month I was in graduate school and the dot com boom was happening then. Cool. A lot of people around me were building.com, web crawler - the world's first search engine was built in the room right next to mine. So there was a lot of excitement in the air. So, you know, that's how I started. I was building systems, low level stuff, and I always loved things that had a life of their own and distributed systems that sort of came together to have some emergent behavior, some emergent property. And that's what got me excited in about crypto in the first place about peer-to-peer systems in the first place.

Anna Rose (00:09:06):
Yeah. And that's, I'm kind of trying to place it. So like Napster was sort of there and that's, I mean, that was my introduction into peer to peer systems, for sure. And I think a lot of folks in my generation, I'm not that much younger than you, I think maybe like five, six years, because I didn't have the Commador, I mean, I did use the very, very, very old Apple, the single unit the, for like my first year, you know, when I was like five or something like that I just aged my, I just dated myself for everybody who's listening here, but um. Yeah. But yeah, I mean, I'm just wondering, like what, what did you make of Napster? Were you paying attention to that kind of thing already? Or was that in a field that wasn't really interesting. Yeah. I'm curious what that meant.

Emin Gün Sirer  (00:09:53):
Squarely on top of everything I cared about. Napster came in and showed that, that we could build services in an entirely different way. So prior to Napster, everybody was building client server services, right? So Facebook, Google, these are client server. I, I I'm a client, you know, Zuckerberg, around's the server. I go to Zuckerberg for service. I am beholden to him. He is like a vessel. I'm like a surf I'm, you know, I, I begs for service. He collects information on me. He sells it. He does whatever he wants. I have no visibility into his operation. That's client's client server computing for you and Napster showed the world what you could do with a different architecture with a peer to peer architecture shortly after Napster came Limewire. And and so, you know, along with Napster, I think there was a, there was a problem that we all noticed. And do you remember the leaching problem?

Anna Rose (00:10:44):
I don't think I knew that term.

Emin Gün Sirer  (00:10:47):
Okay. So the, the issue was when you wanted to download their file, it was, it was often difficult to find people who provided that file to you. The people wanted things they didn't want to want to provide, right? This is a common problem. Anytime humans are involved. So back in 2002, this, this was a big problem. Limewire had arrived and this leaching problem was becoming an issue. One of the first projects I did as a young assistant professor was to look into the leaching problem and say, Hey, wouldn't it be if I could solve the leaching problem. And and isn't it kind of obvious, you know, in retrospect, it'll be very obvious. Isn't kind of obvious that if you had some magic internet money that nobody controlled and people had to pay for things, you know, blocks to download, they would ultimately run out of money, the magic internet money, and then they to provide blocks to get the money back, you know, so they could continue participating in the system. So I built a system called Karma in 2002, it was published in a peer review journal in 2003. So everything I'm saying is easily verifiable and checkable karma was a system that that used proof of work to mint coins. It is the first such system that was implemented that actually has that concept in it. So this predates Bitcoin by about six, seven years.

Anna Rose (00:12:07):
Why wasn't that Bitcoin though? What was different about the work that you had produced? Like what did Bitcoin add?

Emin Gün Sirer  (00:12:14):
Bitcoin did add quite a bit. And and it got it, there were multiple reasons for why it was a huge success. Bitcoin was a huge success and Karma, Karma was a huge success academically, but it's obviously, you know, doesn't compare even to, to Bitcoin in any shape or form. So technically Satoshi came in and added one technical idea on top of Karma in that he combined the minting process with the consensus process. I was relying on a, on a, what we call a classical consensus protocol to maintain balances. And Satoshi said, you know, forget all that classical stuff that they teach you in school. It's fragile. It's not open, it doesn't scale well. And and so he came up with his own system, which also doesn't scale all that well, but it's at least open and it's robust. So so that, that was a brilliant insight that, so, so we have to give huge kudos to Satoshi for that technical part. In addition, his timing was impeccable. So Satoshi came right after the 2008 crisis. His vision was all encompassing. He was like, you know what? This, this thing, Bitcoin is a system to take down and, and compete against Fiat currencies with - it's a competitor to gold, it's a competitor competitor to the dollar. And that's what he went in with. And he was anonymous. He could take on the regulatory risks. And so on, in contrast, I was a known entity. I wasn't anonymous. I came after 9/11 at the time when people were really worried about terrorist financing. So you know, people wanted to get rid of all, all forms of payments online that could be that could be used by terrorists in any shape or form. So so timing and my, my division was also not as expansive. It wasn't, let's take down everybody. It was, Hey, let's add a new payment mechanism for only peer to peer file, file transfers.

Anna Rose (00:14:07):
Where were you? I don't know if you remember this, it sounds like, I mean, with such a breakthrough that kind of references, or has like echoes of the work you had done, where were you when you saw it? And did you realize it, was that what it was right away or did it take a while?

Emin Gün Sirer  (00:14:19):
Oh, absolutely. So I looked at it and I thought, oh, this is brilliant. Absolutely brilliant. So there are a couple of things that every every academic does when they first see a new piece of work. So first thing you do is you try to fit it into your, your well known pigeon holes. And I remember distinctly thinking, oh, this doesn't fit into any of the pigeon holes, amazing work. So it's novel for sure. It's, it's fantastic. And novel, second thing you do is how does it compare to other work I've done and does it cite my work? You know, that's a very common academic missed part. And Satoshi was not aware of the work I did on Karma. He's, he's not you know, he doesn't come from a traditional academic background. He he's a self-taught person probably. And so so he's not aware of it. And I was like, okay, well, that's fine. Not a big deal. And then the next thing is okay. And he makes a bunch of claims. So are they true? And and one of the striking things about, about Satoshi is he's got some amazing insights and he's got a, a huge technical breakthrough, but some of the claims he made were not true, but at the very first reading, I did not to realize that I, at the first reading, I thought, oh, this is brilliant. And if the claims are true, it's amazing. But he doesn't have proofs for his claims. He just sort of makes a gut sort of a gut call saying, oh, you know, this is, this is what it does. This is how it works. And and there were properties of his system that he himself did not characterize well and did not understand as well. So me and Ittay Eyal ended up looking more carefully and we decided thinking, oh, we decided that, Hey, this deserves much more scrutiny. Let's see if any of these claims about the security of Bitcoin are true and let's try to prove them, you know, either prove them, you know, for real, or you disprove them and you have, an interesting result. And it turned out that that work led to this other work that we did called selfish mining, which showed that, you know, certain things that Satoshi said and, and certain things that people thought about Bitcoin were just false. And and there was certain attacks against Bitcoin that people could launch.

Anna Rose (00:16:27):
Were you doing this work while Bitcoin was being developed? Like, was this something that was being shared in those communities as it was coming together? Or was it something more like after it had already been implemented, you, you were able to track that?

Emin Gün Sirer  (00:16:40):
So Bitcoin was always in, in the process of development, so to speak.

Anna Rose (00:16:45):
Yeah, it's, you could kind of say it still is, but slow now.

Emin Gün Sirer  (00:16:47):
It still it's slow down quite a bit now. And and it stopped to stop new, you know, seeing big changes happen. At the time there was a community around Bitcoin trying to make it big, there was active development going around Bitcoin. But the work we did was not shared within those, that community. We were working as an independent academic group and you know, we, we just did our work independently and separately from everyone.

Anna Rose (00:17:14):
Okay. Got it. I know that there's actually a few other stories that we could touch on. And I know I, I read the I read, I've read two out of the three Ethereum books, I think the third one still coming. And you're in one about like the DAO. And I know there's a whole story of like Ethereum and Phil Daian worked with you or is like, was there a connection between the two of you?

Emin Gün Sirer  (00:17:35):
Yeah. He was a student at Cornell. Yes. And we, he didn't, he never worked for me though. Okay. So he was not my student.

Anna Rose (00:17:40):
Okay. Okay. But I feel like whatever in the story I heard you were talking to each other or something...

Emin Gün Sirer  (00:17:45):
We were so there, it was the, the, around the DAO Hack, prior to the DAO Hack, I looked into the, the code of the DAO. And it was a June day, if I'm not mistaken. And I had this cold, I had, you know, these summer colds that you get and, you know, your eyes are tearing and your head is exploding. And I looked at the code and around line 666, I saw this bad pattern. That's not supposed to be there. And I thought, you know, this looks so wrong. And but you know, as a, as a researcher, you, you know, you get used to making hypotheses and coming up with ideas. So I usually use a smart person to bounce them off of, you know, I have a gazillion ideas for potential leads, but you know, a lot of them don't pan out. So I wrote a message to Phil Daian saying, Hey, I think there's a problem here on line 666. And but I was, you know, I was just kind of reeling under that summer cold. And Phil got back to me and said, yeah, you know, there's some issue there, but it can't be exploited. And and he was wrong. So it's okay. Yeah. That was the exploit. That's how the DAO got exploited.

Anna Rose (00:18:52):
That's how I, I mean, that's what I saw in the, in the book. Yeah. I forget which one, one of the two that I've read, but yeah. I wanna, I wanna know, like at what stage was Avalanche at this point, like, so we're talking, you know, we're talking 2008, you see the Bitcoin paper 2015. Is that the DAO Hack? 16?

Emin Gün Sirer  (00:19:14):
15, 15, I think.

Anna Rose (00:19:14):
Yeah. And like, at what point did Ava gel for you? Like when did you start working on it?

Emin Gün Sirer  (00:19:21):
It goes back a long, long time. Okay. I mean, it goes back a long time in the it's I've been thinking about lightweight consensus protocols for a very long time, like decades. And it is the holy grail, right. To have something that scales something that's fast, something that's cheap, you know, it's, it was, it's it, we know what we want. We always knew what we wanted. And we knew classical protocols were absolutely horrible. And so there are all these jokes in, in distributed systems circles about, oh, you know, oh, you think this is inefficient. Wait until you see Byzantine fall tolerant protocols, or wait until you've seen a consensus protocol. Those are really inefficient. Oh, wow. So so classical protocols were well known to be crap. And you know, they're making a comeback, everybody and his brother trying to take an old protocol and bring it back in the form of a proof of stake chain right now.

Anna Rose (00:20:13):
Interesting.

Emin Gün Sirer  (00:20:14):
But but we knew that they, they were bad and, and Satoshi's mentioned, Nakamoto consensus or proof of work systems. You know, they they're fine, but they consume a lot of energy. They're terrible for the environment, and they're very expensive to run. There's constant leakage going on from your store of value. So we always knew we were wanted something better, but it was, you know, you know, it's just, sometimes you just run into a brick wall. I know that I didn't have any ideas on that front. I know that all my colleagues had no ideas. People were just making incremental small additions to classical protocols. And and it kind of looked hopeless, but around 2015 again, right before the DAO Hack, I started thinking about Ethereum 2. We spent a day and a half with Vitalik, Vlad and others on how we could improve Ethereum. And, and I learned about the difficulty bomb. I remember, you know, being told that the, the change, the shift to to proof of stake was imminent for Ethereum. And and they were trying to come up with the protocol, the new protocol and they, they listed all the there's, everything they wanted. I, and I was like, well, look, guys, you know, the things you want are not possible with the technology that we've got. So, so we gotta think more carefully about this. Anyway, long story short, I started thinking about it. And sometime around 2017, I had this insight that one perhaps use a different mechanism for consensus that no one had ever thought of using before. So classical protocols all involve all to all communication. So imagine you are in a parliament, you're trying to pass a law. Every single Senator ends up checking the bill to see if there are enough signatures on it. This is how classical protocols work. So the process of creating a block is essentially a process of collecting signatures on it. So this is what Ethereum 2 is trying to do. This is what Tezos does. This is what all the proof of stake protocols are trying to do. And so that doesn't work well, it works well at the size of a Senate, but, you know, if you got 200 people and all of them have to hear from 200 other people, that's 40,000 messages. That's a lot of data. And if you have a thousand people, it's a million messages. If you have 10,000, it's a hundred million, it just goes out up with N squared. So it's a terrible way to build your system. So it doesn't scale. So I was like, okay, that's classical. That can't work. I don't wanna do Nakamoto Consensus and proof of work. I don't wanna destroy the environment or be part of that. So so I thought, Hey, there is another process maybe. And and I remember talking to Kevin Sekniqi, who was a graduate student at the time and saying, Hey, how about this process of repeated sub-sampled voting, which is a fancy term that simply says, you know, I'm, I'm not gonna be in a Senate. I'm gonna be in a very, very big stadium. And I want to, I want to check signatures from almost everybody, but I don't even know everybody in the stadium. And I certainly don't even agree with you on who's in the stadium. It's just so big and complex, and it's in flux and it changes dynamic. But maybe just maybe if I were to check signatures from my friends and they were to check signatures from their friends and we repeated this process a bunch of times, would we be able to get assurance that's essentially as good as checking all the signatures from everyone?

Anna Rose (00:23:45):
Sounds similar to like gossip protocols a little bit. It's a, is it in that category?

Emin Gün Sirer  (00:23:50):
Okay. It's exactly. So, but Gossip is solving a much simpler problem. Gossip protocols are very well known. They're a Cornell invention. They're invented by people about 20 years my senior. And and they're the Gossip protocols are great for disseminating information. So I've got something I want the world to know. I send it out, but they don't, they don't guarantee Consensus, Consensus is a far more complicated problem. Consensus is all of the correct nodes have to come to agree on the same decision, even though some people are, are, are doing all some malfeasance and trying to trick you and so on. So so it's very, are similar to Gossip protocols and how it works, but it's solving a far more difficult problem. And I mentioned it to Kevin and we ended up writing a simulator and I remember him rushing to my office saying, Hey, you know, this is amazing. Like this thing, it just, you know, it's, it's, it's logarithmic or maybe even faster. And it's just it amazingly fast in how it converges. And we weren't expecting that. And so, so that got us started down the Avalanche path and and the rest is history.

Anna Rose (00:24:55):
Let's talk about the Consensus part of this actually. So you're mentioning, you've, you know, you've sort of placed the proof of work proof of stake. We actually did an episode in 2020 with Ittai Abraham, and we talked all about consensus protocols and it was Byzantine fault tolerance. And what is it? PBFT - SPBFT. We kind of went through a lot of these. I'm gonna link to this in the show notes for some background. We talked about HotStuff. Can you help me understand where Avalanche fits? I know we talked a little bit of a, we talked about a spectrum between like very concrete, like for sure correct. And sort of a little bit more optimistically, correct. I think there was a spectrum there. Yes. So where like maybe help and by the way, I'm sorry, I'm paraphrasing. This people should actually listen to him. Explain this correctly, but yeah. Where, where does Ava fall and what, or Avalanche and actually is it, wait, is Avalanche. Avalanche is not the name of the, the consensus protocol, is it?

Emin Gün Sirer  (00:26:03):
It is, it is Consensus protocol is Avalanche. It works kind of like a, like a snowflake rolling down the a hill turning into a snowball, turning into a giant Avalanche.

Anna Rose (00:26:12):
So that's where it came from.

Emin Gün Sirer  (00:26:14):
It is it's supposed to be evocative. Cool. so so just to summarize the space, the, the distributed systems area is not a is not a very old area. It's been around for 45 years. So in those 45 years, there have only been three different approaches to the consensus problem. One is classical consensus protocols, and people may have heard of PBFT. They may have heard of Tendermint and Tezos and Ethereum 2, et cetera. These are all in the classical domain. They all involve all to all voting. Okay. And, a second approach that came you know, in 2009 from Satoshi Nakamoto is proof of work also known as Nakamoto Consensus. So any coin that you see that has mining in it is using proof of work. And then those were the only two methods by which people knew how to achieve consensus in a, in a setting like the internet. And then the third and final chapter in the saga is the Avalanche protocol. It happened in 2018 and, it uses a mechanism that's entirely different and I would say groundbreaking and unexpectedly. So, so it uses a different mechanism. And as a result, it's super fast and super cheap.

Anna Rose (00:27:34):
Where do you put something like Tendermint in this story though? Cuz like, is that, that was, I, I also don't know the dates offhand, but I feel like that's around 2015 where that was kind of developed. What would you call that classic or is that, was that an evolution as well though?

Emin Gün Sirer  (00:27:51):
No, no, no. It, it does have it does have some improvement. So history is a, is a funny thing, right? It's not, you're not always going from a to B and then to C. What ended up happening is we had classical protocol then and, and the, and one of the good ones is called PBFT. It was invented in 1999. And it's used in a lot of services if you go to Google's - if you go to Gmail in the background there is a protocol that's essentially a simplified version of PBFT that's directing you to a server.

Anna Rose (00:28:24):
I think the P there was like partial, Byzantine fault tolerance, practical, practical, sorry, practical, practical, Byzantine fault Tolerance.

Emin Gün Sirer  (00:28:31):
Because everything that came before PBFT was was, was, was trying to be Byzantine fault tolerance, but it was so inefficient. Okay. And PBFT is like the one that's acceptably, not terrible, but it's still pretty darn and bad.

Anna Rose (00:28:44):
Is this kind of the optimistic version where it's like, you're you kind of do, you know, that kind of expression of just like you, you're doing, you need to reach a threshold for you to feel confident that it's working, but it's not, it's not full confidence.

Emin Gün Sirer  (00:28:58):
No, the PBFT doesn't have that. I know what you're talking about and it's Ittai Abraham probably talked about that other work. But but PBFT does not have that component. PBFT is a fully deterministic, got it. Probability one kind of a system. So I don't wanna get into too many technicals, but the history history arc goes as follows. So we have classical protocols. Then we have Satoshi come in and Satoshi gives us this vision that, Hey, you can build really high value systems. And you can in fact approach this problem, probabilistically, right? Bitcoin, doesn't give you an entire entire guarantee. There is a chance that somebody will, will will mine a lot of blocks and revert history. It's just incredibly unlikely. It's exponentially unlikely, the deeper, the blockers buried. So, so we have classical, then Satoshi, and then you have people going back and revisiting classical things. And they're like, Hey, we want the benefits of what Satoshi did, but we also don't want mining. And we want a much faster, much more scalable protocol. And now we're stuck and we don't know what to do. So why don't we go back into history and take one of these old ugly protocols and put some lipstick on it and see what we get. Okay. And and there was a lot of lipstick on the pigs back then, you know, whenever around now. So people are trying to resurrect these protocols. They put some blockchain makeup on them, you know? So Tendermint ends up building on PBFT. It adds a small twist that makes it a little bit more efficient in one particular scenario. But at the core of it lies PBFT and it's, it's a PBFT is a sound protocol. And so it's great to be building on a sound protocol. There are also many protocols that are not even sound, they just crash. There's the wrong and people are putting their life savings. And and if you're somebody who's technically savvy, you're like, Hey, I don't know what the heck is going on here. It's not gonna end well. And it typically does not end well. And Avalanche is, is a big difference there. So Avalanche is, is, you know, suddenly changes the, so we have A, B, A prime, which improves on A, and then suddenly we have C coming in and C, C is the Avalanche. That's the biggest, third biggest jump.

Anna Rose (00:31:10):
Tell me a little bit about that change then. What is it doing differently? What, like, how would you, where I don't know where to start. Exactly. But maybe like, given those, that, that story, the proof of work, we know it's proof of stake. But yeah, what's the big shift?

Emin Gün Sirer  (00:31:24):
So in the consensus protocol behind Avalanche, there is one big difference, which is it scales, it scales in a way that nobody else can scale. And it performs in a way that nobody else can perform. Finality in Avalanche is less than a second. Even when the network is enormously big, we have a work currently of about 1100 nodes scattered across the globe on every continent. And and yet the system is able to make decisions in less than a second. And I keep advertising less than a second. It's actually 750 milliseconds. So in like two slow blinks of the eye, a transaction on Avalanche is completely immutable, it's done, it's finalized. So for comparison, that takes an hour on Bitcoin. And, and again, for comparison with my bank, it takes like five days. So we went from, we went from traditional finance to, to Satoshi's vision with an hour to to less than a second and in a, in a fully decentralized setting. So it's that's one of the biggest changes.

Anna Rose (00:32:30):
But that's, that's the outcome. I'm, I'm more curious, like under the hood, you sort of mentioned it as a big shift away from the classical consensus. Yeah. So, yeah, what's that change? What does that look like?

Emin Gün Sirer  (00:32:42):
In, in terms of its operation, the thing that, that that distinguishes Avalanche is the, the way it messages, the way it achieves consensus is by repeated sub sampled voting. So instead of trying to essentially pass a law by collecting signatures on it, potentially from a huge number of participants.

Anna Rose (00:33:03):
Okay. Got it. So it's a subsample voting. That's what you're right. Okay.

Emin Gün Sirer  (00:33:07):
That that's the subsampled voting. I think so instead of, instead of collecting signatures on every, on every block, what Avalanche does is every node checks with a small number of nodes, repeatedly, does the same thing. And so we get the power of parallel processing across the, across the network to quickly decide, or to quickly come to a decision on whether a block is valid and should be admitted to the blockchain?

Anna Rose (00:33:30):
How, how is the sampling chosen? Is it sort of a random choice of other nodes to sample? Like, yeah, I'm just kind of curious, like, how are even the hierarchies of the is sub sampling working?

Emin Gün Sirer  (00:33:41):
So the math is, is so robust and this operation is so robust that that all you have to do is just have an approximate understanding of who's in the system. So you and I don't have to have an exact match of who exactly is in the parliament. So this is a very robust protocol - classical protocols, if there is any kind of discrepancy between you and me, the two senators in the system, then they will actually break down. But Avalanche can tolerate a lot of fuzziness and, and inaccuracy actually. So as long as you and I have a rough idea of who's in the system, and we randomly pick some people from that list. Okay. And we repeat that process in a very small number of steps. We are guaranteed to be in consensus.

Anna Rose (00:34:25):
And then you, is it, is it sort of like a probabilistic consensus then? Like, you're, you're assuming, because you're randomly choosing random groups enough times, but like how, in this case though, like, when I think of like longest chain phenomenon, or like, if they're all validating, if these valid or nodes are actually writing anything, do you not end up with conflicts or clashes like clashes of what chain some of these groups think they're on?

Emin Gün Sirer  (00:34:51):
So good question. And and so one of the things that Avalanche does is indeed it's a probabilistic protocol. So what does that mean? There's a difference in theoretical computer science, between protocols that give you a guarantee of probability 1.0 versus protocols that give you a probabilistic guarantee. So one minus epsilon. And so this was one of the things that Satoshi identified, and he said, look, everybody's been approaching this consensus problem as a problem. It needs to be solved with probability one. And instead if I make it probabilistic, I can use a different technique. I'm gonna use this mining idea. And and you know, so one minus Epsilon is identical to one, if Epsilon is slow small enough. Yeah. And so that was his insight. And and as you know, you know, it's possible, it's entirely possible for a miner to come up. You know, I could run a miner right now and, and I could, you know, I could get so lucky that I find, you know, seven blocks in a row it's possible, there's a probability of this happening. The probability of that happening is far lower than the probability of me winning the lotto 10 times in a row, right? It's an incredibly unlikely event, but it's possible. And and Satoshi said, look, you know, forget these silly academics. They are always trying to achieve some theoretical perfection. And and you know, you're computing all this on a machine. That's also probabilistic. You are taking probabilistic risks all the time. So one of the things I, I like to remind people is that, you know, even as I speak to you right now, it's possible for all the air molecules to collide with each other and all the nitrogen to end up on my side of the room and all the oxygen to end up on the other side of the room and perhaps that side would then ignite. And then I would suffocate on the side. This is possible. Okay. It's absolutely possible. It, it can,

Anna Rose (00:36:43):
It's a horrible, horrible scenario though.

Emin Gün Sirer  (00:36:47):
But it doesn't, it's not a scenario we worry about. Because the probability of it happening is so small. So Avalanche is a similar similarly probabilistic system. And you know, you can adjust the probabilities, any which way you like by changing the number of people you sample and the rounds in which you do the sampling. So find an Epsilon that you are comfortable with and the system can implement that for you. And so, as a result, it provides guarantees very similar to Bitcoin probabilistic, but incredibly strong.

Anna Rose (00:37:15):
Can you share a little bit about how a chain is built with this system? Cause I mean, in some of the documentation, there's also talk of a DAG. So like it, I'm, I'm wondering if you are building it, you know, you're sampling and then there's like a, a moment a beat where like everybody submits and then you make the chain, or like how, like, how are the blocks in the chain actually being created?

Emin Gün Sirer  (00:37:38):
That's a great, great question. And it shows that you've read the Avalanche, Avalanche paper. But let me actually answer from the perspective of somebody who's now built the system. And and it differs a little bit from what's in the, the Avalanche paper because the Avalanche paper provides you with a, a smaller view. And the thing that got built is even greater, even cooler.

Anna Rose (00:37:58):
Implementation often, you know, forces innovation. I, I hear.

Emin Gün Sirer  (00:38:03):
It really did in this case, it really didn't. And we started out wanting to do just this DAG-based thing, but then we ended up doing something far cooler. So let me tell you what it is. So at the highest level, Avalanche is not a single chain system. Okay. So it's actually maintain multiple blockchains in parallel that are connected to each other. So we have multiple things we could be doing. And and one of the, sort of, one of the big innovations in Avalanche, other than the consensus protocol, is this notion that the system can maintain multiple chains at the same time. And so for example, we're maintaining a linear blockchain that is a copy of the Ethereum virtual machine. And we also have another chain on the, on the side in parallel, that is a acyclic graph that is maintaining the, the the AVAX transactions. And and in fact, if you wanted to create a new virtual machine based on a DAG, based on a chain, we could accommodate that and spin it up. And in fact, this is one of the big use cases for Avalanche. There are many enterprises that would like to have their own chains and to them, we just go and say, Hey, look, you can start your own chain subject to your rules with your own validators and and subject to whatever you want them to be know to fee regimes and so forth, or with compliance requirements that you might have that are within the same Avalanche family, but independent from the rest of the system. So that's sort of the big picture and it changed a bunch from, from what we focused on in the early days. But let, let me also get back to the specifics of of how this works. So for any given transaction one of the core ideas in Avalanche is that there is, there is this really large network that generates blocks, those blocks could be, could belong to a linear chain, or they could belong to a directed, acyclic graph either way, which everyone makes sense for the usecase.

Anna Rose (00:39:56):
With, with that option is one, the AVAX and one would be a subnet or like one of the, or the EVM one, like, yeah. Where does that, like, where would the second choice or the choice to follow single line lead you? Where do you end up?

Emin Gün Sirer  (00:40:10):
Great question. So these are all subnet decisions. Okay. so you could pick a DAG subnet or you could pick a linear chain subnet. Oh, I see. Okay. EVM EVM requires a linear chain because smart contracts require linearity. But transactions, you know, can happen in parallel and they're happy with a dag. So the X-chain in Avalanche is a, is a dag and the C-chain is a regular linear blockchain. Got it. And this decision is based on, you know, do you need linearity? You're gonna give up some performance or are you happy with not having linearity? And having things happen in parallel and building a, a graph instead you'll have slightly higher performance, but but two things can happen concurrently. And if that's going to mess you up, you know, you're a bank and you require strict ordering, then you should use a chain. If you don't care for that, then I can get you even an even faster solution.

Anna Rose (00:41:03):
In the system, the sort of X-chain and the C-chain. How does, like, do they communicate with each other? Is there movement between those two things?

Emin Gün Sirer  (00:41:11):
Yes, they can. And you can take funds from the X-chain to the C-chain or the C-chain to the X-chain. All of that communication is coordinated by this P-chain, the platform chain, the final, the third and final chain. Okay. That that tells you exactly how many chains are in the system and who the members of the chains are.

Anna Rose (00:41:30):
Interesting. And so the ones we just described X-chain, C-chain, the P-chain is sort of overarching, but would there be like if one wanted to launch their own blockchain, that was also public, would it take on a new form or would it be considered also a C-chain?

Emin Gün Sirer  (00:41:46):
No, no, no. There could, you could create an NFT chain dedicated to NFTs. You could create a, you know, Siemens chain for Siemens applications. You could create a Bank of America chain for Bank of America. You could create a US, US securities chain and put US securities subject to US securities laws on that chain. You could create a data chain that holds, you know, EU data, subject to GDPR rules. So these chains they can run their own virtual machines. They have their own validators and their own rule sets, subject to whatever technical and, and legal requirements you might have.

Anna Rose (00:42:23):
Got it. And the sub sampling, the, the sort of consensus, where is that happening? Is it happening in all of them? Is that more in the P-chain?

Emin Gün Sirer  (00:42:32):
Yeah. It's happening in all of them at the same, in parallel.

Anna Rose (00:42:34):
But is, is it the same nodes? Like would a client be running all three of these things or is it one thing that generates all three of these things?

Emin Gün Sirer  (00:42:42):
It need not be the same nodes, so so you could create you know, an, a chain subject to, you could create a closing. You remember private permission blockchains?

Anna Rose (00:42:51):
Back in 2017.

Emin Gün Sirer  (00:42:54):
Yeah. Back in 2017, everybody was doing them because they wanted to have control.

Anna Rose (00:42:58):
Supply chain management.

Emin Gün Sirer  (00:42:59):
Yeah. They wanted to have control over their assets and that's a normal thing to want. Yeah. And and so if you wanted to build one of those, you could say, Hey, this is Anna chain. And to, to, to be a validator, you need a token that only Anna gives out. And so, so that gives a solution that completely subsumes everything in the private blockchain space. So whoever was doing all that work that went nowhere and they realized, Hey, these things go nowhere. They're one-off solutions. They're isolated island. They can't connect. But now if you were to do it as a subnetwork on underneath Avalanche can connect them. You can start out as a private permission network, you can open it up, you could connect it to other private permission networks. You could connect it to the public network. It's kind of like, it's exactly like how we wired the internet up. Remember it started out with universities connecting their dorms and then universities connecting to each other. And it kind of went up from it's a similar idea. You can create your own subnet subject to your own rules, connect them where necessary, where it makes sense. And then you build something richer and bigger as you, as these things connect to, to each other.

Anna Rose (00:44:07):
Do you see the P-chain as sort of the connective glue in this?

Emin Gün Sirer  (00:44:11):
Yes. Absolutely.

Anna Rose (00:44:12):
Is it a bridge? Is, would it be like, do you, when you send from one of these to another, are you using it?

Emin Gün Sirer  (00:44:21):
No, you are not, you're not using you not using the P-chain. Yeah. But but it is the connective glue. You are going through the information on the P-chain to go from X to C and C to X, for example.

Anna Rose (00:44:31):
But not send, not transferring, not like token transfer.

Emin Gün Sirer  (00:44:35):
Right. The P-chain. Yeah, exactly. If you did go through the P chain, then the P-chain would have to understand the asset description of everything that happens underneath. And, and it doesn't, it chose not to have that it's it's instead peer to peer. So, so if there's an, Anna chain, then there's a Henrik chain, then those two can talk to each other without the P-chain knowing anything about what's happening on the Anna chain or the Henrick chain. Correct. There are lots of these interoperability plays in the blockchain space where they've made decisions that just don't make sense where you have to know a lot or, or expose a lot. We always made decisions that favor privacy within each blockchain. The only thing that, that the P-chain knows is the, is the membership is the validators in the chains.

Anna Rose (00:45:22):
Got it. Also Cool shout out to our editor Henrik, Henrik. You got a chain, I wonder. Okay. So I wanna talk a little bit about bridges as a topic, as a theme, like oh, sure. I mean, you have an EVM compatible chain, the C-chain. So, and I know that the Ava, what, what is the name of the bridge? What is the main bridge between like Ethereum and Avalanche?

Emin Gün Sirer  (00:45:45):
We call it, it's got a very prosaic name. We call it the Avalanche bridge.

Anna Rose (00:45:50):
Okay. The Avalanche bridge, sometimes there's other names like Rainbow bridge. Okay. So the Avalanche bridge, you that's, I mean, an obvious, I think a lot of people are bridging to Ethereum. Do you like, are you working on a, bridging like a, almost an Ava native bridging technology, or would you see kind of these other chains independently bridging to other networks and not, maybe not Ethereum, like the other kind of upcoming ones?

Emin Gün Sirer  (00:46:20):
Great question. So I've been saying this for some time now and let me let me mention it for your audience as well. I see this next year turning into a big war of bridges. Wow. So I think people are, people were early on, very confused especially in the Ethereum community about layer 1s versus layer twos, and so on and so forth. The way I see this world is very, very simple. And let me just mention it. And I think once people who hear it, they will understand that this is the proper way to view these wars layer 1s and 2s and so forth. It just doesn't matter. Like the technology underneath them. The terminology used doesn't matter. These are all different kinds of chains. You have chains and then you have technologies for connecting them that we call bridges.

Emin Gün Sirer  (00:47:06):
So we started out with a lot of value created on a few chains and now it's going to be a big fight to get that value onto chains where it can be processed much more efficiently. You know, much more beautifully, much more elegantly, whatever it is that people want from these chains. The value will try to flow there moving that value securely is not easy and that's where the bridges come in. And so layer 1s and layer 2s. I don't know what the distinction is between them. I think every layer I can go onto this, I don't have...

Anna Rose (00:47:40):
Oh yeah. It depends a little on the L2s, like some L2. So I just, on the last episode was talking to Wanseob from zkopru's and he, he like every L2 is a Dapp and I was like, whoa, mind blown, because it's smart contracts. But like, there is potentially sometimes a more evolved chain under the hood. And so, yeah, which is a blockchain, which is an L2, which is an L1, but I like kind of your framing that basically if you're running, if you transactions that are secure and then you're bridging to another chain, then you are a, you're effectively just using a bridge.

Emin Gün Sirer  (00:48:15):
Exactly, exactly. The, the technological distinctions are just so, so immaterial. They all blur into each other. And all you've got are chains and bridges. We are lucky in the sense that we pioneered the cheapest, most secure bridge built to date. And this Avalanche bridge uses a different technology that prior to us, nobody was using, it's a secure execution technology from Intel. And it allowed us to build a trustless bridge. And that bridge is essentially a bridge that cannot misbehave, even if the person operating the bridge decided to do, to do malfeasance.

Anna Rose (00:48:57):
Got it. Is it using Intel SGX? Is it in an enclave? Okay.

Emin Gün Sirer  (00:49:01):
It's in an enclave. Exactly. So it's constrained in what it can do and and it facilitates the transfer of, of value using only a single transaction on each side. So that's why it's so cheap and so fast to use it's the simplest bridge technology I've seen.

Anna Rose (00:49:16):
Seen that bridge that you're describing that the Avalanche bridge, like I always understand that as being Ethereum to the C-chain, like to the EVM compatible that's, but could you use that bridge for other types of bridging?

Emin Gün Sirer  (00:49:29):
Absolutely. There is no reason than why it should just be confined to Ethereum and we are actively working on bridging to other other chains.

Anna Rose (00:49:36):
Cool. Can you say which ones? I'm curious...

Emin Gün Sirer  (00:49:40):
No, I, that I don't wanna leak Alpha, and I know,

Anna Rose (00:49:44):
I wanna know where your bets are going though.

Emin Gün Sirer  (00:49:46):
Exactly where where's the, where are the bets going? So who, how would we benefit the most? How would our community benefit the most? That's the big question? No, I can't say where we are headed, but it's going to be such a fun year. And we are so far ahead given the fact that we built this awesome bridge using SGX technology, which I think is the right way to do this. And the only way that that's universal. So I'm really excited about what's to come.

Anna Rose (00:50:11):
Actually, one more question on this. I don't know if you're gonna let me know this, but like, are, are the bridges that you're looking at also EVM compatible? Or would you even be considering bridging to like non-EVM compatible through this bridge?

Emin Gün Sirer  (00:50:23):
I, I don't want to leak Alpha, but I will say this. If you are unable to go everywhere where value is, then you do, I don't think you should be in this game.

Anna Rose (00:50:32):
Okay, so where there's value...

Emin Gün Sirer  (00:50:33):
Let me also mention this and here I'll leak some Alpha for you.

Anna Rose (00:50:36):
Okay. Thank you.

Emin Gün Sirer  (00:50:37):
If your universe for bridging is confined only to other crypto, then you are in the zero, zero sum mindset, and you are not really thinking big enough. I think from the get go in Avalanche, we've been saying the same thing, which is we are here to digitize all of the world's assets. And most of the world's assets are not in crypto form. Now we didn't come to this world to try to take value away from Ethereum. That's the last thing I want to do we came to this world to try to go after the 700 trillion. That's not in blockchain form. And so we want to get those onboard ourselves. Interesting. So that's why I'm really excited about.

Anna Rose (00:51:18):
Is there any sort of expansion plan for the C-chain? Like, is there right now it's EVM compatible, will it be evolving differently from the kind of Ethereum version of it?

Emin Gün Sirer  (00:51:30):
Absolutely. And so what's there to say on this one, there's so much to say on this...

Anna Rose (00:51:34):
By the way, just in side note, that question comes from Tarun, who was supposed to be - who we wanted to have on the show, but we couldn't because of scheduling. So, ah, shout out to Tarun. Thank you for that one.

Emin Gün Sirer  (00:51:46):
Yeah, no, Tarun is a bright guy. He's asking all the right questions to leak all the right Alphas. So, absolutely. So look, Ethereum is, is constrained in so many different ways, right? So they, they came up with an EVM. If you look critically at, at the EVM, if you're a distributed systems person and you were to make, build a new smart contract platform, you would probably not make 90% of the decisions that they made. You know, they were, they were first, so they made a bunch of decisions in the dark and knowing what we know now I can build an EVM that's much better, much faster. So there is so much to do that, that that one could do also, they are constrained both politically. I, I didn't appreciate initially, just how politically constrained they are. They are committed to ETH2. They are committed to the old byte code. There, there are a bunch of things and they're committed to certain data structures. There are a bunch of things that, that they cannot undo. It would be, they would lose too much face. And I didn't appreciate this. I thought they were, they were nimble. I thought they could undo mistakes. They have done, but time has shown us, I think by now that that they're not able to do that. So for someone in my position, the right move is crystal clear, which is innovate technically and bring the science hammer and hit it, hit every problem with it. So, of course, we're gonna be modifying the EVM. Of course, we're gonna be introducing new op codes, I'm on the ZK show, there's so much zero knowledge stuff that we can add there that, that is far more efficient than what's already in there. I can add more. I mean, I can add all sorts of new data structures that simplify the things that the nodes do. And there is like, sky's the limit and anything and everything is, is on the table for us. We have a very strong team of technologists. I'm thrilled about the innovation that we have planned.

Anna Rose (00:53:40):
I wanna, so this, this story of sort of, of the slowness, we kind of mentioned it earlier about like Bitcoin, not moving as quickly. And I think Ethereum governance - I've covered it a number of times on the show over the years. And it's like, it's beautiful because it's very collaborative and there's a lot of people whose, you know, interest is considered and there's a lot of conversation and people who care, but it ends up, you know, it's this sort of classic of like direct democracy for all choices, with different levels of understanding makes for a, like a complicated potentially like slowed down process. And not that it's direct democracy, actually, in this case, it's like sort of sentiment of the crowd, trying to figure out what, what to do next, how is Avalanche governed? And by the way, sorry, I keep switching between like Avalanche and Ava, and maybe I shouldn't, maybe I should be more specific, like, how is the network?

Emin Gün Sirer  (00:54:31):
Oh, the, the network is called Avalanche and Ava Labs is the company that provides the technology for the code.

Anna Rose (00:54:37):
And the client is the Avalanche client?

Emin Gün Sirer  (00:54:40):
Avalanche client. Exactly.

Anna Rose (00:54:41):
And Ava Labs - like, that's basically what I'm curious about. It's like the decision about client upgrades at this stage. What, where does it look like?

Emin Gün Sirer  (00:54:51):
Great question. We are at a different, different place in our evolution compared to systems that are, that have been out for six plus years, like Ethereum and others. So we are also at Ava Labs. We are committed to ensuring that we only do those things is that our community would overwhelmingly and with great enthusiasm accept. So our vision for governance is that there are key parameters in the system that that need to change dynamically. For example, the minting rate is something that should be subject to change as the macro conditions change. And we can can't have anybody in charge of changing that and Ava Labs would never even dare to, to modify something key like that. So the the plan, the vision for for the changes in key parameters is that they are subject to modification by coin voting. Oh, wow.

Anna Rose (00:55:44):
On-chain governance, kind of..

Emin Gün Sirer  (00:55:46):
On-chain governance. Using the Avalanche. Actually it uses the Avalanche protocol for repeated sub sampled voting to, to see what people will go along with. So you, anybody could propose a change. And then that repeated process will come, will see if there is consensus around that, that proposal.

Anna Rose (00:56:02):
I have a question on that, actually. So like - is it the validators primarily who are doing voting in this system? Or is it, you sort of mentioned token holder, so it's like say you delegate to a validator and then the validator, the validator would do the voting. Can you also, as an individual do voting?

Emin Gün Sirer  (00:56:20):
So that this, this component has, is a, that's a good question. This component, there are actually multiple implementations of this component. So the very initial vision that we had for this is that to have a voice, you have to have a validator. Okay. So it's the validators that, that participate in this repeated process...

Anna Rose (00:56:39):
But you had a lot of validators?

Emin Gün Sirer  (00:56:41):
We have a lot of validators.

Anna Rose (00:56:42):
It's easy to be a validator. I guess it's easier than some other systems.

Emin Gün Sirer  (00:56:46):
The system can absorb any number. And they meaningfully participate in every decision. It's not like, oh, this decision got made by a subset. No, no. In every decision you and I, and everybody we know was, was a participant. We have a second implementation of this, which has a different flavor, it to it, where you could delegate your tokens to a, to a validator for the purposes of making decisions in the network. But the governance is implemented via these, these via a separate key. So it's a more, you know, it allows people to have validators that participate in the protocol while retaining voting rights. If that makes sense. Yeah. So, so we have two different implementations for this. Neither are active at the moment. Our system is brand new. We are barely 14 months old. And we are in a, in a phase where all of our economic parameters are frozen at the moment. They haven't been subject to governance. And we are making changes to the underlying technicals essentially the sort of the client implementations that make the system more efficient and more smooth. We are not at the stage yet where we can open it up for governance. And that's coming up soon. That's gonna be this year event. I'm really excited about it. And and so, so far it's been heads down build the best technical foundation for absorbing all of the world's assets. That's where we are. And we've been delivering like no other team in this crypto universe.

Anna Rose (00:58:11):
I mean, this is such a challenge, this like this move towards decentralization and decentralizing, the decision making. And I think what we've kind of covered a few times also on the, on the show is this idea that like in DeFi protocol, when it's a, like a, a numeric change, that's very, very clear and determined - deterministic. Like, you can see what this would like. You can go to five, or you can go to eight, something like that. Like something very, very specific then governance seems to be quite effective where it becomes more muddled is when it's like, should we fund this initiative, how much budget here? So I, I do wonder, like if you have, and I know this is like maybe not the problem that you're focused on, but I'm curious what the thinking is around that further step of decentralization?

Emin Gün Sirer  (00:58:58):
Right. So that that pertains to different entities in the system. So the Avalanche foundation, for example, has substantial funds and it gives some of these funds as incentives to certain deserving projects. So, you know, what should the Avalanche Foundation be doing in in making those decisions? So up until now, we've been in startup mode up until now, we've been in essentially a benevolent dictator mode, if you would making decisions that obviously would bring the best, the best of outcomes to the community as a whole. I think we have weathered many storms and we have made some amazing decisions that brought us from relative obscurity to at the moment, I think we're a top 11 coin, but but I think in, in every technological respect we are very, very, very high up there. You know, we're like number two or three in terms of TVL. And in terms of mind share, and for developers, we are right up there as clearly the, the best platform to be building on for smart contract developers. So so I think we managed that process well, and, and we did okay so far going forward, the principle that's guiding this is that everything should be community serving. And the Foundation itself should be something that is open and serving and accountable to the community. And you can rest assured that we, we will be doing everything we can, as we have until now to make sure that the decisions are maximally serving the community. I think our track record speaks for itself in this regard, so you can expect more of that. And with more transparency as time goes on, as, you know, as we get, as we sort out our processes for exposing more.

Anna Rose (01:00:39):
I mean, to me, it's like, this is a question that all new L1s kind of face, I mean, you can look at how Ethereum managed their funding and their foundation as some sort of guide. But I I'm personally very curious to see what the next few years bring for the newer networks. With the lessons learned from previous ones, seeing if there's ways to, yeah. Kind of decentralize or like what, what do I wanna say automate, sorry. Or like automate some of these governance decisions that go past sort of the more like DeFi or validator emission rate, like reward rate metrics, but I don't know that anyone has the silver bullet yet. Like, I think it's gonna be interesting.

Emin Gün Sirer  (01:01:22):
That no, no one has a silver bullet. You are so right. And I want to unapologetically and unabashedly put a stake in the ground about what we plan to do. So I have seen time and time again, and I've even been part of in, in some cases some mistakes that people repeat in the space, people get caught up in their own rhetoric - people get caught up in, in nice sounding dreams that are not backed by science. And in appealing sound in verbiage, they get tangled up in it and they find themselves sacrificing the ability to execute in order to, to pursue some abstract dream. So in particular decentralization, you know, often means different things to people and projects that you know, you hear about, it's like, oh, you know, we ended up decentralizing this, that, and the other, I don't know what that means. In many cases they don't know what that means. They end up losing the ability to execute projects that are that are giving up the ability to move fast. And also the projects that are giving up the ability to fund development end up, end up making huge mistakes. I mean, sounds great. Oh, this is community owned. Sounds wonderful at first, but then you look at these community owned projects and they're not going anywhere. I mean, so, or, or Bitcoin it's like, so this and that, great. Well, who are the Bitcoin devs and how are they getting funded? And it turns out it's very hard to get funding for them. So so we have an advantage and in that we have a well funded team that's driving the, the development process and the Foundation itself has substantial funds. And as long as we are in startup mode, we're going to be using those funds effectively quickly, and we're gonna be deploying them for development, wherever the ecosystem might need them without incurring the overhead of having to conduct everything every decision in public, committees and so forth. So we're, I'm not going to be making that mistake. I've seen it kill projects. I mean, you can look at, you can look at the predecessors that came before us. They're not doing well, they're not executing well.

Anna Rose (01:03:31):
So another Tarun question was actually a question of how DeFi acceleration worked, like, kind of on this lane, like in terms of funding and, and getting projects over, how has that been done? And, and cuz at this stage, as I understand it, there's a lot of DeFi projects on Ava and in a short period, they started deploying there. So tell me how you did that?

Emin Gün Sirer  (01:03:55):
Yeah, no, I am really proud of what's happened. We have more than, you know, there are many chains that are saying things like, oh, we have, you know, 250 projects coming onboard. And what you really have is a ghost chain with 5 or 50 projects and 200 in the planning stages that cetera, they, they gave millions of dollars to 200, many of those projects. They, they finish up and they, they decide, Hey, I'm not gonna deploy on the people who funded me. I'm gonna go deploy on Avalanche because it's so much better. So we have more than 500 deployed projects with countless in the background ready to come out. So we ended up going from essentially not necessarily, literally 0, 14 months ago, we had no mainnet to being the second or third coin with the largest TLV. So how did we manage to do it? We attracted so much value and so many devs there's more than a million 1.3 unique addresses on our C-chain in, in the last three months alone. So it's, it's just, the numbers are insane. They speak for themselves. We have so many users I'm really proud of it. And the question is, is right. Part of the success had to do with incentives. So you, you know, we, we did a combination of giving grants to new projects to deploy natively on Avalanche as well as incentivizing existing projects, successful projects that had grown up in Ethereum, but had hit limits. So, you know, Aave for example, fantastic project, but there is only so far, it can go if it's limited to Ethereum, because the world supply of people who can pay $50 per transaction, it's pretty small or more. It's just pretty small. It turns out. So they want to expand. They want to reach a different audience. They don't wanna be relegated to a chain. That's mostly whales and bots. They want more people. And so so you need to, you know, the, the DeFi incentive programs played the huge role in getting them onboard us. And the funny thing is of course now a lot of people have been copying us has been true since day one since our public sale, you know, people have been emulating, you know, we had a glitch in our public sale. People have emulated, even the glitch we had during our public sale. There are lots of copycats out there, but you know, it's not, there's a huge mote here. And and the people who've been trying to emulate us are figuring out this exact same thing. You can, you can give people money, you can do all sorts of things to try to bring them onboard. But if the product you are offering them is not pleasant to use. If it's not delightful, if the users touch it and they're like, eh, what the heck was that? Or that was rough or it was then, then they turn away and they turn away permanently and for good. So one of the nice things about Avalanche, is that we got our ducks in a row before we, we invoked the incentive programs. And so people who come to Avalanche, they find that it's very hard to go back. So once you get used to that super fast interaction, you know, I find myself unable to touch my funds on Ethereum. I just, I, I can't wait 15 seconds. It's not even final after 15 seconds, but I can't wait 15 seconds. Once I'm used to 750 milliseconds

Anna Rose (01:07:03):
For me, it's always the gas estimates that that's killing me.

Emin Gün Sirer  (01:07:06):
Oh, oh yeah. The stock transaction 56. Yeah, yeah. Really killer.

Anna Rose (01:07:15):
I have a question that sort of goes back to the technical level, which was about MEV in November, there was something with Ava and MEV, some sort of bot thing. MEV has come up a few times on the show. It's been like, you know, a topic that, you know, lots of teams are working on. And like, I guess my first question is like, which chain does MEV does even live on for your system? And what was that? What, what happened in November? Maybe, actually let's start with what happened in November? And then I can explore.

Emin Gün Sirer  (01:07:48):
I think there was there was a lot of discussion between the researchers who work on MEV and and various other L1 teams about what MEV is and how much of it there is. So I think the thing to remember here is that these are all new concepts that for many years we built systems paying attention only to safety and liveness as the two properties that we care about. And MEV - extraction, extractability, you know, who benefits from the operation of the system? How do they get to benefit? Are there special nodes in the system that are in a privileged position to collect money as intermediaries? These were all questions that sort of got swept under the rug or were ignored and in a wonderful paper a few years ago, researchers from Cornell university, Phil, part of it involving Phil Daian started looking into this and and they gave it a name called MEV minor extractable value. So since then I think people have been paying much more attention to essentially it just think of it as the collection of activities you can do to extract money from the system.

Anna Rose (01:08:57):
It's a bit of a Pandora's box, right? It's like by shining a light on it, all of a sudden everyone's like, oh, you can do that. Cool.

Emin Gün Sirer  (01:09:04):
Right, right. Well, it, but it's, it's like, yeah, meet the new bosses. And they're kinda like the old bosses. They're kind of like the people like the citadels of the world who come in between your order flow and, and start sniping on transactions. The, the MEV value that's extracted typically comes from retail users. So, but I should also mention this. We are in the early stages of developing the science around MEV. And so in November, there was a bunch of discussion and it emerged for example, that my definition of MEV was different from all the other people's definition of MEV. And I, mine is, is internally consistent and coherent, but it's not the same as other people's and theirs is okay too, but, and it's also internally consistent, but it's not the same. So essentially we were trying to figure out our definitions and what the definitions ought to be. There it's, it's a little hard to you know, there needs to be some who does a great scholarship, you know, great work of scholarship here and brings some nomenclature at the moment. We even lack the ability to categorize different forms of MEV. So there's always gonna be arbitrage opportunities. Arbitrage opportunities are not necessarily bad, so you should be able to go to market and make money. That's good. Well, are you making that money by sniping on somebody else? And are you taking it from somebody who would be in some fashion more rightfully you know, more rightfully licensed to that cash? Well, then it's bad. So, so we need, we need the terminology that we currently don't have because the scholarship has not been done yet. So so that, that terminology needs to come in and and then the techniques will follow. I have found that that people who don't bring this terminology are usually also unable to think clearly about solution strategies as well. So as a space that hasn't had, we haven't been able to do that yet. So I think we're going to sit and and and figure out how to sort of categorize this and come up with techniques for, for minimizing MEV extraction of the wrong kind from the system.

Anna Rose (01:11:13):
The event that I'm referring to, it's something, I mean, this was on Twitter. I don't know, real backstory on this, but it was this idea that like non-validating nodes could have an edge. And so there was these MEV or like some sort of, maybe it's not MEV maybe some sort of validators who were trying to kind of game it somehow.

Emin Gün Sirer  (01:11:33):
Right. So we, we made a couple of changes to reduce MEV extraction in Avalanche. Let me also put my foot down here and talk about our strategy and how it's different from from other people's. So, so protocols like Ethereum, they do what they do, right? They have their miners and the miners could actually extract a huge amount of MEV. They can jump in front of every order. They can sandwich every order they can do, whatever the heck they want, because they are ultimately the ones that order transactions. So in Avalanche we have validators and we have a very different protocol. And so in that protocol, it is possible to do a bunch of things again as it is possible, it, the, the extractable value will never be zero. So there are things that could have happened in Avalanche. And we looked around at what people were doing, and we made some changes to reduce the ability of of people who don't run a validator to jump in and and do front running attacks. So this is entirely in the service of our users. And it reduced the ability of, of people to snip at transactions inside the system. And so this gets people upset because, oh, Hey, I was making money. Why are you upset? You took my money source away. And and again, unabashedly and unapologetically, I, I, and other developers for Avalanche will enact every single change that gets rid of the bad, bad sources of MEV, of validator extractable value.

Anna Rose (01:13:04):
Do, do you feel like, at least from what I understood from this, it was this idea that like, if you launched lots of these non-validating nodes, that it would somehow pull the network, put network in some sort of like odd space. And I realized I'm citing a tweet. So like, don't get me wrong. I, I have not dug into it, but that

Emin Gün Sirer  (01:13:22):
That's, that's not the main issue. That was the secondary. So there were multiple things that there were multiple optimizations we deployed. That was a secondary issue which was that if you deployed a lot of non-validating nodes, then you could slow down other validators and get an edge that way.

Anna Rose (01:13:40):
Oh, interesting.

Emin Gün Sirer  (01:13:41):
There is no reason for the validating nodes to spend so many resources on non-validators. And so we added some limits, which again, clipped people's wings and limited what they could do. And these are all to protect the consensus protocol underneath. We will unabashedly employ everything we can to avoid DDoS attacks, MEV attacks, and to protect our users. And and this is one of our huge advantages compared to to elder systems.

Anna Rose (01:14:09):
It sounds like you're sort of righting a ship. Like, you're kind of like, you're gonna move a little bit in this direction. See if there's some sort of change of behavior, you can kind of move in another, like you said, it's sort of a, a field of study. That's still not, you know, fully fleshed out. And I, I do wonder, like, thinking about MEV for Ava, is it a very different science than thinking of, it sounds like it's very different from thinking about MEV for just a standalone chain. Like you said, there's sort of other behaviors that could have impact and it's different. Like it's not a one to one from the work that's been done on like geth.

Emin Gün Sirer  (01:14:44):
No, absolutely. That's exactly right. Exactly right. Avalanche is so different as a protocol that the sources of extractable value are different. The types of things that people can do against the protocol are different. And the science in this, in this area, as I mentioned, is just so nascent the terminology hasn't hasn't really flushed itself out yet. Let alone the solution strategies. We don't have metrics for measuring MEV how do you measure MEV it's just unspecified. So there are no good quantitative measurable metrics in our hands. There's so much work to be done by good academics in this space.

Anna Rose (01:15:20):
Cool. Well, I've run out of questions. I wanna say, thanks so much for walking through all of this.

Emin Gün Sirer  (01:15:27):
No problem. We ended up going quite deep on a number of topics. I was, I was delighted do that. I'm always delighted to talk to a technically savvy audience and a technically savvy interviewer. So fantastic to be here. Thank you for having me.

Anna Rose (01:15:38):
Yeah. Thanks again for coming on the show and sharing with all of us, the story of Ava, I hope we get to, you know, explore more, you know, as new insight comes, maybe projects that are built on top of it as well. I'd love to get to know the community a bit more. Yeah, just as, as an aside, this is actually the first deep dive I've ever done into Ava. So this, this has also been really informative for me.

Emin Gün Sirer  (01:16:00):
Fantastic. Well, let's hope it's not the last. So there's so much happening on top of us. I hope you'll interview other people from the community there's, there's so much exciting stuff going on.

Anna Rose (01:16:10):
Cool. All right. I wanna say thank you to the podcast editor, Henrik, the podcast producer, Tanya, and to our listeners. Thanks for listening.

