Intro (00:05):
Welcome to Zero Knowledge. I'm your host Anna Rose. In this podcast, we will be exploring the latest in zero knowledge research and the decentralized web, as well as new paradigms that promise to change the way we interact - and transact - online

Anna (00:27):
Today guest host, James Prestwich and I will be talking with David Vorick about Skynet, distributed storage, a new content monetization solution, and share some ideas on how to wrestle back control from the algorithms that are leading us astray. But before we start in, I want to thank this week sponsor Aave. Aave is an open source and non-custodial protocol where users can earn interest on deposits and borrow assets. Avi also features access to innovative DeFi building blocks like Flashloans, a topic we have covered a couple of times on the show, just as a reminder, Flashloans are a tool that lets developers borrow instantly without collateral. As long as they return the liquidity to the protocol within one block transaction. They're also introducing a new feature which is called Credit Delegation, where users can delegate their credit to another person who can borrow against it. If you're interested, Aave has a grants program for anyone building anything that contributes to the ecosystem. Check out the Aave developer portal to learn more. I've added the link in the show notes. You can also visit Aave at A A V E .com or join their discord channel. So thank you again, Aave. Now here is our interview with David Vorick.

Anna (01:41):
So today guest host James Prestwich and I are catching up with David Vorick, who is the founder of Skynet and the CEO of Skynet labs. Welcome David.

David (01:51):
Hey its great to be here. Thank you for having me

Anna (01:54):
And also hi James.

James (01:56):
Hi Anna.

Anna (01:58):
So today we're going to be talking about, I mean, I, I actually just want to find out more about what this project is. I know it's had a few kind of iterations and name changes along the way to becoming Skynet. Um, I also want to touch on the vision that's sort of presented through this project for the decentralized web, which is a little bit different, or I should say it seemed very all encompassing compared to some of the other projects that we've had on the show. I also want to, at the end, if we can talk a little bit about how privacy could potentially play a part, I think as a starting point, let's talk about the name Skynet. I mean, is it, is it a reference to a movie that I actually never saw, but I hear involved robots.

David (02:39):
Yeah. So, um, I think that Filecoin actually has a really good name and it was just my goal to come up with something better. And I like Skynet because it's aggressive. It's this really big force that like took over all of humanity and just caused a lot of it just, it changed the world a lot. Um, and so of course we aren't, we aren't trying to like enslave humanity. We're trying to set it free. But I just liked the, I liked the aura that Skynet has and I felt like it's worth being aggressive. Uh, the other thing is that it's also kind of a, kind of a warning / reminder because these decentralized technologies, like ... Skynet in the, in the lore found out that it had an "off switch", it got mad and it turned off its "off switch" and then humanity lost control of it. And we're, we're starting from a place where it doesn't have an "off switch". And so it's kinda kind of a reminder, like at least be a little bit careful because if it does, if it does turn into something menacing, we may not be able to get it under control. And I think that's true. Not, not just the Skynet, of course, it's also true Bitcoin and a lot of these decentralized techs, but yeah, so I just, I felt like there were a lot of, uh, a lot of nice points, uh, encapsulated by the name.

Anna (03:58):
I mean, I want to revisit this a little bit later in the conversation because I think that is a topic that we should all be thinking about. This road to the decentralized web. We should be thinking about like what that actually will mean. Yeah. Okay. So the Skynet team/project/company, that's the name that you, that you have now for this project, but it wasn't always called Skynet. So can you tell me a little bit about like the road to Skynet?

David (04:23):
Yeah, so we started off as the Sia team. Uh, we've made a decentralized cloud storage blockchain and Sia had a big token focus to it. And it also just had a lot of capabilities that over time people ingrained. And so people kind of understand that Sia doesn't do file sharing. Sia is for personal data. If you lose your local machine, uh, it can be a challenge to get your files back. So there are all these limitations associated with this high technology and just this focus on, on personal stuff and not on web stuff or sharing stuff. And so when we developed a new extension to the protocol, which we called initially "download by route", it was a really simple primitive, just all, all that went out the window. Now, suddenly the Sia protocol with this one tiny addition is capable of doing web stuff.

David (05:18):
It's capable of sharing files, it's capable of an open data model. And so, um, even though the technology is basically exactly the same as just a tiny little tweak. You know, it's a tiny little tweak that just like removes a dam from a river and, you know, every everything changes. Um, and we, we felt that to kind of get out of the limitations associated with the Sia brand, rebranding was merited. And, and kind of along with this we're moving pretty far away from the token model. I don't, I don't think we want to be focused on the Siacoin anymore. We want to be focused on the next generation of social apps and have Siacoin and be this kind of background thing run by a separate entity. So the Sia ecosystem is actually splitting. It's not that Sia's becoming Skynet it's that the parent company of Sia is kind of spinning out a Sia foundation.

David (06:15):
Um, and my co-founder is going to the Sia foundation and Sia foundation is going to get a dev fee. So, so it's being left in very good hands, right? The person at the top of the Sia foundation has been with the Sia project the whole time knows it very well is very passionate about it. And then myself and most of the engineers are going to be focusing on Skynet. And so, uh, this has caused a little bit of drama and tension within the community, but I can assure you that, like at the top level between me and my co-founder, the people joining the Sia Foundation and the people staying at Skynet labs, everybody is very good friends. Everyone's aligned around a similar end goal. And we think that overall the split is going to allow each party to focus on what's most important to them.

Anna (07:01):
When did you add that feature that you just mentioned when you started to experiment with this new thing? I'm just trying to figure out timeline wise.

David (07:09):
Yeah, so that was in November, 2019. Um, so I guess about 14 months ago now, just, just over a year ago.

James (07:20):
Hm. And, uh, you know, David, you and I have known each other for a number of years now and, uh, have talked a lot about how, you know, amazing an open data model would be. Was there a technical reason that you didn't add that feature earlier?

David (07:35):
Yeah. I just thought it was really difficult to do. And honestly, the "download by route" feature that ended up being pivotal, uh, that that's not even enough to do the open data model, but I was, I was in Zurich struggling with a really bad bout of insomnia. So I was awake in the middle of the night and I was just like, wait, if we did X, Y, Z, we could have very simple file sharing. We could have a low complexity, high reliability way to share files throughout the Sia ecosystem. Um, and as I kind of dug through it, it almost felt kind of silly because we'd had the primitives that we needed to do this for maybe three years, now. If we had had the idea, we probably could have implemented it in early 2017, but we didn't have the idea as often, you know, research goes until late 2019, and we had the proof of concept working pretty much by new year's day. Um, so it was, it was like 45 days between the idea and having the first example on the network.

James (08:37):
Hmm. So it's mostly, uh, lacking that flash of insight.

David (08:43):
Yeah. And then the real power of the open data model came when we had the idea of SkyDB. And so we had a way to achieve SkyDB via a complicated L2 on top of handshake, uh, kind of, uh, an L2 that straddled Handshake and Sia. And then again, it was, it was a similar sort of just... I think around June of 2020, so barely six months ago. Um, there was just a flash of insight. That's like, wait a minute. If we set up this, this structure, we can get everything that we, you know, we thought would take this this 18 month L2 project can now be done in three months flat. And again, to the, to the dismay of some of the people in the community, we literally dropped everything. We were like, this is the most important thing we've ever come up with. And the entire engineering team, uh, just went to 0 on all other projects and we got SkyDB rolled out. I think it was like 30 or 60 days. Um, it's one of the, one of the fastest - I think it was three weeks until we had a full prototype working. Um, so it was one of the fastest products we've ever launched. And from there - yeah, we've just been super excited about everything it can do.

Anna (09:56):
I feel like this project has, there's a lot in it. And so I'm wondering if it would make sense to kind of start from what it was. You say it wasn't decentralized storage of files. I always understood Sia as living within the decentralized storage space. I might've been wrong about it, but -

David (10:13):
It was decentralized storage, but it was not decentralized sharing. So you could, you know, if you, if you had like a personal backup, you could put that on Sia and then save that. But if, if you wanted to say or create some music and then share it with friends Sia up until Skynet, uh, did not have any way for you to share files on Sia with your friends.

Anna (10:40):
Okay. But once you added that feature that you could share, do you think the project in a way became a competitor of some of the other storage solutions? Or do you still see it? Like I realized that because we're going to go through all of the pieces of it, it gets a lot bigger, but did you think of it like - kind of bumping up against what they were doing?

David (11:00):
Um, when, when we initially launched Skynet, uh, which I think the full official launch was late February, we saw Skynet as pretty much a direct IPFS + Filecoin competitor. So every everything that you thought that could happen on top of IPFS with persistence on Filecoin Skynet could do. And then that's, they were very comparable. Um, and then when SkyDB came out, um, Skynet's capabilities significantly surpassed that stack.

Anna (11:29):
Does it have a, like a very different structure from IPFS and file coin? Or is it like, is it using any of the same techniques?

David (11:38):
No, I think we've made a ton of different design decisions from the ground up around building Sia and that's, what's enabled us to be so flexible in adding new features and launching faster. We've been much more just in our design philosophy, much more oriented around, uh, the storage layer first, rather than the routing layer first and, uh, more oriented around performance, making sure that the theoretical optimal performance was approaching that of centralized networks. And then also just constantly looking for ways to make things faster, to implement and cheaper to implement, which Filecoin has such a large budget. I don't think they feel the same pressure that we do, where if we look at something and we're like, Oh, this would take six months to implement. Um, that's just not something that we ever have budget for. And so we just put it on the perma shelf until we come up with a smarter, more clever way to get the same thing done. Um, and I think that's given us a really significant edge actually.

New Speaker (12:39):
Cool.

James (12:39):
So kind of like breaking down the tech stack a little bit, uh, we started off with Sia, which is distributed file storage. We have Skynet, which allowed people to share those files. Uh, what would you say SkyDB adds to that stack that IPFS and filecoin don't have

David (13:00):
It allows you to share an identity with someone else where that identity resolves to a bunch of mutable files. I guess that's not the cleanest way of putting it, but basically I can say, "Hey James, this is my Twitter feed. Um, and so you, you receive a public key and you can use that key to look at everything I've posted on Twitter. And if you check it a day later, you'll see all my new content. And so that's something that IPFS can't do. IPFS is all in hashes and it's something that's kind of does, uh, at, at a high performance level and all, all Layer2 there's no, there's no onchain posting to make this work.

James (13:43):
Uh, this would be, uh, like similar to the IPNS system that never really caught on. Right.

David (13:49):
Yeah. Um, and I can't claim to understand IPNS super well, but I think if it was, if IPNS was a lot more performant and a lot more efficient that it may be similar.

James (14:01):
So you said, uh, mutable files. So these, uh, unlike IPFS, these can be updated over time. Right. Um, and you're delegating access to me. You're sharing these to me with a public key. Can you also give me the ability to edit or update these files?

David (14:19):
I could, I think generally, that's not going to be a goal, but for example, we could do some sort of Diffie Hellman or just any, any out of band technique. We could generate a shared key and we can have a shared space where either of us could update it. But I think, I think more interesting is, um, rather than people updating each other's data is applications updating each other's data, if that makes sense.

James (14:47):
Hm. I, you know, I always one of the like 10 users, the Keybase File system, and, uh, I really miss that short sort of a shared folder that shared directory model of collaborating with friends.

David (15:02):
Got it. Yeah. So that's something that's definitely possible to build. Um, and I think there is one project that's kind of looking in that direction called sky spaces. And so maybe, maybe you would find something similar there, but also if, you know, if you're willing to pull out your JavaScript console, um, it could be a, an application that you build yourself.

James (15:21):
Would that I had time.

David (15:22):
Yeah.

Anna (15:23):
You just mentioned this other project, like is SkynetDB or Skynet the entire project. Is that sort of a, like, is the expectation that there will be projects building on top of this independently that are very much like, are they building kind of the core parts of it or are these more like Dapp for lack of a better word type things?

David (15:44):
Yeah. I mean, I think you could compare it to the Ethereum ecosystem where you have, um, you kind of have the core team that works on the VM and adding instructions and, um, and works on things like ETH2 and scalability. And then you have all these ecosystem teams like Compound or Sushi or Uniswap that are building what a lot of people would consider to be core infrastructure of the Ethereum ecosystem, right. Just cause Uniswaps not built by the core team directly. Uh, it doesn't mean that it's not super important to the space. And, uh, so that's kind of, what Skynet is. It is you have, you know, uh, SkyID, which is this, uh, identity system on top of Skynet, that's completely third-party and something that we've, we've been involved in to the extent that sometimes we, we help guide them make decisions, but, uh, you know, someone else made, made the implementation and someone else did most of the design work. And then we have something else, SkyFeed it's a decentralized Twitter. Um, and same thing. The core team actually has been very little involved other than, uh, they're just constantly telling us ways that, um, ways that we can make it better and ways that we can make it easier for them to build a really powerful Skynet based Twitter. Uh, we have, uh, we have, you know, alternatives to Dropbox as well. And, and these, um, this ecosystem starting to get more and more collaborative and more and more expressive.

Anna (17:04):
So you mentioned this example of a, sort of a, a new Twitter built on top of the Skynet system. What can we go a little bit deeper into what that is? What would that even look like and what features of this Skynet actually allows for such a thing to be built?

David (17:21):
Yeah, so it's super interesting. And honestly, I thought that Twitter would be one of the last things to get built because there's, you, you need to, you need masterful use of many different pieces of Skynet, but this developer - his name is Redsolver - has pulled it off and he's, he's demonstrated that he's quite adept with all the Skynet tooling. Um, and so basically what happens is that on, on Skynet each Twitter account or on SkyFeed, each Twitter account is a bucket of data owned by a single user and controlled by a single user. And so when that user makes a post, they update their bucket of data to include the post. When they follow someone, they update that bucket of data to include who they follow. And so when they log in, they look at their own bucket of data and assemble their feed. And if they follow a bunch of people, when you follow someone, you actually record where their bucket of data is. Um, and so you scan their bucket of data and see what have they posted. And if, if you want to find more people to follow, you can check out who they're following. And so you get this like nice decentralized web, almost like a mesh-net of content that is fully decentralized, everyone's in control of their own data, but everyone can see everything else that everyone else is doing.

James (18:41):
So, uh, what, walk me through this a little bit, uh, when I use SkyFeed, I'm going to connect to some server to load the UI, right? Yep. Okay. And the UI is going to check my Skynet bucket and see all of my tweets and who I'm following. Right.

David (19:02):
Yep. After you've logged in. Yeah.

James (19:04):
Yeah. And, uh, you know, from there, it goes out to everyone I'm following and retrieves all of their tweets into their following. Right. Yup. Okay. Makes sense. Um, so instead of querying Twitter server over and over to get all of these things and to get the curated feed that Twitter gives you, you're going to get a raw view into what the other users have chosen to publish.

David (19:28):
That's correct. And then the front-end is going to filter it or adjust it, you know, however, however it deems to present a feed to you. So the, to the end user, it looks like Twitter, but the truth is all of that code and curation is happening on the user's machine, which means they have the freedom to choose a different frontend if they want

Anna (19:52):
Does the user get to choose the depth at which they look into that network in a way. Like, do you say like, Oh, I'm going to look at three people's data and their followers and not further, or does it kind of go all the way through. Like, I'm just trying to understand, like at what, at what point, like, is this just a setting that you can choose? Or,

David (20:13):
So it's a setting that could be added, I believe right now it just goes to a depth of one.

New Speaker (20:16):
Okay.

David (20:17):
Um, but if someone felt that it would be a better experience to have a depth of two, you could make an alternative presentation to SkyFeed that goes a little bit deeper. And this I think is actually a super important point. And one of the key things that makes Skynet so much more competitive than the centralized web, which is that if, if you have an idea on how to make Twitter better, your only hope of trying that out in the real Twitter environment is by convincing Twitter to adopt your idea. Um, which is, of course not, is it's not a practical thing unless you're high up in the Twitter staff, but on Skynet, if you have an idea, like, let's say, what if we follow to, you know, infinite depth and just see what happens. That's something that you, as a developer can just go ahead and implement. And, and because it's all open data and completely permissionless, when you launched that, you know, alternative or that different Twitter implementation - right on day one, you have all the users and all the followers and all the access, you have a super rich environment, and that's just not something you can do on the centralized web.

Anna (21:28):
How does this compare though, to like, projects that happened before, like Mastedon on, do you remember this?

David (21:36):
Yeah! Mastedon is a project that I think has done a very incredible job of treading the line between Federation and decentralization and also like a really clean UX. I think that they tackled a very difficult problem and did a very incredible job of solving it well. So the main difference between SkyFeed and Mastodon is that Mastodon is federated. And what that means is that as a user, you sign up on someone else's server and that someone else has full control over what happens to your account. Um, and so Mastodon - it's, it's called the fediverse. You know, they're somewhere between dozens and hundreds of servers that users use and any one of them could go offline and take a thousand users with it. Um, but one of them can't go offline and take the whole thing down. Um, and so it's, it's much better than Twitter, but it's still this situation where the average user on Mastodon doesn't have control themselves. They, they delegate control to someone else, whereas on Skynet, every single user has control themselves and also does not need to worry about running their own node at home. Uh, so Mastodon could be fully decentralized if every single user ran their own Mastodon instance and on Skynet, you don't need to do that. Right.

James (22:53):
Uh, you know, I ran a Mastodon instance for a little while, um, way back when it was much newer. And you know, what I figured out very quickly about myself is, I was not willing to go through the maintenance effort to keep it up-to-date, uh, in order to participate in this relatively small social community. So it sounds like the argument you're making is that hosting it on Skynet kind of resolves that problem, right. Is it's no longer up to the individuals to do the server maintenance, it's handled by Skynet.

David (23:28):
Yes. Um, and so the, the like really nice trick is that Skynet portals can do all the maintenance and management on behalf of the user, while still ensuring that the user has full control. Um, and any time a user can switch to a different portal and the experience will be completely seamless. All their data will be the same. And everything is still under their control. And if a portal goes rogue, um, and wants to do a lot of damage to the ecosystem, it actually has no power to do so because everything is controlled by the users. Um, and I will say I'm cheating a little bit here because on the traditional web, web browsers, don't have the primitives necessary to, you know, double-check that the portal is giving you the code it's supposed to be, et cetera. Um, so we are, we are assuming a little bit that the web browser gets upgraded to be able to do the cryptography with the portals that is necessary.

Anna (24:25):
Um, I, I might be completely off here, but something about the setup that you described reminded me a little bit of like, Scuttlebutt, is that totally wrong? Just the idea like the messaging and the way it sort of propagates, is there any connection or am I completely in a different realm?

David (24:44):
I think, I think there are good parallels to Scuttlebutt. Um, and, and that is another project that I, um, have spent a lot of time looking at. And I would say, uh, uh, has done a very good job of achieving a nice trade-off between user experience decentralization and just technological complexity. I think Scuttlebutt does a lot for how simple it is. Um, and, and that's a remarkable feat. But again, Scuttlebutt needs an instance. Each user kind of has to run a scuttlebutt instance and maintain that. Whereas on Skynet, we've managed to get away from the need for users to run instances.

James (25:21):
I also have run a Scuttlebutt instance for awhile. I think that there are a lot of parallels between scuttledbutt and Skyfeed, and that you kind of traverse a social graph. So you connect to your friends and retrieve their feed. But I do think that the fact that you don't have to run an instance, it's going to be huge for this people hate running code.

David (25:47):
I think that that's also one of the, one of the big things we realized for our six years of maintaining Sia. Um, we just kind of felt, especially near the end of the six years, that it was too much effort to get people to run aside Damon. And I think for, for most of those six years, we were very optimistic that we could get to a world where every, every machine had a Sia Daemon on it. But I think it's much better that we can get away from that and that no, nobody needs to run anything. You just use your normal web browser, or at least it all runs on someone else's computer. Yeah.

Anna (26:23):
Another project that came to mind when you were talking about ID identity was, and I, this again might be a little bit off, but it was Urbit. Is there any connection, like in the way that you're kind of designing this, this very like multi-leveled ecosystem. Is it in any way similar to that?

David (26:42):
I think we're less similar to Urbit.

David (26:44):
Uh, my co-founder, uh, Luke is a huge Urbit fan. He owns, I don't want to say an entire solar system or maybe even one level up from that, but he owns, he owns a lot of urbit real estate. Um, and he's a big fan, but I think from our end Urbit is just a little bit too out there. Um, and, uh, so we, we ended up not pulling too many of urbits ideas, uh, just cause we, we felt that that's something less out there would be more effective.

Anna (27:14):
Um, one of the other topics that we're as like in the kind of announcement blog for Skynet, there's this mention of recursive content monetization. Uh, and I think this is sort of separate from the Twitter example. Can you tell me something about that?

David (27:29):
This is the final piece of Skynet, the big idea that we have not implemented yet, we're actually waiting for some more traditional like tech stuff to be implemented, but the fundamental idea of "recursive content monetization" is that you can tag a monetary fee into any file, which includes code. Any file or piece of code running on Skynet. That people will pay every time they either load that file or use that code. Um, and the reason it's recursive is because let's say I upload a photograph of, let's say just a beautiful picture of the Boston skyline to Skynet, and I tag a little fee on it. And then someone else uses that photograph in a video that they make. So now that video is charging a fee, but since it's using my photograph, it's also charging a fee for that photograph. Um, and then if someone say - embeds that video into a blog post, when a user reads that blog post, they are paying for the blog post and also paying for the video and also paying for the photograph. And so you get this long chain of monetization where content that pulls from a lot of different creative energies also pays into all of those creative energies. And so it's, um, it's an alternative way to monetize the internet.

Anna (29:00):
Is it, is that using the Siacoin then? Yeah.

David (29:04):
Yeah. So that would be using Siacoin. Um, and there's no reason it has to be Siacoin. It's just that, uh, Sia already has an incredibly sophisticated payment network on top of it, uh, per perhaps the most sophisticated L2 payment network in the world. And it's very easy and it's something we're super familiar with. So it was just very easy for us to leverage that payment network, to do the monetization.

Anna (29:29):
The only kind of equivalent I can think of in that regard would be like something like Brave, but they do more ad feeds here. It's really like payment-for-content, but then is it, is it sort of like a subscription? Like, would you end up, you'd have to hold this token because if you viewed a photo, you'd have to then pay something or is it like - Is it sort of happening in the background?

David (29:53):
Yeah. So do we want it to be frictionless for the user? Um, so we don't want the user to be thinking about the photo they're paying for every time they load a page. Um,

New Speaker (30:04):
I hate thinking about paying people,

Anna (30:07):
People hate paying people on the internet.

David (30:11):
Yeah. So we've tried to come up with a model. Um, and, and again, this is, you know, this is subject to actual real world testing. We haven't deployed it yet. Um, but the model we have right now is a freemium model where the portals do all the pay as you go stuff. And so the portal just like say, um, an internet provider, an ISP is paying metered rates for everything that's happening, but then to the user, the portal's presenting just a flat rate. And that flat rate doesn't have to be paid in a cryptocurrency. It could be paid using a credit card, you know, Square or something or Venmo. Um, and so a user signs up for a portal if they don't pay any money at all, they're on the free account. They get, you know, a moderate amount of bandwidth and let's say a photo cost 10 cents to load all that's going to happen is for that user, that photo might take 20 or 30 seconds to load. Um, but if the user is paying $5 a month, now that photo is going to take half a second to load because the portal knows that the user has, uh, has some money in the account. Um, and that the portal is kind of breaking even on that. And so we encourage users to pay monthly to the portal. And then the portal worries about the actual per-instance rates.

Anna (31:26):
It's the speed. That's an interesting angle. It's the load speed. It's kind of like the way that, you know, there's, there was talk a few years ago. I think they actually did pass this law where the ISP's can now change the rate of download depending on the companies that did that pass that passed. Right.

David (31:44):
Uh, I want to say it pass for mobile data. Maybe. Um, I know the general topic is net neutrality, and I know it's a big item of battle.

Anna (31:56):
But in this case, it is like on an individual level, you can actually pay for faster access. And even though I realized behind the scenes, it's purposefully like slowed down, it's not because of a lack of bandwidth or something, but it's interesting. It's sort of just, I wonder how the users would actually take that in, because I do know like getting people to pay for content is hard, getting people to either watch ads for money hasn't totally landed. I feel like it it's been floated, but it hasn't really worked, but I haven't heard this example, this idea that you would like slow down the absorption.

David (32:33):
Yeah. So, I mean, I think that it's actually a myth that getting people to pay for content is hard. And I think this myth is refuted by services like Netflix, HBO, Disney+, um, and then even services like Steam and Spotify and YouTube premium, um, are all services that are, that are very successful in getting high amounts of user subscriptions. Um, and so I really think that it comes down to the experience of paying. How often are you paying, does it feel at the, at the very moment that you pay for it? Does it feel like you're getting something valuable in return and then, you know, is the credit card most, mostly out of the way once, you know, you pay one time and then you never think about it ever again. Um, and you, you just do what you want. So I, I really think that there's a way to get users to pay for things as long as they feel like they're getting value and it's, it's, um, a very fluid, smooth experience. And I, I think there are plenty of examples of internet companies doing this well,

James (33:32):
It's interesting that you bring up all these traditional content services, uh, because they have all pretty much converged onto the monthly recurring payment model, right?

David (33:43):
Yes. Which is also why we are targeting a monthly recurring payment model.

James (33:49):
So I think like the difficulty isn't getting people to pay for content, it's making it a per access payment adds an unnecessary amount of like management and emotional overhead to these payments. Right. And we've aggregated onto this monthly model, uh, in, in my opinion, because it makes the like amount of thought the user puts into it the minimal possible amount.

David (34:19):
Yes. Um, and I, and I think I would agree with that and it's, it's very important and that's why we went with the speed because it's like somehow we have to discriminate at the service level between very expensive photographs and very low cost photographs. Um, cause we need, you know, we need users on different service levels to be able to access these differently. But we also, we didn't want an ecosystem where, you know, some content was only available to the highest paying users. We, we kind of wanted everything to be available to everyone. It's just a question of, and similar, similar to the ads, if you're on the free service ads are really just a proxy for slower access to the video. Um, and so just by giving you actual slower access in lieu of ads and giving you the option to upgrade out of it, I think we create something much healthier and, and of course, ads aren't off the table. We could, we could inject ads to pages through the portals. Um, I'm really not a fan of that, but it's something anyone could do. The, the portals are open source

Anna (35:25):
And there'd be kind of a worry though, if you had this lag that people would doubt the performance. I mean, if it wasn't clearly articulated to them beforehand, if they sort of stumbled into this. Yeah. Um, I think

David (35:38):
That is something we were going to have to be wary of. Um, and, and kind of build a common sense culture around

Anna (35:47):
What is a portal, exactly. Like you sort of mentioned this recursive content monetization portal, but what like, would that be a Netflix, would that be a newspaper? Like I'm trying to picture what the thing that the person actually visits would even be.

David (36:03):
Yeah. So I would, I would think of it similar to like an ISP, um, in the sense that it's not actually making any content itself, all it's doing is it's giving you access. And so there are a bunch of them you can pick, whichever one makes the most sense for you. They all have, you know, different pricing structures and maybe even different data caps, but you find one that makes sense for you. You sign up with that portal. And then basically now you have access to Skynet.

Anna (36:33):
Is it sort of, whatever's published behind that portal or all of it. It's just your,

David (36:38):
All of it!

New Speaker (36:38):
Oh yeah. Okay. It's just the portal into it and I got the word now.

James (36:42):
Yep. Uh, so, so kind of where, you know, each Mastedon on server is providing a slightly different surface, right? Uh, your account is homed on that server. All of these portals should be providing the same service.

David (36:57):
Yes. Um, with, with the exception that like the speeds might be different, but in terms of the data itself, that's all going to be identical. And same thing. If you switch from one portal to another, all of your data automatically follows you, you don't, you don't have to do this transfer where one portal's shipping your data over to the other, it's just, it's already all on Skynet. And so the portal can just log you in and, and your stuff's already good to go.

Anna (37:25):
I want to talk a little bit about this idea of sort of Skynet and privacy, especially cause you talked about this identity and I wonder, like, what is the approach to privacy? We've talked a lot about distributed systems and decentralization, but yeah. I'm wondering if that's also incorporated into this.

David (37:44):
Yeah. So we have privacy on the roadmap and we've actually had it on the roadmap for a long time. Um, but our opinion right now is that it adds a lot of engineering complexity, and the situation is way better in, in 2021 than it was in 2016. Um, so the number of hoops that we need to jump through as engineers to make Skynet private is a lot less than it would have been five years ago. And so kind of our hope is that five years from now.

New Speaker (38:14):
It's easy.

David (38:14):
The hoops will be less again. Yeah. And we keep, we keep having these big breakthroughs, even on the privacy front, um, like, we recently figured out how to do fully private payment channels over Skynet, which is something that you could do with onion routing, but like onion, routings, a big mess. Now we, now we can do it with what we're calling a Probabilistic Chaumian Bank and that's more than I want to go into right now.

David (38:36):
But the point is it's way, way easier to make a Probabilistic Chaumian Bank than it is to do onion routing. Um, and so that gives us, you know, that's, that's one piece of the privacy puzzle, but of course the challenge with privacy is that if you have, you know, 9 out of 10 pieces that are perfect. And then the 10th piece is like just a little bit short, you generally end up with zero privacy at all. And so we, we don't want to start putting the early pieces in place until we see the whole picture. And we know that all of them can be, you know, the whole system can be made really airtight, but we're not, we're not there yet. We don't know how to do that yet.

Anna (39:13):
Okay. Are you, are you researching or looking into the latest in zero knowledge proof stuff, or are you, is that sort of off the table for now?

David (39:24):
Um, uh, we attended a workshop with, with StarkWare, um, and so STARKs or something, we're, we're keeping a close eye on that. The two major things I really like about STARKs are one there's no trusted setup. Um, and then two, um, they're in a, they're just in a really convenient trade-off space for us. Um, the proving time for complex and repetitive programs is really good. And then the proof size is large, but, uh, on a giant data network having a bit of data is not a problem. And so I, I think for Skynet, STARKs are much further along in terms of meeting our needs than anyone else. Um, but in general, we are, we're keeping an eye on the space as a whole. And I wouldn't, I wouldn't really say we're doing a ton of work, but we are, we're, we're watching where it's growing and we're kind of updating our internal roadmap as, as people keep coming up with new things and the, in the zero-knowledge space.

Anna (40:22):
Cool. That's actually David, I think that's where you and I met in person for the first time. Uh, it was in Tel aviv at the StarkWare sessions and you were basically giving a talk on why trusted setups were the worst. I think something along those lines. And now I actually maybe understand a little bit more where you were coming from in that talk.

James (40:46):
So David, we talked to earlier a bit about how SkyFeed can have multiple different UIs with different behavior. Um, maybe some of them display only people you're following. Maybe they display 2 levels deep. I think this abstraction of the view of data from the data itself is really important. Would you mind talking about it a little more with respect to like examples of photos or videos or other kinds of data? Not just tweets?

David (41:17):
Yeah. So I, I think a, a simple example would be, um, if you had like a decentralized Instagram and you also had a camera that was connected to Skynet, um, you could set up your camera to automatically post things to Instagram on your behalf. But I think another really interesting place that this all converges is for example, messaging right now, we have this kind of giant mess on the internet where every, every single app has its own messaging toolkit, and none of the messages are consistent across applications. Um, whereas on Skynet, since you can write to other applications data, you can actually, you could just have a single inbox and Twitter could write to your global inbox, you know, optionally, if Twitter wants its own messaging system, that's something it could pursue. But if it wanted, if I wanted to just let you from the app, talk to everyone else in your normal inbox, it could also do that. And so I think that's an example of something where we have the same thing repeated over and over and over, and just a bunch of messy silos. Where on the Skynet model, um, it could be a much more coherent picture

Anna (42:29):
When those web 2 projects were being built. Did they build themselves that way because they couldn't interconnect better?

David (42:37):
Part of it is that it's difficult. Um, because everyone needs to get on a similar standard and protocols become protocols are a much bigger deal in the centralized web than they are in the decentralized web, because if someone wants to talk their own language, it's just, they can make their language incompatible with the languages that other people are talking. But I think another issue is that like you get giants like Facebook, they want to capture the network effects. Facebook would consider it a very bad thing. If you could talk to your Facebook groups on Twitter, because that's one less reason to visit the Facebook website and in the Skynet world, uh, Facebook doesn't have any control over that. If Twitter wants to have your Facebook group inside the Twitter app, it can do that. And Facebook can't do anything about it. And so I think a big part of the challenge with the centralized web is that you get these giants who build a network effect and all they want is to maintain it in every way possible. They don't like sharing and Skynet just forces that sharing to happen.

Anna (43:41):
When you start to think about what that decentralized world actually looks like, it it's so wild to imagine businesses in the way that we know them existing in that space. Like they have to completely rethink, you know, walled gardens and the kind of competitive war-like mentality that they often have in their industries. I get the sense. Or actually given the human spirit, they'd probably find new ways to create walled gardens despite the decentralized nature. But yet it's a really like, it's an interesting space to think about what could be definitely.

David (44:17):
Yeah. And I think that's one of the reasons that Skynet is set up to succeed and is set up to win is because in the centralized web businesses, ability to create moats is very harmful to innovation of it makes it a lot more difficult for aspiring entrepreneurs to enrich people's lives because they can't, you know, they can't access the Facebook walled garden, um, except inside of the Facebook cradle. And, but on sky net, um, if you have an innovative idea, you can push it out into the world in a matter of weeks and started enriching people's lives immediately. Um, and so this, this innovation just has a much, much lower barrier to entry. And I think the amount of interesting new stuff that's produced inside of the Skynet world will be so fast. Um, and, and just be something that the centralized world cannot keep up with at all. And, and that's, what's going to let Skynet bulldoze everything else. It's that it, it's not that users care anything about decentralization, it's that the builders and the entrepreneurs realized that with the decentralization, they can just make so much more powerful applications than they can in the centralized world. But that's, that's where all the smart people are going to go. And that's where all the attention is going to be.

Anna (45:31):
So you mentioned this earlier, when we were talking about the name - Skynet. And the idea that we should kind of be taking this seriously. So you just gave an example of like an amazing future amazing outcome where entrepreneurs are set free, but you did mention that there's this ominous nature associated with the name and potentially releasing unstoppable things. Let's talk a little bit about that. So you did choose to name the project that, is that something that you are, are worried about? Is that something you can actually mitigate from where you are?

David (46:05):
Yeah, so I think, I think recent events, um, underscore that very well, which is that, you know, it's, it's early 2021, Donald Trump is about to be out of office. Joe. Biden's about to be sworn in. And this platform called Parler is experiencing this major de-platforming and in the Skynet world, there would be no de platforming and Parler would be extremely difficult to take the infrastructure away from Parler. And so if you have this area where incredible radicalization is happening and no tooling that allows you to get in there and interfere with it, that's an example of somewhere where this might be able to spin out of control. But I would say in general, I think that a lot of the radicalization we struggle with today comes from the nature of centralized feeds. These, these feeds are presented to you by Twitter, by Facebook, by Tik TOK.

David (47:04):
And they are on running on machine learning algorithms that are designed to increase engagement, increased susceptibility to ads and, and brand manipulation. And it just so happens that humans get engaged a lot more when they're enraged. And so even though, you know, Twitter is not, top-down saying like let's make people really angry. Twitter is top-down saying let's, let's make people really active and machines are finding out if we make them really angry at each other, they're really active. Um, and by decentralizing and giving users the ability to pick their own feed, right? When on decentralized Twitter, I pick my feed algorithm, not Jack picks my feed algorithm. And that means that I can select feed algorithms that are healthier for my psyche. Um, and so, yeah, I do think, you know, in a, in a fully dystopian version, you have things like Parler and Skynet creates unstoppable extremism. Um, and, and all these extremists have these just wonderful safe houses, um, that they can build ideas and plot and scheme and then cause chaos. But I do think that what's actually going to happen is that we're going to jettison the model that's causing all of this extremism in the first step.

Anna (48:24):
It's crazy. As you say that, I just realized how much like the algorithms that like, especially the AI driven algorithms, it's like, they are sadly a, like a very harsh mirror to the human spirit they're holding up. The fact is you get more energized, more excited, you know, more focused, more active if you are angry. I mean, I think we all kind of knew that, but now it's like en masse scale shown, demonstrated the thing is in that sort of decentralized model though, wouldn't you still potentially have things like governance for those tools. Like does the fact that it's distributed mean there's actually no oversight?

David (49:04):
Yeah. So the key here is that the oversight happens at the discretion of the governed. And I think, I think this is a really important point that a lot of people miss is decentralization does not mean a free for all where anyone can do anything they want to, anyone else decentralization is about putting you - the end user - in control. And so if you're thinking to yourself, Hmm. You know, I just never want to see any nudity ever in a decentralized world, you can set up moderation and you can subscribe to moderators and you can, you can build a world where your world will never have any nudity in it ever. Um, and even though it's decentralized, nobody, nobody can get that in front of you. And so same thing, communities that don't want radicalization inside of them will have the power to reject radicalization. But the other side of that coin is that communities that do want radicalization will have the power to protect that radicalization. So just, just as I have the power to protect my, uh, immunity to nudity, they have the power to protect their ability to, you know, talk, talk about radical things to each other. Yeah.

Anna (50:22):
I think you just, you just brought up a really great point though, about how, like the systems that exist now are more to blame than the existence of potentially like hard to find edges of the internet channels for people to connect. Like it's not... The existence of those channels is not the problem necessarily. The problem is that these large entities have been pushing us to just consume more content. We consume more content of things we are into. And we want to see in a way, even if it's sad or disturbing or enraging.

James (50:57):
or nudity,

Anna (50:58):
I'll be honest,

David (51:00):
We call it doom to scrolling.

Anna (51:02):
Yeah. I was really, really good over the last few months to not do that, to just ignore the U S where I'm not from, because I have no control anyway. But then in the last two weeks, it's been very hard. I fell off the wagon. It's sad. I'm annoyed. Yeah. But it is an interesting behavior to observe when you do it. Cause you're like, it, what a waste of time and why am I so bored that I'm doing that? Like, I must be bored or something, but I do wonder like that, that idea of choice is it's very appealing, but I wonder like if you can narrow down your world that much, is that also good?

David (51:44):
Yeah. That's a good question.

Anna (51:45):
Yeah. Like what I just described before, like my boredom, it's almost like, because I did that because I just, just wanted to see the stuff that I, for some weird reason wanted to see, like this kind of stuff that's going over, going on in the US and I didn't make me happier. I wasn't like I wasn't actually learning that much.

David (52:07):
Yeah. I think that's a good question. And, um, I think that's something that the creators on Skynet, the people who are building the Twitters and the YouTubes of the future, you know, it's, it's going to be up to them to figure out the optimal point between like stimulation and education. And, uh, and just how much of a filter bubble should we have. Cause I, I do think filter bubbles are probably a good thing in at least a little bit of moderation, but now, now we have control. And if we want, we can have a, you know, a completely impenetrable filter bubble. And is that a good thing? Is that what users are going to choose? I don't know. And I think that's an open question and something that I'm, I'm excited because I'm optimistic that we will find the right answers, but I, I am also aware that there are lots of wrong answers that we could end up on.

Anna (52:54):
Hmm. Cool. Well, David, thank you so much for coming on the show.

David (53:00):
Absolutely. It was a, I had a blast and I think we covered a lot of really interesting things.

Anna (53:05):
Totally. And, uh, I'm very excited to see what comes next with Skynet, especially, I'm particularly curious to see how this content recursive content monetization plays out. Do you have any timeline on when that stuff would actually land?

David (53:21):
Yeah, we're hoping to have it, uh, completely deployed in March. Um, were, Oh, the main struggle right now is actually just accepting traditional payments. In the crypto world, it's like really easy: you just send an address, you get money. But in the traditional world, it's like, Stripe is like, "no, we don't do crypto". And then Square is like, ""Oh, we only service Japan in the U S" and all of our customers are in Europe. Right. And then you have like these accounts and you have to manage the payments. So it's all this, all this like stuff that plenty of companies have solved before. That's actually proving to be more annoying. Um, none of the decentralized versions of them so that that's, what's holding us back. But as soon as that's done, uh, yeah, I'm thinking March is a reasonable timeline for monetization to be ready to go.

Anna (54:05):
Cool. I mean, March sounds very close and not completely surprising that it's these traditional payment systems that are the holdup, but good luck with that, David, and, uh, hope to welcome you back sometime.

David (54:17):
Thank you. Uh, it was a pleasure to be here and I hope to be back soon.

Anna (54:20):
Cool. And James, thanks so much for co-hosting again. oh wait, this is the first time you cohost. Thank you for co-hosting anytime. Cool. And to our listeners. Thanks for listening.

