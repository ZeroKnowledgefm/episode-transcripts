[Anna Rose] (0:05 - 0:21)


Welcome to Zero Knowledge, I'm your host, Anna Rose. In this podcast, we will be exploring the latest in zero-knowledge research and the decentralised web, as well as new paradigms that promise to change the way we interact and transact online.


[Anna Rose] (0:28 - 2:06)


This week, Nico and I catch up with Ian Miers, Assistant professor of Computer Science at the University of Maryland. Ian is one of the co-authors of the OG paper Zerocoin and Zerocash, the original papers released over 10 years ago that for the first time combined this emerging ZK research with blockchains. Since that point, Ian has worked on trusted setups at Zcash and pioneered influential work like ZEXE, zk-creds and now zk-promises.


Through our conversation, we cover his history and how this is deeply intertwined with the initial batch of research on ZK and blockchains, research that has in many ways spawned the industry we work in today.


There was a lot to cover and we did not get through all of our questions for Ian, so we hope to have him back on the show in the near future to pick his brain on even more ZK topics.


Now before we kick off, I just wanted to share that we were trying to get some feedback from you - our listeners! Many years ago we shared a forum with some questions to better understand our listeners and community, but we are very much due for an update. So we've created a new form for the listeners of this show.


It's totally optional and you can leave it anonymous, but if you have a few minutes and want to share some feedback with us, I know we would very much appreciate it.


We are trying to understand what you are interested in in 2025, what you like about the show, how you could see us improving, and the types of topics you want to hear us covering. We're adding a link in the show notes and we're going to be sharing this across a few channels. So if you're up for it, please fill it out.


Also, I just want to be sure you're following our release of the ZK Whiteboard Sessions. These videos, produced by ZK Hack and supported by Bain Capital Crypto, feature our hosts Nico and Guillermo exploring the building blocks of the ZK systems we know and love.


We are currently in our third season and we're releasing videos every two weeks. These can be found over on the Zero Knowledge Podcast YouTube channel - subscribe there to be reminded. I've added a link to both the forum and the ZK Whiteboard Sessions, do check them out now.


Now, here is our interview with Ian.


Today, Nico and I are here with Ian Miers, Assistant Professor of Computer Science at the University of Maryland, and someone very well known within the ZK ecosystem for his contributions to foundational ZK research.


Welcome, finally, to the show, Ian. I feel like this has been a very long time coming.


[Ian Miers] (2:06 - 2:14)


Yeah. It's great to be here. Finally getting around to actually being on podcasts and not going, oh, that sounds different. I'll put it off till later.
[Anna Rose] (2:15 - 2:57)


So I actually tracked this down. I think the first time I ever approached you to come on the show was actually back in 2019, right after zkSummit 4. This really is kind of giving us a timeline, and I can't believe it hasn't happened until now. You've been releasing great work, you've been so important for ZK.


So anyway, I'm just so happy that now, 6 years later, we are getting you on the show.


We're going to be spending a bit of time early on in this show looking back, doing a bit of a history lesson on early ZK papers, especially where they start to intersect with blockchain. You were very involved in that. It's something we actually haven't talked about recently on the show. So I'm excited to go back into that.


[Ian Miers] (2:58 - 3:08)


I imagine some of your listeners would be surprised to know this stuff goes back to before Ethereum was actually launched or even existed. I've been working on this since 2011, roughly.


[Anna Rose] (3:08 - 3:08)


Oh, wow.


[Ian Miers] (3:09 - 3:11)


So it's been a number of years.


[Anna Rose] (3:11 - 3:12)


It's a long time.


[Ian Miers] (3:12 - 3:23)


And we've gone from, wait, somebody has a podcast on ZK, where I'm like, that's strange, I think I'll pass, to, oh, of course, this is a thing. I'm happy to do it.


[Anna Rose] (3:24 - 3:28)


I think you had actually said yes back then, too. I don't know if you actually said no, but it didn't happen.


[Ian Miers] (3:28 - 3:33)


No. But I flaked out because academics flake out on things. That's -- and, yeah.




[Anna Rose] (3:33 - 3:38)


All right. Sounds good.


Hey, Nico. Thanks for co-hosting this one.


[Nico Mohnblatt] (3:39 - 3:41)


Hey, Anna. How are you? Super happy to be here. This is a great start already.


[Anna Rose] (3:42 - 4:01)


All right. Ian, let's do some backstory. I feel like -- I mean, you just sort of hinted at your time frame when you actually started working on the ZK stuff. Were you already involved in the blockchain sort of side of things or were you coming more from cryptography? Let's go back to that 2011 timeline.


[Ian Miers] (4:01 - 6:05)


So it's 2011. I have just started working in a research lab because I got bored of my white collar assembly line job at Microsoft. 


[Anna Rose] (4:09 - 4:09)


Whoa.


[Ian Miers] (4:09 - 6:05)


And there's this Bitcoin thing. And I do some looking into it, and it turns out that everything on a blockchain is public. It is Twitter for your bank account. And the question is: well, how do we fix this?


There is this line of work dating back to David Chaum in the 1980s on ecash, but ecash requires a trusted bank to hold a signing key. And of course, in a blockchain, you trust nobody. And now it's, we got to come up with something else.


So we spend a year or so looking at how to solve this. And the solution we come up with is, because Ethereum and smart contracts and stuff don't exist yet, and nor does SNARKs, let's build a mix on top of Bitcoin using a different set of zero-knowledge proofs.


So this is a paper we wrote in 2013 called Zerocoin. And conceptually it works, but the technology is not quite there.


However, at the same time, in fact, literally the same conference, this is IEEE S&P in San Francisco in 2013, somebody presents a paper on the first implementation of what are now known as SNARKs.


[Anna Rose] (5:16 - 5:16)


Who was it?


[Ian Miers] (5:17 - 5:53)


This was Bryan Parno. The paper was Pinocchio.


There was this arms race between -- so there's this paper a year or two earlier called Quadratic Arithmetic Programs, something like that, ZK proofs without IOPs. And that paper is published. It doesn't have an implementation, but it suggests this new way to do very fast ZK proofs, and then there's a race between two groups, Bryan Parno and others then at Microsoft Research and Eran Tromer, Eli Ben-Sasson, Alessandro Chiesa, Madars Virza, and I think I'm not shortchanging any authors on that paper, who were at MIT and in Israel to publish the first implementation.


[Anna Rose] (5:54 - 5:55)


Wow.


[Ian Miers] (5:17 - 6:05)  
And Parno -- by then of how confidence worked, Parno's paper was published first. They had their paper in August at Crypto. So both top-tier works.


[Anna Rose] (6:05 - 6:07)


This is 2011 still?


[Ian Miers] (6:07 - 6:10)


No. No. This is 2013 now.


[Anna Rose] (6:10 - 6:22)


This is 2013. Okay. Yeah. So Zerocoin paper writing happens 2011, you just said. That is actually -- Nico, we have a history, we do a research history, and I actually have the wrong date for that. I have 2013 for that one, I think.




[Ian Miers] (6:22 - 6:41)


Yeah. 2013 was when the paper was published. And you take a year -- yeah, it's just you take a year to figure out how to do it and try a bunch of things and nothing works. We come back to the slow solution, which is zero-knowledge proofs.


And then it takes a little bit to actually write the paper. You submit that in October 2012, goes around till when it's published. So this is the lag time.


[Anna Rose] (6:42 - 6:43)


2013. Okay. So we were all right on our dates.


[Ian Miers] (6:43 - 6:44)


Yeah. No. You're right on the dates.


[Anna Rose] (6:44 - 6:59)


The word, like the term "SNARK", also as far as we've understood, is defined in a paper that comes out in 2012. This is Alessandro Chiesa, and they actually use the term "SNARK", at least for the first time, as far as we know.


[Ian Miers] (6:59 - 7:03)


Yeah. I think it's some Bitansky et al. paper, but I can never remember the time or the sequence of these things.


[Anna Rose] (7:04 - 7:12)


Cool. And then, so Zerocoin, this is this initial work. It's Matt Green, yourself, and Christina Garman.


[Ian Miers] (7:12 - 7:15)


Christina Garman and Avi Rubin, who was a faculty at Hopkins.


[Anna Rose] (7:15 - 7:24)


Just going back to that first one, though, Zerocoin, who proposes it, how does that come together? I've actually been really curious about that initial paper.


[Ian Miers] (7:25 - 8:20)


So it's me and my, who became my PhD advisor, I wasn't a PhD student at this point, chatting about various interesting problems.


We had some other stuff we had to do to justify my salary, but that was boring and involved medical records, and we're just sort of playing around with this, because it's a very challenging problem. It's a set piece sort of cyberpunk dream to build ecash that academics has tried, and have tried to commercialise before, and failed due to personality and ego conflicts in some versions of it. And it's an interesting problem.


It's just a nerd snipe like, let's try to do this. And so, we're just sort of playing with it until we finally come up with a solution.


So it's me and Matt, and Christina is one of Matt's actual PhD students at that point. So she gets roped into it. Avi Rubin is the senior PI in the lab with the grant, so he ends up on the paper.


But the original concept was the usual me showing up at Matt's office and us throwing various ideas and problems at the whiteboard, seeing what sticks.


[Anna Rose] (8:20 - 8:21)


So this was at Johns Hopkins.


[Ian Miers] (8:22 - 8:22)


Yes.


[Anna Rose] (8:22 - 8:38)


Okay. Cool. So you work on the paper, the paper comes out around the same time you say there's these two camps that are working -- but I guess, are they working mostly on that SNARK construction? Or something like Pinocchio, is it just SNARKs?


[Ian Miers] (8:35 - 8:36)


It's just SNARKs.


[Anna Rose] (8:36 - 8:38)


Not blockchain. Okay.


[Ian Miers] (8:38 - 9:00)


Not blockchains, not payments, just SNARKs. These are classic -- I don't want to describe all of them as theorists, but they're definitely, we have a theoretical tool, we will build this primitive with the definitions from this black box, we don't necessarily care about the applications for the paper. And these two things come out, and it's basically clear to us and the people presenting that, okay, we should try to do this.


[Anna Rose] (9:01 - 9:01)


Work together.


[Ian Miers] (9:01 - 9:02)


Yes.


[Anna Rose] (9:02 - 9:25)


Back then, those SNARK papers though, they were dense. The things we now understand is the components that build a SNARK, which we've covered in things like the Whiteboard Session, like the IOPs, polynomial commitment schemes, FRI, all those things we've broken down.


But back then, what is this paper like? I feel like it's just like a blob, and they're like, here you go.


[Ian Miers] (9:26 - 11:21)


So it is a blob. It's a black box that actually I managed to do a bunch of this work without ever needing to figure out the details of what's in it. This is spoiler, somewhat regrettable because as a result, the first set of trusted setup ceremonies that were done for Zcash, which I wasn't involved with, were kind of terrible.


And then at some point I actually peer into the black box and figure out what these primitives are, and then me and Sean Bowe and Ariel Gabizon go and write the actual Powers of Tau setup that's been used for everything, or derivatives thereof.


But yes, at the time, these things are not very well explained, but they don't need to be because the interface you're using is a circuit. We just need to describe some computation.


So there's this fun problem now of which group do we work with? And we've talked to both of them. And what happens is -- we've talked to both of them at the conference, or people associated with them. What happens is there's usually a follow-up email.


And it's those groups who email us, except one of the groups emails my advisor, Matthew Green, and the other group emails me. If you know anything about academia, you know that professors don't check their email very frequently, and grad students maybe do.


And so as a result, we ended up working with Eran Tromer and Madars and Alessandro because one of them emailed me, and I can't recall who it was, probably Alessandro, who was a grad student, because again, professors don't check or send emails.


And so that was sort of an accident of history, though I think it was probably the right call not to talk about anything about either of the research groups, but the problem is the other group was at Microsoft at the time, and so all the IP was owned by Microsoft.


And I can't imagine Microsoft executives in 2013 or '14 signing off on let's make anonymous money on the internet. So that was probably for the best.


[Anna Rose] (11:21 - 11:36)


I mean, it sounds sort of like that's how the dice rolled out, but actually, yeah, that point about IP and potential like trying to guard something, I wonder if that wouldn't have caused some friction anyways.


[Ian Miers] (11:34 - 11:35)


It would have.


[Anna Rose] (11:35 - 11:36)


Yeah.


[Ian Miers] (11:36 - 11:51)


I mean, very narrowly, we could have run into problems if anyone from the other side had patented their ZK stuff, because that has happened to subsequent people from some of those institutions with ZK work, and there were lawsuits.


[Anna Rose] (11:51 - 12:07)


Yeah. And there's sort of always this push and pull between the open source folks and then the companies who are contributing, and like do they try to create moats? And I think for ZK, we've been really lucky with a very, kind of from the start, open system.


[Ian Miers] (12:07 - 12:07)


Yes.


[Anna Rose] (12:07 - 12:26)


Tons of contribution where, I mean, I think there was talk at some point of StarkWare patenting, and they chose not to, which I think was really good. There have been other technologies like FHE where you are seeing a lot more patent stuff, and you're seeing less acceleration over there too.


So anyway, it's very interesting.


[Ian Miers] (12:27 - 12:41)


Yeah. My piece of advice, if there's anyone who's in academia and listening to this, seriously consider not patenting your work. It'll make sure it gets used more to make sure it gets adopted more. It may or may not make your fundraising story for your seed round trickier.


[Anna Rose] (12:42 - 12:42)


Yeah.


[Ian Miers] (12:42 - 12:48)


But in my somewhat limited experience, that's not the biggest deal, at least if you have really interesting ideas.


[Anna Rose] (12:49 - 13:08)


All right. So let's move on to the next paper that comes out, which does combine a lot of this work, Zerocash.


So we have Zerocash. This is the combined effort. This is blockchain and ZK combined. And I guess, is it done in a better way? Does it solve the problems that Zerocoin hadn't been able to?


[Ian Miers] (13:09 - 13:19)


Yes. So Zerocoin looks shockingly like Tornado Cash. In fact, it basically is Tornado Cash, but Tornado Cash used the SNARK. So they took the work from Zerocash for that. But the --


[Anna Rose] (13:19 - 13:26)


Yeah. Was it a sidechain of Bitcoin with privacy? 


[Ian Miers] (13:23 - 13:47)


It was proposed as a, let's modify this on top of Bitcoin. Because we're academics, I'm somewhat naive.


And I remember giving a talk at the Bitcoin Conference in 2013, talking about this, and people were like: no, we're never going to do this. Peter Todd stands up and says the Bitcoin developers talked about it and they're never going to do this.


And to be fair, at the time, given the maturity of the technology, that was probably the right choice.


[Anna Rose] (13:47 - 13:47)


Yeah.


[Ian Miers] (13:48 - 14:07)


It is also just sort of amusing because my recollection is that was the same Bitcoin Conference Vitalik was at as a reporter going around talking to people about smart contracts and got a similar answer and he went and did Ethereum.


So I might have the year off on that anecdote, but it was somewhere in there, might've been a year beforehand.


[Anna Rose] (14:09 - 14:14)


Cool. So in the move to Zerocash though, I mean, Zerocash is a standalone blockchain of its own, right?


[Ian Miers] (14:15 - 15:13)


We had two versions in the paper, but the idea was it was going to be a standalone blockchain. We were interested in the protocol, which can operate however. And that is the core private payments protocol that is used by pretty much every other -- now at this point, every serious privacy-preserving payment scheme, with the exception of maybe Monero, which is supposed to move to a thing called Full-Chain Membership Proofs, which are kind of similar.


So the idea of course, everyone's probably seen this in this podcast is, you have a Merkle tree of notes that have a variable balance on them and you can pay them to other people and you do this double-spin prevention via what are now called nullifiers. That name was not in the paper, but it's the same exact technique, PRF.


And so this is the technique we worked out. It's well-suited to SNARKs because it's efficient. The Merkle tree stuff is nice enough to do. And you could tweak it. You can use different ZK proofs. You can use different PRF constructions and stuff. But that's the core protocol that we built. And then the map, after we do it, turns into via set of security steps, Zcash to start.


[Anna Rose] (15:14 - 15:17)
Did it have a renaming process too?


[Ian Miers] (15:18 - 15:18)


Yes.


[Anna Rose] (15:19 - 15:35)


Wasn't it sort of Zerocoin paper, then Zerocash paper, then like -- well, there's a Zcoin project which spins out, and then there's -- is Zcash always Zcash or is it like -- just if you can remember.


[Ian Miers] (15:35 - 17:42)


That's actually a good question. Debates and naming things is always this contingent stuff. And even back when we wrote Zerocash, there was a discussion of should we call it Zcash instead of Zerocash, the paper.


And I was like, well, the previous thing was Zerocoin, and we've gone from single coins you can mix to cash, like an actual payment system. So I think we should call it Zerocash.


And then that works out. But later, the argument of: well, it's shorter and better when we have to go name the blockchain, it makes that contingent wins, I think, rightfully, and we call it Zcash.


When that happened, I don't recall it because actually the actual, at the time, company, now nonprofit, that is the paperwork for the LLC that did all, raise the seed round and everything, is the Electric Coin Company.


Which by the way, I would suggest if anyone is naming a company and you think, oh, that's cute and a nice fun thing, don't do that because after you have to say it the 15th time in an interview or talking or with lawyers, you're like, oh, this is cringy and we wish we had gone with something else.


So there's some iteration of names in there. I think sometime in between when Electric Coin Company happens and there's press about it, somebody takes the old code for Zerocoin that we put up with this giant warning of "Do Not Use This." It probably have security bugs in it. If it breaks, you own the pieces.


They take that code --


[Nico Mohnblatt]  (16:51 - 16:52)


And they use it.


[Ian Miers] (16:52 - 17:42)


As is, and they use it, complete with the warning in the repository. And then spoilers, one of the little tiny ZK proofs in there, not the main one, an ancillary one, was in fact broken and somebody used that to steal -- forge several million dollars worth of tokens at the time.


So, yes, for anyone reading this, if you go to my grad students codebases, and you're like: oh, we'll use this. And there was a warning on it of warning, warning, warning. This is not audited. Don't use it. I really mean it.


And if somebody shows up and robs you of all of your tokens in the process for academic code with those things on it, you were too cheap to pay for an audit for, I will have no sympathy for you.


[Anna Rose] (17:30 - 17:31)


Wow. And that was Zcoin?


[Ian Miers] (17:31 - 17:42)


That was -- I don't recall. There were a couple of different forks of all these things, and I don't remember which one it was.


I think Zcoin is still around. It renamed and uses a different protocol now.


[Anna Rose] (17:41 - 18:18)


Yeah. So they're Firo now. I don't know what they're up to, but there was this period where it was Zcash and Zcoin were two companies which were based on similar tech. And then there was the Zerocash and the Zerocoin paper.


Anyway, it was just a lot of funny overlap there, naming collisions in a way. But thank you for teasing that out for us.


Okay. So you had talked about this trusted setup, optic waste, in the Zerocash paper, was that already described? Was that part of the paper, or was it just the architecture for Zcash blockchain? And then you guys had to create this other thing called the trusted setup.


[Ian Miers] (18:19 - 19:22)


So the paper mentions that you need a setup, but it does not describe how to do it. I would have to double check, but I think it says: you might be able to do a multi-party protocol where a bunch of parties come together and generate it. But that would have been like black box, we have multi-party computation, so of course, you can do this in theory.






And that wasn't targeted at commercialising this. It was probably targeted at avoiding reviewer number two pointing out that it was a problem.


After we write the paper and it becomes clear that we are actually going to commercialise this thing, because that takes a while, we're kind of hoping someone else runs with it.


And none of us want to quit our day jobs as academics. I don't want to go try to be a CEO. I don't necessarily have the skills. I kind of want to stay in research. I figure if I do this myself, there's a pretty good chance that it will fail. And if it succeeds, there's a non-trivial chance I end up in jail.


And so I'm like: okay, I will stay in academia doing research. And we thankfully find Zooko Wilcox, who wants to go start the company. He does the very hard work of hiring the right people and setting the team culture and the ethos to get the thing launched, which was an amazing lift.


[Anna Rose] (19:22 - 19:47)


And then there's the trusted setup that happens, the six person or seven person, I mean. And there's an entire episode dedicated to that on the Radiolab, like not this podcast, but another podcast.


And then we we did have Zooko on the show, on this show, for Episode 50, really long ago, something like 2018, 2019. And I can dig that up as well. I think he goes over that story.


[Nico Mohnblatt] (19:47 - 19:56)


You also have an episode with Mary Maller, who worked on these universal and updatable setups, sort of a different case of trusted setup. So that's also one from the archives.


[Anna Rose] (19:54 - 19:56)


Yeah. That came later, though, right?


[Ian Miers] (19:56 - 19:58)


That was later. Yeah.


[Anna Rose] (19:58 - 20:20)


Yeah. So I'm just -- on that trusted -- the initial trusted setup. After that, we have Ariel Gabizon and Sean Bowe who discover that problem, the bug.


Was the bug in Zerocash, the paper? I know it's not really a bug. It's like a missed thing. But was it in the paper or was it in the implementation?


[Ian Miers] (20:20 - 20:50)


My recollection, and this is a bit of a recollections may vary. So I think it's not in Zerocash, the paper, because Zerocash uses sort of black box, the zkSNARK, and references it.


The issue was a distinction between the specification of I think it's BCTV14b, but I always confuse these citations. The actual SNARK that Eran Tromer or Madars Virza or Alessandro Chiesa and everybody had written, the specification of it in Appendix, whatever, of the paper, and the implementation.


And my recollection on this is the implementation was correct. The specification, however, had some extra elements in the CRS that should not have been there.


And in the course of implementing the setup, they implemented the spec, not the implementation. That is my recollection.


[Anna Rose] (21:13 - 22:15)


Interesting. I'm going to cite one other episode for the listeners who are interested in this history. Episode 76. It's actually one of my favourite episodes of all time on this show, Sean Bowe, after the fact.


So this is like a year and a half after doing sort of a recollection, debrief, look back on finding this bug, talks about the bug and how to correct the bug. And the stress and strain that this team was under because it was known to this tiny inner circle in ZCash that there had been a problem in their system.


If it had been exploited, I mean, we still don't entirely know that it hasn't, but we assume it hasn't because of some metrics. But if it had been, it would have allowed for unlimited printing of funds in the shielded part of Zcash. That is the hidden, non-visible part, the stuff behind the SNARKs, which would have been a very bad thing for ZK, for privacy blockchains.


I mean, it would have just been a total catastrophe.


[Ian Miers] (22:16 - 23:01)


It would have been, yes. It's kind of funny, though, because this is a thing that hangs very large over everybody's head. And it definitely is very legitimate, a real problem. You need to be very – make sure you don't do it.


On the other hand, now that we've had a sequence of other ZK proof systems and cryptocurrencies and whatever, I almost feel like everybody has at least one soundness bug once that can inflate money.


This happened to Monero, which was not a SNARK-based system. May have happened more than once. It's happened to almost everybody. And it is typically not catastrophic because it's not usually exploited yet. It has happened.


[Anna Rose] (22:53 - 22:54)


As far as we know.


[Ian Miers] (22:54 - 23:37)


As far as we know. Though I should say that if you had this exploit, you would have cashed out by now for most of these things.


When we see the NPM supply chain attacks, when someone puts a bug in Node.js, and then backdoors a bunch of wallets or whatever it is. Those don't stay around for that long because anybody who has the technical competence to mount that attack realises they want to monetise it quickly and move on.


So it is a big deal. It really is a big deal. It's just kind of funny to think back to when you did that podcast, it was really a big deal versus now.


I suspect if we ask people in the general climate of ZK about how big a deal is a soundness bug, it wouldn't quite be, oh, that's a Tuesday, and it shouldn't be even close to that.


But it is depressingly probably closer to that than we'd want to admit.


[Anna Rose] (23:38 - 24:03)


Yeah. We do this newsletter called ZK Mesh where we collect links and stuff and we have a vulnerability category.


We don't always use it. Sometimes nothing has come out. But often there is something. There's lots of things. I mean, often they're found in an audit, they're found by White Hats. They're reported. It's disclosed. It's found by the team. But it is a common phenomenon.


Back then, though, Zcash was the only one.


[Ian Miers] (24:03 - 24:38)


It would have been catastrophic then because it was the only one. It was the thing that launched to the highest profile. It would have been completely catastrophic.


I do want to make a comment, though, because these bugs are bad, but what a lot of people, I think, don't understand is they are bugs almost like any other software bug.


It's like you accidentally disclose something. You accidentally -- like you did the wrong thing with a hash. Other projects have had the classic like you can screw up the Merkle tree and have constraint bugs. These are software bugs.


And the reason I'm emphasising this is because any piece of cryptography is subject to that kind of risk.


And one of the problems we have is there are some, frankly, charlatans in this space who go off and say: oh, ours doesn't use random oracles, or ours doesn't use non-falsifiable black box assumptions, or ours is post-quantum secure. And they somehow are implying we don't have this risk that these original SNARKs that you all heard of at the start have. And that is from a strictly theoretical point of view.


True, the risk profiles are different, but that's not the risk you care about. The risk you care about is the actual implementation and audit risk. It's the equivalent of a used car salesman saying: oh, you shouldn't trust rubber tyres on that particular car. You should buy mine. It's bad.


[Anna Rose] (25:16 - 26:03)


Yeah.  Interesting.


Okay. So let's talk about this trusted setup. Nico, you just hinted at this.


So trusted setups, the initial ones were small, very challenging to organise. It was dramatic. There was some fun things about them, people going into the woods, burning computers, and taking, I don't know, radiation meters to get some randomness into this trusted setup.


I don't think I was actually that involved. I don't know if I was involved at all, actually, at the time of the first trusted setup. But by the second one, I do remember it for Zcash.


After that, though, we learned about this new, or maybe actually it was even around that time, there was this paper called Sonic. And Ian, are you an author on that?


[Ian Miers] (26:03 - 26:06)


Sonic? No. I'm an author on the previous one.


[Anna Rose] (26:06 - 26:26)


Okay. So tell me about -- so Sonics hit our radar in a big way. This was the first time we understood that you could have this universal, what you were saying, Nico, like you could've created trusted setup that you would still be able to sort of upgrade. You'd be able to do things to the underlying system without having to run this entire thing each time.


[Ian Miers] (26:26 - 28:05)


Yeah. There are two things going on here. One of them is this notion of you can do updatable setups.


And then the second thing is, how do you actually do efficient updates? How do you do a protocol with multiple people show up and do the setup ceremony? And so this is the bit I think is actually probably more relevant because I don't think Sonic used it anywhere.


I mean, it did lead to a bunch of other interesting proof systems. But in terms of setup scenarios, systems, what happened is the protocol that Zcash ran originally didn't scale because everybody had to communicate with everyone else multiple times. And they all have to be online for the entire thing.


So it takes like two days to run and everybody has to secure the laptop the entire time. And if you go read -- Peter Todd has a now-deleted blog post about this, because he participated and he was very gung-ho about it. And then he realised it was lending credence to Zcash being security.


It's a Bitcoin person got upset about it. This was a genius thing on Ziegler's part to involve Peter Todd in this. But he flew out to somewhere in Canada, like multiple airline tickets as decoys, different rental cars, drove around. And then he sits in this cabin or something and he --


[Anna Rose] (27:33 - 27:35)


No one cared back then.


[Ian Miers] (27:36 - 27:37)


Yeah. Nobody cared. And so he sits --


[Anna Rose] (27:37 - 27:40)


I like that he took all of this precaution. That's so great.


[Ian Miers] (27:41 - 28:04)


Right. And he sits in this cabin with like a ninja alarm, which is like a chair propped against the door.


And this is the kind of trouble you have to go to, because the only six people, six or seven people participating in this thing, and that is, if you were going to steal money, that's not the hardest group of people to own.


And it's more importantly, it's very hard after the fact, this is a lesson we learned, to convince people you should trust those six or seven people, especially when one of them was anonymous, which actually turns out to maybe have been better because that person was Edward Snowden. I didn't know this at the time.


[Anna Rose] (28:12 - 28:13)


Really? Whoa.


[Ian Miers] (28:14 - 28:31)


Which is, by the way, a hilarious idea. Because if you had to pick one person whose laptop is certainly compromised by multiple countries' intelligence services, it's Edward Snowden.


Like if the guys at Fort Meade didn't own his laptop, I want my tax money back. And the Russians certainly did.


[Anna Rose] (28:29 - 28:30)


Oh my God.


[Ian Miers] (28:31 - 28:32)


Right. So like --


[Anna Rose] (28:33 - 28:34)


Wow. Amazing.


[Ian Miers] (28:35 - 29:28)


So it's very hard when you have this protocol like that, and it can't scale. You can't add more people. And so everyone's out like, why wasn't I included?


Okay. So that's the protocol that Zcash launched with.


Two years later, I'm talking to my advisor and going through how that thing works, and I realised that actually we can radically simplify this because the parameters are basically the Powers of Tau, g to the s, g to the s squared, g to the s cubed, et cetera, up to the degree limit, plus a second version, which is like g to the s times alpha plus beta something. I don't do the math off the top of my head. And that has a nice structure we can abuse.


And so Sean and me and Ariel Gabizon go and make this paper on scalable multi-party computation for parameters. Sean has this lovely name for it, which he backronyms as like MMORPGs, Massively Multiplayer Online Replaceable Parameter Generations.


[Anna Rose] (29:28 - 29:29)


Oh, I like that.


[Ian Miers] (29:30 - 30:19)


Yeah. And so this is the protocol that ends up getting used for the second Zcash setup where anybody can participate. And then gets used for all of the other setups, for every other project that's using a Groth16 or a similar set of things, or even Plonk.


And there are variants of this. We write this paper, we put it on ePrint. We don't bother to really publish it anywhere.


Mary Maller wrote a follow-up paper that changes the model a little bit and does the formal security proofs and gets it to Eurocrypt, which is great work. It uses the random oracle model, which we had avoided because of these used-car salesman problems. We didn't want anyone like going about it.


Okay. So that's the setup thing. Then subsequently there ended up being, or about the same time, there ended up being various SNARKs that don't need this absolutely specialised trusted setup that's specific to circuits.


[Nico Mohnblatt] (30:20 - 30:22)


So now we're talking about universal setups.


[Ian Miers] (30:22 - 30:38)


Universal, yeah. Universal protocols come in. And the idea there is you don't have to redo the setup for every single new circuit you make.


So Plonk has this property, Marlin has this property.


[Nico Mohnblatt] (30:32 - 30:34)


Pretty much most of the things that come after.


[Ian Miers] (30:34 - 30:38)


Yes. And the reason for that is because the parameters are just for a polynomial commitment typically.


[Anna Rose] (30:38 - 31:01)


Interesting. Okay. I see the distinction here. So there was two steps. One was allowing more people to participate, not having to be online at all at the same time.


And then the second were, it almost sounds also like Sonic and Plonk, these are proving systems. It's not just the trusted setup. It's just they can use trusted setups in different ways almost and open it up, open up the design space.


[Ian Miers] (31:02 - 31:49)


Yeah. To be fair, Sonic did have this notion of people could update the setups as they go, but the protocol and origins for that is not that paper, it's Sean and I's and then Mary's work following up and putting that on slightly more formal ground.


So they're two different things. Universal setup is you can reuse it. The setup ceremonies are how do you get a bunch of people to participate and can get trust.


And this is actually really fun because the real effect of this is if somebody on the internet is a naysayer is going: I don't trust you about this, you can just say, well, why didn't you participate?


It's a social thing that the cartography enables by having it scale. You can just make anyone put their money where their mouth is, and as a result, they have to shut up about it. And so, the net result of this is at this point now, in 2025, nobody complains about trusted setups.


[Nico Mohnblatt] (31:50 - 31:51)


I mean, we're even avoiding them completely. We have --


[Anna Rose] (31:52 - 31:54)


Yeah. Actually, now there's systems that don't need them.


[Ian Miers] (31:55 - 32:08)
There are, but I don't think that's the market -- I mean, there was a bit of marketing on it, but it's not like they're competing on trusted setup with universal stuff or whatever. It's like other domains, post-quantum, speed, VMs.


[Anna Rose] (32:05 - 32:16)


Well, there's a couple like other steps. I mean -- so I worked with Kobi on the Plumo setup. There, it was like parallelisation. So that was kind of a bit of an advent, a bit of a change.


[Ian Miers] (32:17 - 32:30)


Yeah. There were a bunch of sequence of improvements on every major project who has done this has done a tweak to it when they're like: oh, we can do this better. And I don't mean to shortchange any of those, I just don't have that list of projects in my head on what they've done. So yeah, parallelisation is one.


[Anna Rose] (32:32 - 32:34)


Perpetual trusted setups is another where it goes on forever.


[Ian Miers] (32:34 - 32:49)


Yes. That's kind of easy if you have a universal setup system. If you're using Groth16, after you get the Powers of Tau, you have to do the second phase and that fixes it. But actually, I think at this point, there may be these sort of perpetual soup ones where people will reuse the first parameters from various projects and add it to them.


[Anna Rose] (32:49 - 32:49)


Totally.


[Ian Miers] (32:50 - 33:49)


Howard Wu at Aleo had this trick for making it easier to check the transcript where you only had to check one element of the Powers of Tau at the end. There's been some people who have done guarantees about whether you can get excluded or not, whether you use a blockchain to do fairness.


That was a paper. I don't know if that was ever used. I don't know if it was worth it.


But there've been a huge number of tweaks on this core idea of replaceable participants. And I don't even know. Actually, it'd be kind of funny to figure out what is the sum state of the art if we take all the -- because I figure it's probably branched 50 times and there's like a bunch of different things on various sides where you should unify them.


[Anna Rose] (33:25 - 33:39)


Yeah. I remember for the Aleo one, there was like four different ones. So they broke up their circuit into all these different pieces. There was a moment where they were talking about doing four, because I also worked on that one, four distinct trusted setups.


[Ian Miers] (33:40 - 34:00)


Yes. And Aleo had different curves too, and you have to do them.


You can break them up. There are ways to parallelise it. There are ways to have potentially different parties participate in different parts of it. These are all interesting ideas.


Because at some point, you do hit the scalability limit in a browser. Oh, and somebody, I don't know who this was, did the hard work of making this run on a browser where you could just visit and go.


[Anna Rose] (34:00 - 34:03)


I think the Tornado Cash one was in a browser.


[Ian Miers] (34:03 - 34:03)


Yeah.


[Anna Rose] (34:03 - 34:03)


That might've been --


[Ian Miers] (34:03 - 34:04)


Might've been the first.


[Anna Rose] (34:04 - 34:23)


I mean, Aztec did, I don't think they ended up using it in the end, but this is like a really long time ago, but they -- or they used it for, what was it called? Aztec Connect. They used it for some product that is now defunct, but they had used Docker. It was easier, but it wasn't quite browser. It was somewhere on the way towards the browser.


[Ian Miers] (34:23 - 35:07)


And the cool thing is that at some point -- so I made it an absolute rule that I would not participate in these things. Because one, I didn't want anyone to claim that I had my finger on the button to like Zcash.


When they were doing that, I was like, I do not want to be involved. I do not want to be one of the people who's like trust comes down to you because one, people might think I broke it. And two, people might think I have those parameters on my laptop and can commit billions of anonymous dollars.


And so I had a sort of personal rule of refusing to participate on these things, including for Aleo, including for anything else, up to at some point, I think somebody asked me to do it for something Mysten was doing. I don't remember what it was, and I'm like: all right, there are enough people participating at this point, whatever. It's not on me.


So it's nice that we've scaled to that point where it's no longer an OPSEC risk to be in one of these things.


[Anna Rose] (35:07 - 35:13)


Totally. We just talked about Aleo and ZEXE. That's another project that you -- I think you're involved in that.


[Ian Miers] (35:13 - 35:14)


Yes.


[Anna Rose] (35:14 - 35:20)


And actually, maybe to wrap on the Zcash story a little bit, were you part of the founding team?


[Ian Miers] (35:20 - 35:20)


Yes.


[Anna Rose] (35:21 - 35:27)


What did that mean to be part -- I've always wondered about that because there's like a lot of co-founders.


[Ian Miers] (35:27 - 35:26)


Yes.


[Anna Rose] (35:26 - 35:28)
I wondered, what did you do? 


[Ian Miers] (35:28 - 36:26)


So this is a good question. And the answer is at the very start, not as much. It was like they needed to get the Bitcoin bits of it working. And I gave them some pointers on how to work through the Bitcoin code base, but they're professional engineers and I'm not.


I know it's a bit of seminal engineering stuff for LibSNARK because the original Zcash actually used LibSNARK, which is the code that Madars Virza primarily wrote.


And then where I really became involved was trusted setup, the first one, that was my co-founders, not me, on the academic side. Figuring that out. I did the second version.


And then the second version of Zcash, Sapling, which was Sean actually flew out. It's amazing how things work. Sean at the time was still very budget conscious. He booked a Spirit Airlines flight from Denver to Baltimore to come talk to me and Matt, and we worked out the core of the basics for Sapling.


And then Daira, [?]Strad, and Sean, and everyone did the whole work of writing out that whole spec and adding some other features and stuff. So it was high-level technical advice. And then the protocol design.


[Anna Rose] (36:28 - 36:34)


And then you got involved with Aleo as well. Were you kind of juggling all of these things or did you sort of phase out at some point?


[Ian Miers] (36:35 - 37:46)


Yeah. So what happens is I'm an academic. I do research. And at some point you end up at the edge of not needing new protocols, especially for applied cryptography.


You can do better SNARKs. I don't do better SNARKs. I use better SNARKs.


And so it's like: okay, Zcash is mostly done. I had some bunch of involvement trying to get them to deploy stablecoins, but that's not a technical thing.


So we've published Zerocash. What's the next thing you do?


So as academics, we're like: okay, well, there's this Ethereum thing. And literally at this point, when we were writing Zerocash, Ethereum didn't exist. And then it starts.


And so like, oh, well, Twitter for your bank accounts is a problem for payments. Clearly we need to go do privacy for smart contracts.


And there'd been one paper before this that Andrew Miller did called Hawk, which took Zcash and generalized it to instead of doing a basic accounting balance, let's run an arbitrary function.


But that isn't a smart contract system. That's not an operating system with different mutually distrusting programmes that can talk to each other. And how do you have a state model for this? And how do you do privacy?


And so Alessandro Chiesa, myself, Sean, Howard, I think Pratyush Mishra's on that paper. Yeah. End up working on this paper known as Zero Knowledge EXEcution. And this is actually like 2016, 2017. The paper took a while to get published.


[Anna Rose] (37:46 - 37:50)


Yeah. Because I remember it later. I remember it more like 2019, 2020.


[Ian Miers] (37:50 - 38:40)


Right. So this is that we start early. It takes a while to do these things. I think it took us like a year and a half to do the paper. And then it did the rounds of getting rejected. Nature of academia.


And so we're working out this fundamentals on how to do privacy-preserving smart contract systems. And this is the model that Aleo builds off because at some point, Howard Wu, one of the authors who was a master's student in the Chiesa's lab and also running Decrypt, which was this blockchain fund out of Blockchain at Berkeley, if I recall correctly, he ends up deciding to commercialise ZEXE and that becomes Aleo. And so we were involved in advising him for that.


Meanwhile, a bunch of other projects actually run with the same exact state model, though I think they try to do something else first and then come back to it.


So Aztec actually uses the same model, different proofs. They've done a bunch of innovation on top of it. There's a whole bunch of stuff that you have to do. Same for Aleo.


[Anna Rose] (38:40 - 38:43)


And they're an L2, not an L1. So Aleo launched as a standalone.


[Ian Miers] (38:44 - 38:51)
Yes. And Aleo launches as a standalone L1. It's now live. Aztec is in beta still?


[Anna Rose] (38:52 - 38:59)


I think testnets are out.


[Ian Miers] (38:53 - 38:53)


Testnets, yeah.


[Anna Rose] (38:53 - 38:58)


I think there is like an end in sight, which is exciting because they're a long time coming.


[Ian Miers] (38:59 - 39:45)


Shipping is hard. Shipping for Zcash was hard. That took forever. Aleo took forever. These are seriously hard things to do, and it's very easy to get nerd sniped by the next thing, and so it takes discipline. And then, of course, you have the changing regulatory environment, which causes other problems.


So that core idea of how do you build private smart contracts with private state where they can communicate with each other is what we were building in ZEXE. And there's a whole formalism in there, and then there's a whole bunch of things that aren't formalised.


There's an intent model in there. I didn't even know what intents were. Yeah. It's not called such, and I didn't even know what intents were. I didn't notice this until [?], a couple of years later, when we put up the paper at ePrint, maybe I have to point out, by the way, Page 3 is like a DEX.


[Anna Rose] (39:45 - 39:48)


And you have intents built in.


[Ian Miers] (39:49 - 40:09)


And I'm like, oh -- I guess, yeah, you're right. And there's these notions of instance identifiers and a bunch of other stuff that's in there, but not formalised. And then actually people forgot about including us, embarrassingly. And then all the projects have to reinvent this stuff.


That was ZEXE.


And then that's how we got involved in Aleo, because Howard, who was one of the authors, went and did Aleo and launched it. 


[Anna Rose] (40:09 - 40:21)


Interesting. I mean, this is so cool to hear your through story, your history through these projects that are so familiar to us. I want to make sure we leave time because there's two papers, two works that we really want to cover. That was like part of what we initially wanted to talked about.


[Ian Miers] (40:23 - 40:26)


We may end up on a different podcast episode, I guess.


[Anna Rose] (40:27 - 40:38)


We can work them in because those are the two things -- unless there's something major in the middle that we're missing here, but it's zk-creds, which Nico has been championing in almost every episode that he can.


[Nico Mohnblatt] (40:38 - 40:43)


Yeah. People are sick of hearing me talk about zk-creds at this point, but we have the man himself. So that'll be better.


[Anna Rose] (40:43 - 40:50)


Before we dive into this, which is what we wanted to talk about, but is there any other work post-ZEXE, pre-zk-creds that you think we should mention?


[Ian Miers] (40:51 - 41:01)


Technically, no, by that definition. But there is a paper we wrote immediately after Zerocoin, before Zcash, called Decentralised Anonymous Credentials in 2014.


[Anna Rose] (41:01 - 41:03)


Totally hear about now.


[Ian Miers] (41:03 - 41:05)


Exactly. Nobody has ever read this. I'll check. It does not have the largest number of citations.


[Anna Rose] (41:11 - 41:15)


Okay. But that term is now used all the time.




[Ian Miers] (41:16 - 41:48)


Exactly. And there were literally -- this isn't even in academia. This was a top tier. It was in NDSS, the top-tier security conference. But nobody paid attention to it.


And so I've reviewed papers where someone's like, we were the first people to propose Decentralised Anonymous Credentials. And my comment, and I'm going to out myself as reviewer number two here, is essentially, have you tried Googling that exact phrase?


So we wrote this idea of let's do credentials on a blockchain. And it's a very simple idea of like Zerocoin had tokens, what if we use the tokens as a single-bearer credential?


So we wanted to, but the proof systems were limited. It worked, but...


[Anna Rose] (41:48 - 41:50)


It wasn't usable at the time.


[Ian Miers] (41:50 - 41:51)


It was not usable at the time.


[Anna Rose] (41:51 - 42:18)


And for some reason, that idea didn't seem to have taken off right then.


I mean, I just recently had the team now called Billions and Privado, used to be IDEN3. So they're coming out in 2018, but that's also post your work, it sounds like.


And they are the sort of a team that starts to work on that space. So it almost sounds like -- I mean, if it was 2012, 2013 that you're talking that you released that--  what was the date actually of that paper?


[Ian Miers] (42:18 - 42:21)


The paper was published in NDSS in February 2014.


[Anna Rose] (42:22 - 42:32)


Okay. 2014. So yeah, there's a 3-year period there where, or 4-year period where there's no pickup. And even when it is picked up, I don't know if it's that that's picked up.


[Ian Miers] (42:32 - 42:36)


It is not that as far as I know, but I don't know that project. So...


[Anna Rose] (42:36 - 42:36)


Yeah. Interesting.


[Ian Miers] (42:37 - 43:48)


By the way, I'll just say this explicitly. At this point, when I'm telling the story, I'm getting [?] insight from, there are a bunch of ZK-identity things. The names all stand together because talk about name collisions, and I'm partially to blame here too.


There are only so many permutations of ID, Pass, ZK, Z, Z, whatever that you can do.


[Anna Rose] (42:52 - 42:52)


Passport. Yeah.


[Ian Miers] (42:52 - 43:48)


And I can't even keep them straight.


So 2014, we do this. And it's a proof of concept, again, very primitive, no SNARKs. So we wanted to come back to this and do it right, because now we have better SNARKs.


And also effectively, and this is the thing that I think everyone's missing, and Nico's making a point of, the ZK-identity systems are an application of a smart contract.


In fact, you have a mutable state that you can use to maintain your self-sovereign local credential. The entire thing that the sequence of papers from Zerocoin, Zerocash, and ZEXE on have been building is how do you use SNARKs to maintain mutable state?


Because a standard SNARK is just a proof of something. You can prove you have a passport. You can prove you have a balance, but you can't update the balance because you could double spend. You can't adjust an entry in a table, because there's no state. There's no point to prevent you from forking it.


And so we have these tools now to do this. And so we look at this in 2022 is when the paper goes up. Obviously, again, we're doing this with about a year and a half lead time, 2021, COVID.


[Anna Rose] (43:48 - 43:56)


But there's a lot of ZK at this point. There's a lot out there. So there's a lot of tools to play with, techniques that have been discovered.


Oh, that's so cool.


[Ian Miers] (43:56 - 44:16)


Right. And actually, we're playing with Groth16 still. And we're using Arkworks that Pratyush Mishra wrote, and we look at this and go, how do you do this right?


We have the ZK parameters. We know how to do the state mutations. How do you build this model?


And the model is you have various identity signals that come in. You can verify a passport. We do, I think, what might be the first ZK proof for a passport.


Timing.


[Nico Mohnblatt] (44:16 - 44:16)


First one I've seen, for sure.


[Ian Miers] (44:16 - 44:17)


The first one I know of --


[Anna Rose] (44:17 - 44:19)


Using the NFC and all that.


[Ian Miers] (44:19 - 44:39)


Using the NFC. I made my grad student -- actually, he has to get a phone from somebody to do it, and writes this proof that does the parsing.


This is, again, when we wrote this and put it up in ePrint, 2022. And I think the first one I know that comes after that is some of the people who later became Self put one up at EthCC in Paris in May, whenever that was, 2023.


[Anna Rose] (44:39 - 44:40)


Yeah. That sounds right.


[Ian Miers] (44:40 - 44:42)
That's my understanding of the timeline here.


[Anna Rose] (44:43 - 44:43)


Interesting.


[Ian Miers] (44:44 - 45:16)


They didn't steal the idea from us. I want to be very clear that the folklore, hey, we can do a ZK proof about a passport, have been around for a long time.


And we actually, it was an afterthought in the paper. It was like, what we want is various identity signals come in. We're going to build this up. I'm like: hey, we know this folklore idea. You can do a passport proof. We might use it as a signal to put in data. 


And then we realised, okay, we have this. Actually, we can reuse these proofs. We can re-randomise them so you're still anonymous.


And that idea, by the way, is underutilised. I think that's a thing. That and the parsing of these things into a shared state are two ideas that nobody else, I think, has still ran with.


[Nico Mohnblatt] (45:16 - 45:19)


Re-randomizable and the fact that you can link them.


[Ian Miers] (45:16 - 45:20)


And you can link them. Yes.


[Anna Rose] (45:20 - 45:23)


Okay. This is all under the zk-creds work for anyone listening.


[Ian Miers] (45:23 - 45:24)


zk-creds paper. Yes.


[Anna Rose] (45:20 - 45:37)


This is what we're talking about. So that earlier work, 2014, that sort of goes quiet. New tools have emerged. And then you've been working on the zk-cred paper. Is it just called zk-creds?


[Ian Miers] (45:38 - 45:44)
It's just called zk-creds. It's like zk-creds: Flexible Anonymous Credentials from zkSNARKs and Existing Identity Infrastructure.


[Anna Rose] (45:44 - 46:20)


Great. And it sounds like what ZK, I mean, we now kind of informally call this zkID. There's a team called zkID. There's teams like RarImo, Self, Privado. It's just so funny because I'm doing a series by accident this year on these teams. Almost once a month, we've been having someone on who speaks about this.


I think actually the episode right before this one is Privado, Billions, which is coming from the IDEN3 team. So it's like there's --zkPassport that's still sort of potentially upcoming. And there's a bunch of teams that have been doing this ID work.


Do you get cited a lot? Do you know?


[Ian Miers] (46:20 - 46:24)


No. Not that much, actually.


[Nico Mohnblatt] (46:24 - 46:46)


I've actually interacted with a lot of these teams and was the first one to mention zk-creds to them. They were discovering that paper, even though they were also building the same stuff.


So there's this notion, like you were saying, Ian, this folklore idea of like we can scan a passport and give a zero-knowledge proof of it. But then no one wants to go and check like what can you do next? And that's sort of the important part of zk-creds, in my opinion.


[Ian Miers] (46:46 - 46:53)


And yeah, I should say, you should read this paper. And I don't mean this in this, you should cite this. I do occasionally tell people that, but I kind of hate to be that person.


[Nico Mohnblatt] (46:54 - 46:54)


Reviewer 2.


[Ian Miers] (46:55 - 47:44)


Yeah. I mean, I'll do it in academic context, but otherwise. You should read it because I actually, I think legitimately, there are a couple of ideas in there of what do you do next past the obvious folklore idea that a lot of these projects haven't done yet.


So I was talking to the Self people, they've done a huge amount of nice work, prioritising this, getting actually not janky code, using a bunch of different inputs for identity. But they hadn't had the idea of what if we parse the passport once, and then used an intermediate format they were doing updates to as our own thing. That wasn't on their system.


I don't think anyone knows the randomisation stuff.


And then, and this is not our stuff, we implement it, but there are known ideas, there's a whole bunch of work from academics on anonymous credentials of things like rate limiting and de-anonymising people have to go over rate limits and a bunch of other tools. If you're building one of these systems, you probably want to include because they're actually useful.


[Anna Rose] (47:44 - 47:46)


But that was non-ZK. This was just --


[Ian Miers] (47:46 - 47:47)


That was back. Yeah. This was --


[Anna Rose] (47:47 - 47:48)


This is older.


[Ian Miers] (47:49 - 47:54)


Like structure-preserving signatures, analysis, PS sigs, these kinds of things. Analysing Sky's original work.


[Anna Rose] (47:54 - 47:58)


Is this cryptology? More like the breaking? Is this all the ways that it can break?


[Ian Miers] (47:58 - 48:12)


No. No. No. This is just standard cryptography, but not the SNARK people. The actual academics who did like -- if you know pairing, original pairing-based cryptography, IBE, very signature. These are like classic Eurocrypt crypto people who did a lot of hard work formalising this stuff and figuring out features.


And SNARKs, I think, provide a better framework for flexibly programming this, but those features and ideas you probably want to use. And if you go read our paper, we have, oh, we can do all of these things, literally a grab bag of them. Or watch there's a talk at Real World Crypto, whichever year that was.


[Anna Rose] (48:28 - 48:29)


Two years ago?


[Ian Miers] (48:29 - 49:33)


Two years ago, where we give this. And the paper has the sites to these things. And you should use those ideas. And again, I want to be clear, those are not our ideas, but it's a good summary of here's where these are.


Because this paper is what's next from the folklore, okay, we have a passport. Let's parse it. And then you realise parsing is expensive. So you at least cache the signature verification. Let's do the --


This paper tells you what to do past the folklore, we have a passport. We're going to parse it and verify the signature. And then you realise the signature verification is expensive and is ZK proof. So you actually go verify that once onchain, and then you redo proofs later. And we go beyond that.


Also, if you want, you can avoid having to verify the signature in the proof system because the disconnect between issuance and usage of the credential happens after that with this proof that you're in a Merkle tree or a signed element. And so, this is a much more efficient way to go about doing this and flexible.


You can bind in other identity signals. You could do device binding. You could do other things in there.


So you should read the paper.


[Anna Rose] (49:34 - 49:46)


That's cool. I mean, I wonder some of the teams we've had on, I feel like if they were here, they may say: oh, no, we are doing some of those things. I can't totally make that connection point, but yeah.


[Ian Miers] (49:46 - 51:29)


I would suspect every one of these teams is probably doing some of them. Maybe some of them have done all of them. This is not, again, a read the paper to please cite us, like you're not writing academic publications. It's just like, we thought through all these ideas and put them down in one place.


One of the things that this whole question of what the value of academia is precisely, particularly for zkSNARK applications research, given how much funding and momentum and industry there is. But one of the things that academia does well is you have to communicate your ideas clearly on what do you have? What is the framework? What comes next?


And so this enumerates all of these things. So you should at least read the paper to check all of those ideas or things you're building on. If you caught up with all of them, great. That's awesome.


If you had more than those, that's great. Awesome. Actually, you should, when you write your blog posts, say we have all of these ideas and we have these extra ones.


And that's, by the way, the one thing I would say about when reviewers are arseholes about cite us. The actual reason that you should do that is it helps everyone else know what's new in your blog post. You do these whiz-bang marketing posts where you claim all of the ideas under the sun are yours and new, and people who know the area are reading and go, no, well, those four are not, they're not going to find the two that actually are new, and you deserve credit for.


It's much clearer to say: we have the [?] fan-dredged folklore things -- if you don't want to cite me, fine, don't do it -- and we have these two new innovations. And that's how we actually get progress as an industry, is when everyone says: here's the actual new contribution we had. We built on existing stuff.


Even if you don't want to credit your competitors with what the existing stuff is, it is rhetorically useful to say, existing stuff -- if you're going to be a jackass about it, don't cite them -- new thing, because that's how you get credit. Versus if you write all these blog posts that be like a pitch deck where it's like, we have all this new stuff, anyone who is...


[Nico Mohnblatt] (51:30 - 51:31)


Yeah. None of it becomes new.


[Ian Miers] (51:32 - 51:33)


Yeah. And it doesn't propagate.


[Anna Rose] (51:33 - 51:41)


If it's listing everything as their own, then it's just trying to educate maybe someone who doesn't know anything about the space. It sounds like making that distinction would be useful.


[Ian Miers] (51:42 - 51:45)


It's very useful for, again, even for people in industry working on this stuff.


[Anna Rose] (51:46 - 52:12)


Now, all of a sudden, I'm like, oh, I wish we had like an ETHproofs pie chart for like the ETHproofs org, this effort for scaling, where it's different characteristics you have to achieve. Or they did the same thing for the zkEVM, L2 scale. Is it what level of L2 it is?


Something like that for a lot of these ID systems, like which of these can you check? Can you say you've done?


Maybe someone's doing it, actually. And it could also just be a table.


[Ian Miers] (52:13 - 52:20)


I would love to, because the only way I know to do it is to go make my grad students dig through the code and they come back with answers. But it's time consuming and they're not sure.


[Anna Rose] (52:21 - 52:29)


And it might not be up to date. You'd almost need the teams to sort of say what they're like doing and how -- and where it is and how close to open source it is.


[Ian Miers] (52:29 - 52:33)


Actually, it would be a good thing to organise like a ZK identity feature competition or something.


[Anna Rose] (52:34 - 52:51)


I mean, there's now enough of it. So it's really quite amazing how many of these there are. There's also -- and I wonder maybe, I don't know if you're as familiar with things like ZK Email or the Sui work on zkLogin.


They're not exactly ID, but they're like touching this.


[Ian Miers] (52:52 - 53:13)


They actually are. So you could use them as an identity signal. And I believe we mentioned this in the zk-creds paper.


It's like, you're going to say I have a passport, I have this, I have that, and they are, in fact, signals. You can take all the zkTLS stuff and use it as input.


And that is a thing that I believe a couple of projects are actually doing to some degree. There's some dicey questions of the privacy models there.


[Nico Mohnblatt] (53:13 - 53:23)


Yeah. I'm not sure they're actually aggregating it into a credential. I know everyone is capturing these signals and I don't know if they're creating a credential out of it, which is why I keep saying read zk-creds.


[Anna Rose] (53:24 - 53:32)


There was another work that came out maybe around the same time, Deco. Is that at all in the same kind of realm as zk-creds? 


[Ian Miers] (53:32 - 53:35)


It is. Deco is a zkTLS system. 


[Anna Rose] (53:35 - 53:38)


Yeah. So it's, again, a signal.


[Ian Miers] (53:38 - 54:42)


The history of it[?] goes there's the TLSNotary guys back in 2014 talk about ideas that are older than you thought, and then that kind of worked and kind of didn't, and it didn't have a ZK proof in it.


And then the Deco guys come back and sort of redo that. I don't think they entirely realised they were redoing a bunch of the TLSNotary folks. And then they add the contribution of we will do a ZK proof to show data.


They wanted to just get data onchain for sort of enterprise applications, in fact. And they don't quite realise that this could be used for other things other than like your Accenture and you want to get some legacy data on.


And they write that for TLS 1.2 and it almost works, but nobody -- there's some bugs. But TLS 1.3 is the thing everyone uses. And then there's this huge race to actually formalise zkTLS schemes that work for TLS 1.3. And the state of that is still open. 


There are protocols that work, but the state of the art is evolving on some timeline, at least a year. And those are all identity signals. And there are projects actually doing this. I think Self maybe has some notions of this, the ZK -- okay. I'm going to stop naming projects because I'm going to get confused.


[Anna Rose] (54:42 - 54:53)


Well, Ethereum has the zkID project as well, looking at the European Union's requirements for their ID solution. We've had a lot of these on. So we're going to add links to this in the show notes if people want to dig in.


[Ian Miers] (54:53 - 55:03)


But some of them are doing the take zkTLS as an input signal, I think. And certainly that is a thing you should do. That's one of the things that we were like in zk-creds.


[Anna Rose] (55:04 - 55:17)


Cool. Nice. So there's one more work that we haven't gotten to. There's lots more topics --


Man, we're catching up on like 6 years, at least, since we started this attempt to have you on.


[Nico Mohnblatt] (55:17 - 55:19)


Ian, we have over 10 years of research already.


[Ian Miers] (55:19 - 55:20)


Yeah. 13 years of research.


[Anna Rose] (55:20 - 55:22)


So, we may need to do another one.


[Ian Miers] (55:23 - 55:25)


Yeah. We could just do another one on this stuff.


[Anna Rose] (55:25 - 55:44)


Although, let's at least summarise them. Maybe we go deeper on another one.


But zk-promises, is this a totally different direction? It sounds quite different from what you've described just before. Or does it use zk-creds? And let's just define what zk-promises are.


[Ian Miers] (55:44 - 57:21)


So zk-promises is two things. One, it's how do you build an anonymous programmable reputation system where I can interact with you, let's say you're Wikipedia, I prove I'm authorised, I make an edit. You later find out I rickrolled everybody and you want to ban me, but I'm anonymous.


So what zk-promises does is let you do that or downvote me by having what are called anonymous callbacks, hence the promise.


And so this is not that separate. One, because it's an idea of around identity. Two, it's a stateful privacy-preserving smart contract. Actually, that's how we're doing this, either on a blockchain or on a centralized server. So it's still this idea through line back to Zerocoin through Zerocash ZEXE of state.


And it lets you build these systems. It also lets you build just privacy-preserving smart contract systems with callbacks, which also gets you, if you squint at it, a really actually usable privacy-preserving account model with full actual privacy where you kind of can sequence your own messages people are sending to you, because the guarantee we give is, if I hand you this callback, it's a random number, and you post it later with the arguments I have to apply, say ban or downvote by five.


Later, the next time I do an update or however you've written the program, I have to scan through and process all of the callbacks that have been sent to me, all the random numbers that are mine. I know this because I've saved them in my state, process them that are onchain or on some server, and apply them.


And so that's a sequencing issue, basically. I'm sequencing other people's callbacks back to me


So this is an observation that actually I missed originally when we were writing the paper, and Pratyush Mishra, who was on my grad student's PhD defence, observed this. And it's a point we included in the paper that you can do sequencing with it effectively.


[Nico Mohnblatt] (57:22 - 57:27)


And so zk-promises forces you to process these callbacks correctly and publish that?


[Ian Miers] (57:28 - 58:06)


Well, it doesn't force you to publish them, it forces you to process them and apply them to your private state. So the entire model here for Aztec, Aleo, ZEXE is you have a commitment to, we call it a zk-object, because they give it literally an object that's running on your computer.


And of course, the problem is we don't trust you, so we need to make sure you don't modify that object in ways you're not programmed to. That's the ZK proof. And we need to make sure that even if you have an object, you can't fork it. You can't do a double spend.


And so those are the two things in that model. And then to this, we add callbacks, which is a third party who doesn't know who you are, who can't track you, can be given an anonymous callback that they can then later use to force you to do the modifications.


[Anna Rose] (58:07 - 58:22)


Where zk-creds, you create this setup and then we see it being used now in these ID systems. zk-promises, what's it for? You've described a little bit of what it can do, but let's define what zk-promises are.


[Ian Miers] (58:22 - 58:46)


So one thing is that you want to do anonymous reputation for like a social media system. If you want to do, I don't know, Wikipedia.


The way I originally got to it was we have this problem with privacy-preserving cryptocurrency and people stealing funds. Nation-state-linked hacking groups stealing funds. This is what caused Tornado Cash problems.


And one of the things you want for defences for this is the notion of reputation and the ability to ban addresses, but you don't want to harm people's privacy.


[Anna Rose] (58:46 - 59:04)


And you want to go kind of beyond -- they constantly just use the OFAC list, and you're like, that's stupid because they're not tracking every hacker on there. There's lots of bad actors that are not on that list that you would want banned from a system. So this sounds like you need something a little more like -- yeah.


[Ian Miers] (59:04 - 59:44)


You need it to be programmable and updatable. Basically, you need what is called -- if you've ever sat through a bad MBA talk or a not very good cryptocurrency executive pretending they know how to do strategy, they may have told you this thing called an OODA loop. Observe, Orient, Decide, Act.


Kind of essential of a consulting thing.


[Anna Rose] (59:20 - 59:21)


Sounds like a consultant, yeah.


[Ian Miers] (59:21 - 59:44)


It is, but actually it originally comes from the Air Force of all places and fighter pilots, which is you have an adversary, you two are fighting , and you need to look at what they're doing, decide to do something, react. They're going to counter. And then the person who wins is the person who can do that loop faster, who can adapt.


And so this is why we need programmable money laundering prevention and reputation tools. So the entire point of this is --


[Anna Rose] (59:44 - 59:46)


Yeah, Because it needs to catch up.


[Ian Miers] (59:47 - 59:47)


Yeah.


[Anna Rose] (59:47 - 59:51)


You can't just rely on these fixed, like very slow to change lists.


[Ian Miers] (59:51 - 1:00:14)


Yeah. I have been in Chatham House Rule roundtables where somebody started up and pitched one of these static ZK proof, I don't know, OFAC list. And somebody in the Counter-Threat Finance side of treasury is sitting next to me and sniggers, because of course this doesn't work.


You're just like, this is not reality on how people actually deal with real bad actors on real attacks. You need to be able to adapt.


[Nico Mohnblatt] (1:00:15 - 1:00:19)


Sorry, could you illustrate how zk-promises helps in this case? I don't think I followed completely.


[Ian Miers] (1:00:19 - 1:01:24)


So  it's ambitious, but the idea is you can define various reputational signals that you have. Because it's programmable, you can do whatever you want. And you can have people say, rate addresses based on, did this become stolen funds? Did it land up being suspicious?


And you don't even know who the address is, who owns it. You don't know who the account -- you may not even know the address. You may just know you interacted with them. And that gives you some degree of a rating ability.


And the other thing is because this is a smart contract system, it's programmable, so you can just programme, change the rules of how the reputation works, what factors in this thing you weight together, what features you reveal.


So this is sort of a cross between zk-promises and generally a pitch for why you need privacy-preserving smart contracts for compliance purposes, and a pitch for some other papers that we may have online in a couple of weeks.


But in general, you want programmable and adaptable systems. And when you end up programming and adapting those things, you are going to want callbacks. It's not the case that zk-promises is the only thing you need. It's not the tool that solves all this. But it is one of the tools you need, and that's originally how I figured out to build it, was thinking through that OODA loop.


[Anna Rose] (1:01:24 - 1:02:11)


I mean, that idea though, of crowds voting on addresses, I also think about like -- because there's the addresses that are tracked, there are kind of known bad actors in the ecosystem, but then there's also the grey zones, like the market makers who might have contracts, maybe they're supposed to do this behaviour.


But from the outside, it looks real sketchy and the crowd could potentially decimate these things, which might be good. Maybe that's what's needed. I mean, a lot of that stuff is grey zone. It's grey zone cause it's like grey zone. It's not really good. It's not healthy.


And you could also get attacks, like one brand that people don't like, or one person has said something bad and they know the address and you could get this reputation bomb on them.


[Ian Miers] (1:02:11 - 1:03:05)


Yes. No. No. This is definitely -- it's not clear how you should programme this thing, what the reputation rules should be, who should be able to make these rules.


Because they're both -- like attackers can get around it. There are attacks that can happen in the system. There's certainly a risk that this could become a locked down, closed sort of authoritarian ecosystem under the wrong hands. And so just because this thing is secure and ZK does not mean it's a thing you want, this being whatever thing you build using these tools.


And so this is a thing to keep in mind in general, when we start talking about privacy-preserving smart contract systems.


And just because you used a privacy-preserving smart contract system, whether it's Aleo or Aztec when it launches or Polygon Miden when it launches or whatever, just because you use one of those to build something, doesn't mean that thing, even though it's ZK and nominally private is a good idea.


Same thing of just because you used Amazon to do something doesn't mean it's a good idea. Tools do not mean that the thing you built with the tool is a good idea or meets certain sets of values or is ethical.


[Anna Rose] (1:03:06 - 1:03:06)


Yeah.


[Nico Mohnblatt] (1:03:06 - 1:03:20)


I've seen this a lot in the identity space where people tend to forget like: oh, my credential is anonymous. Sure. But we can still use that to discriminate against you. We can still ask you to prove gender and discriminate against that.


So the tools versus the actual use of it.


[Ian Miers] (1:03:20 - 1:03:33)


So popping all the way up to the real world, so when we wrote zk-creds, we had this case study of proving you're over 18 to a website, which at the time we thought was a hypothetical that was a bit cringy, and we nearly removed it.


And now, of course --


[Anna Rose] (1:03:30 - 1:03:32)


That's super relevant.


[Ian Miers] (1:03:33 - 1:04:07)


There are literally requirements to do this. Even if you do this in a privacy-preserving way, it's not clear it's a thing. It's quite controversial, for very good reasons. Because you can use it to gate access to content.


Sure. You don't want extremist terrorist content, maybe, but what constitutes extremist? Does anti-vax stuff count? Does whatever.


These are all very good questions and none of them are answered by our credentials are anonymous. By the way, that even assumes they actually are anonymous, which, as you just alluded to, is a very open question, even for some of the more private versions of these.


[Anna Rose] (1:04:08 - 1:05:10)


Crazy. This problem space, I feel like, is so exciting. And I feel like we're just scratching the surface.


And at the same time, you do have -- I mean, you have teams that are looking to build products, and they want to get to market, and they have to find customers. And so it's it's interesting. You're seeing like research really exploring out all of these spaces.


You have companies popping up, but usually focused on pretty narrow problems. I'm really curious to see how some of these ideas start to permeate like other systems.


But reputation generally, I feel like it's been talked about for a long time and there's been attempts to create reputation systems for super long time.


But given AI, given the lack of trust, given all this stuff, I feel like it's way more urgent right now to figure this stuff out. And I love the idea that ZK is helping. I know it's not the only thing. Like you said, zk-promises, it targets like a small portion of the reputation concept. You'd need other tools as well.


[Ian Miers] (1:05:11 - 1:05:47)


Yeah. I mean, I guess I'll say one other thing is there's a whole question of how do we fund this kind of research? Because I'm an academic by day, like normally my research is nominally funded off of NSF funds, National Science Foundation, there isn't that much of it to go around these days.


And you can have companies do this, but they tend to do siloed things where they're trying to market the stuff and doing the basic idea and exploring the product. And I think here we need much better just like, here's a set of tools, here are new tools so that you can solve these problems.


And we don't end up on some of the darker versions of this world where it's utterly controlled, maybe not private to everybody, problems like this.


[Anna Rose] (1:05:47 - 1:06:40)


And then it comes back to how to fund public goods, and I don't know. It's tricky.


There are moments of -- I don't know how to describe it. There's little sparks where you're like, maybe it will be Gitcoin, and the public community -- or it'll be Kickstarter. Even before that, it'll be community funded. People will know the value and they're going to put their dollars towards it.




And they do for a little while, and then those things seem to peter out. I don't know if we found the right model. We had ICOs, which were kind of doing that too.


And for some things, like look at what Gnosis has built, like SAFE and all of these really important components of Ethereum, funded by an ICO, built public goods. But that was the choice of that team. You know what I mean?


It wasn't like -- that's not a guarantee. It's not a guarantee that the builders will be good. In their case, I think they are quite good.


[Nico Mohnblatt] (1:06:40 - 1:06:44)


I mean, there's a lot of things that were funded by ICOs and the people disappeared with the money and that was it.


[Anna Rose] (1:06:45 - 1:07:05)


Exactly. Most of them ended up being scams. I don't think that's a perfect model, but there's definitely a lot of work to do there.


Seems like a topic for another day, though. Like ICOs and public goods funding.


Nico, I know you had a few other topics we talked a little bit about before the show started. We don't have much time left in this episode, but do you want to just like...


[Nico Mohnblatt] (1:07:05 - 1:07:08)


Sounds like we're going to have to have Ian on the show again.


[Anna Rose] (1:07:08 - 1:07:15)


Yeah. I mean, well, we'd love to have you back, but why don't you just like throw out some of those -- just the little ideas so we can think about it before then.


[Nico Mohnblatt] (1:07:15 - 1:07:31)


Well, one question I actually wanted to ask you is your line of work, zk-creds, zk-promises, seems to point towards how do we have usable systems where people can remain anonymous, but also we don't get flooded by spam and nonsense.


So is problems like sybil resistance things you're also looking at?


[Ian Miers] (1:07:31 - 1:08:09)
Yes. And in fact, we have ongoing work on exactly how do you apply these techniques to that. And again, the straw man version here, which we alluded to in zk-creds, and there's a couple of people who maybe have deployments, is you take various identity signals using zkTLS protocols and you composite them into a credential.


There are some questions there about how is that dynamic? What are the security properties? How do you do this safely? Because you can get into some dicey questions there.


But that is one very clear thing that you want to look at, and you don't want a system where everybody is locked into some biometric hardware, be it an iPhone or a Worldcoin orb.


[Anna Rose] (1:08:10 - 1:08:12)


So you're not advocating for scanning eyeballs?


[Ian Miers] (1:08:13 - 1:09:10)


It seems like it doesn't work very well. The eyeball scanning hardware could be great, though you are trusting that it's a closed -- it's a permissioned ecosystem. You have to trust the route of trust on the chip.


The privacy might work, though there are credible claims about how you could do this with ZK. I don't know if they implement it correctly, but it would work. The larger problem is you're not going to be able to do this by scanning someone's eyeball once because you can sell that account. And in fact, people do. And that's not a viable sybil resistance mechanism.


So you need something that is dynamic and ongoing. And that starts to become a challenge for Worldcoin's model because they aren't going to have an orb for everybody. You're not going to go get re-scanned every month. There aren't enough orbs. That doesn't scale.


For Worldcoin or anything else to work, you need some ongoing measurements and updates, and they could pivot to that. And then you've got some hardware you've got to trust, and then maybe it matters more that it's permissioned and you have to trust the orb. I don't know.


But as is, the scan-your-eyeball-once model just is not a model to protect against sybils at any reasonable scale.


[Anna Rose] (1:09:11 - 1:09:33)


Another point that takes us a little bit off this, this will be like the quickfire question point, but quantum security. Are you working on that? Because there is talk about some SNARKs being safer or STARKs, like hash-based are more quantum resistant. What is it? Post-quantum resistant. I'm not saying that right.


[Nico Mohnblatt] (1:09:33 - 1:09:34)


Post-quantum secure.


[Ian Miers] (1:09:34 - 1:09:36)


Post quantum secure.


[Anna Rose] (1:09:35 - 1:09:41)


But, yeah. Do you have many lines of work happening at the same time? Is this a topic that you're looking at at all?


[Ian Miers] (1:09:42 - 1:12:22)


So this is a topic we're tracking because we build solutions for real-world applications. We have multiple projects going on. Some of them are how to securely programme these systems. Some of them are how to actually build new capabilities. Some of them are how to do applications, be it sybil resistance, money laundering.


One of the things I unfortunately have to track is this question about: hey, what SNARKs are better? Which one should we adapt to? And then because certain entities like the Europeans have requirements on like they want post quantum this or that, you need to track what's going on.


This is somewhat amusing because, for example, the European identity requirements had issues about post-quantum security.


And this is a problem both for some of the STARK schemes, because the STARK schemes are not by default ZK. So they're not anonymous credential. And the traditional Anna Lysyanskaya, Jan Camenisch, anonymous credentials, which are not PQ secure either.


So here's the reason it's a little weird. So the worry in general for post-quantum security is a couple of years from now, a couple of years might be 5, it's more likely 30 or 50. Timelines are debated. Someone might come up with a post-quantum computer that can break classical cryptography. And therefore, they could do two things.


One, they can forge identity system proofs now, and then for certain classes of systems like encrypted messaging, if it wasn't post-quantum secure, they could decrypt stuff in the past. This is called a harvest now, decrypt later attack.


And so it's a little weird for the case of anonymous credentials, particularly ZK ones, particularly for the European Union, for example, that we're worried about this because the harvest now, decrypt later attack doesn't apply if you're using something like even Groth16, because although Groth16 is not sound in a world with post-quantum computers, it is still zero-knowledge. It's statistically ZK. You can't break it.


And I don't think given the cost of a quantum computer, that it's really something some 16-year old is going to use to access violent or adult content in the European Union. So it's a little weird occasionally when regulators say: for proving you're over 18 online today, we need to worry about quantum computers in 50 years.


If you're a defence department or a department of war or whatever we've named it, you might worry about your adversary getting a system and a 100 years later going back and reading your mail.


But for a lot of these applications -- or if you're for example, Bitcoin or Zcash or Ethereum, and you're worried about 50 years from now, can someone fake money, those are worries where you have to sort of ask yourself, what timeline do we have to react?


But on other things for like identity applications, it's not as clear, and there are very real trade-offs. STARKs are post-quantum sound. They would be post-quantum ZK if the practical implementations were zero-knowledge, but that's a debatable, costly thing that nobody's done yet for reasons that are somewhat nebulous.


I accidentally kicked off a hornet's nest on Twitter a week ago, just asking about this. And I was literally just asking. I wasn't even like- 


[Nico Mohnblatt] (1:12:22 - 1:12:25)


That was lovely to watch. We should find the thread.


[Ian Miers] (1:12:26 - 1:13:21)


You should find the thread because I just literally just like had coffee with someone. I was like: hey, this is an interesting thought. And then everyone's going back and forth, and I'm like, apparently this is more of a question than I thought.


So STRAKs are not ZK. And then the other premise, STARKs or any other hash-based proof system, I don't mean to single out STARKs here specifically because that's not the case, are large enough that to fit them onchain, people usually wrap them with Groth16.


That's not post-quantum sound, but it does solve your not ZK problem, which is why the ZK bit doesn't actually matter because Groth16 is ZK. In fact, it's post-quantum ZK.


So there's this weird -- this is on audio, so I don't have a good verbal notion of shoulder shrug, but there's this weird loop of like, it's not clear what's driving this, and what do you want, and what applications it matters for.


Despite clearly for some, it doesn't matter. Like post-quantum privacy for a statistically sound ZK system is fine. We do not need to worry about somebody with access to a quantum computer using it to access over 18 content when they're 16.


[Anna Rose] (1:13:21 - 1:13:26)


Yeah. And it would be too crazy to use those resources for such a silly use case.


[Ian Miers] (1:13:27 - 1:14:04)


On the other hand, we probably do need to worry about soundness this long-term for payment systems or scaling systems if you don't think you can ship stuff quickly enough to do updates.


And some cryptocurrencies have enough cadence that I wouldn't worry about that as a problem. You'll get some warning on -- especially attackers getting a quantum computer.


We're not talking about the NSA gets or the GCHQ or the Russians or the Chinese get a quantum computer and keep it in a vault and tell no one about it because they're using it to spy on each other. We're talking about somebody has it to actually steal money, and that you'll get some notice on.


But if you need to design things and you don't think you can deploy new technology on a 20-year timeline, you may need to worry about that. Legitimately.


[Nico Mohnblatt] (1:14:05 - 1:14:10)


Passports still use RSA signatures, so not post-quantum secure.


[Ian Miers] (1:14:10 - 1:14:48)


That's the hilarious one for all of the identity stuff. All of the classical identity documents they're trying to deal with are signed classically. And there's basically no reason they're going to update that because, for example, for passports, you have to fit the signature in an RFID chip.


And that would be somewhat challenging with the state-of-the-art post-quantum signatures. They're not going to say it's impossible. Someone's going to like add a comment of: well, actually the existing standard of this is many bits. If you spend three times as much on your RFID chip on your passport, you could do it. And they'll probably be right.


And it will probably still be shot down in budget reasons for they don't want to up the cost of the passport by that much and get it to be backwards compatible with their readers.


[Nico Mohnblatt] (1:14:48 - 1:14:54)


But even the pace of updating passports, like getting your whole population to change their passports is going to take much longer than changing our proofs for zkID.


[Anna Rose] ([1:14:54 - 1:14:54)


And original.


[Ian Miers] (1:14:57 - 1:15:00)


Yeah. So these are kind of funny.


[Nico Mohnblatt] (1:15:00 - 1:15:11)


And by the way, I should also mention in the hash-based proofs, there is one that has ZK deployed. It is Ligero. And Google have been using that. And that's an interesting callback to previous episodes as well.


[Ian Miers] (1:15:11 - 1:15:17)


Yes. And that's in fact why Google did that. Oh, and it's all interesting. I don't know if you -- did you guys have the Google folks on yet?


[Anna Rose] (1:15:17 - 1:15:29)


We had Matteo and Abhi on the show. And we also had Muthu come on after that. We had Ligero last year, and then we had kind of an update because it's been permeating lots of different systems. So it's cool.


[Ian Miers] (1:15:29 - 1:15:42)


Yeah. Ligero is exciting. It is ZK, you can go run it on a browser. Like debatable, apparently, if the proofs are small enough that you can effectively wrap them or not, but Muthu has some interesting thoughts on we can do Aitai hashing and maybe get it to work. So --


[Anna Rose] (1:15:42 - 1:15:43)


So cool.


[Ian Miers] (1:15:43 - 1:15:44)


I'm excited.


[Anna Rose] (1:15:44 - 1:16:24)


Ian, we actually have even more things listed on our questions list, but I think we are running out of time for this one.


Thank you so much for coming on the show. And wow, what a journey, like your journey through ZK, it's so colourful. You're touching so many different key foundational things. Thanks for sharing that with us.




And I can't wait to see what comes out soon, too, because it just sounds like you're on the cutting edge of where ZK is kind of expanding out past payments and sort of the things we were just talking about. Like a decade ago, that was the main focus.


Now it's going into ID and reputation, and it's so cool.


[Ian Miers] (1:16:24 - 1:16:55)


Yep. It's been very interesting to do this full arc from ZK started for privacy for payments, and we are now coming back of I've worked out enough tools and people have built enough better proof systems and software, you can start using it to solve more traditional, larger scale computer security, sybil resistance, reputation, theft prevention problems that as an academic was actually somewhat unsatisfying that this whole line of work I did that kicked off payment to ZK and blockchain line didn't really cross-pollinate back to traditional security problems.


And now we --


[Anna Rose] (1:16:53 - 1:16:54)


Back then.


[Ian Miers] (1:16:54 - 1:16:55)


We have tools.


[Anna Rose] (1:16:56 - 1:17:06)


And now it can cross-pollinate. And actually, I think a lot of those teams and groups are learning about ZK, which is so cool.


All right. Thanks, Ian.


[Ian Miers] (1:17:04 - 1:17:04)


Thanks.


[Anna Rose] (1:17:05 - 1:17:06)


Thanks, Nico.


[Nico Mohnblatt] (1:17:06 - 1:17:07)


Thank you very much.


[Anna Rose] (1:17:08 - 1:17:15)


I want to say thank you to the podcast team, Rachel, Henrik, Tanya and Hector and to our listeners. Thanks for listening