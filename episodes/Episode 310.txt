00:05: Anna Rose:


Welcome to Zero Knowledge. I'm your host, Anna Rose. In this podcast, we will be exploring the latest in zero knowledge research and the decentralized web, as well as new paradigms that promise to change the way we interact and transact online.


00:27:


This week, Tarun and I chat with Noam Nisan, professor at the Hebrew University of Jerusalem and principal researcher at Starkware Industries. We cover his extensive research and academic background, starting with his work on complexity theory, the move to algorithmic game theory, as well as his current work on game theory in blockchains and tokenomics at Starkware. We cover his recent blog post comparing the measurable tokenomic outcomes of different live PoS systems and share how he aims to better communicate best practices for those designing these systems. From there, we explore open problems about how to analyze these models once you add L2s, cross-chain transactions, MEV, and shared sequencers to the mix. Now, it's not that we solved any of the problems in this interview, but it was really fun to explore this with Noam. Now, before we kick off, I just want to remind you that the next ZK Summit, ZK11, is happening in Athens on April 10th. The application to attend is now open, space is limited, applications don't guarantee a spot, but you should still get yours in soon if you want to have a chance to get a ticket. I've added the link in the show notes. Now Tanya will share a little bit about this week's sponsor.


01:35: Tanya: 


Aleo is a new layer-1 blockchain that achieves the programmability of Ethereum, the privacy of Zcash, and the scalability of a rollup. Driven by a mission for a truly secure internet, Aleo has interwoven zero-knowledge proofs into every facet of their stack, resulting in a vertically integrated layer-1 blockchain that's unparalleled in its approach. Aleo is ZK by design. Dive into their programming language, Leo, and see what permissionless development looks like, offering boundless opportunities for developers and innovators to build ZK apps. As Aleo is gearing up for their mainnet launch in Q1, this is an invitation to be part of a transformational ZK journey. Dive deeper and discover more about Aleo at aleo.org. And now, here's our episode.


02:23: Anna Rose: 


Today we're here with Noam Nisan, professor at the Hebrew University of Jerusalem and principal researcher at Starkware Industries. Welcome to the show, Noam.


02:33: Noam Nisan:


Hi, thank you, and I'm happy to be here.


02:35: Anna Rose:


We also have Tarun co-hosting this one. Hey, Tarun.


02:38: Tarun Chitra:


Hey, it's good to be here.


02:40: Anna Rose:


So I'm pretty excited to have you on, Noam. So you came recommended by one of your colleagues, and he was highlighting a recent blog post about the tokenomics in PoS systems. But it was interesting, in preparation for this interview and reading a little bit about the work you were doing, I realized that I actually know... I know you because you wrote this book called The Elements of Computing Systems: Building a Modern Computer from First Principles. Now this was recommended to me like over five years ago when I started to learn about blockchains and then when I started to learn about zero knowledge, like the circuits and all of this terminology. I actually went through your book. And so it's so cool to have you on the show now.


03:23: Noam Nisan:


Wow, thank you. I'm glad to hear that you heard about my book.


03:26: Anna Rose:


Yeah.


03:27: Noam Nisan:


That was a fun book to write and hopefully also to read.


03:30: Anna Rose:


You also have like a video series around it, like going through all the pieces.


03:34: Noam Nisan:


Yeah, that is true. We have a course at Coursera that actually... Actually two courses, a set of two courses that goes over the book. And that book is really based on projects that you build yourself according to pretty detailed instructions, and we go over these set of projects and of all the accompanying materials that you need to actually do them, and Coursera course. And these courses are pretty popular at Coursera apparently.


03:59: Anna Rose:


Before you wrote that, had there existed any sort of course that would do kind of that level of breadth when it comes to computing? I think that's what I loved about it was that like it really starts from the very basics and then slowly works you up. Yeah, had that existed before, or was this sort of like a new idea?


04:18: Noam Nisan:


So I think our gimmick, if you wish, was to actually put everything together. So you would have books for specific computer science courses, one book for compilers, another book for doing hardware, and so on. And we thought that if you simplified everything to the utmost, you could put everything into a single semester's course. And we thought that would be really an important teaching aid, because for once students would get like an overall picture of the whole picture from the ground to the top, and that would be immensely useful. Because usually students go through a sequence of courses, each one sort of disconnected from the rest, and they somehow lose the unity, if you wish, of computer science. So we thought we could, by making everything totally simple, just push everything into one course.


05:06: Anna Rose:


Amazing. Definitely recommend it to listeners if they haven't checked it out. Also, if you are already a computer scientist and know your way around it, but you have friends who don't fully understand it, definitely share that book with them as well. Tarun, when I told you about this interview though, you knew Noam's work from kind of a different perspective.


05:25: Tarun Chitra:


Yeah, I mean, I think a lot of the algorithmic game theory I learned over the years came from a couple of your textbooks. I mean, I guess obviously the big book in the sense of... Is sort of the nice intro for someone who maybe has a math background, but doesn't really know anything about game theory. I guess there's two books. There's like your book and Yuval Peres's book.


05:47: Noam Nisan:


On game theory.


05:48: Tarun Chitra:


On game theory. Yeah. Those were like kind of the two things that made me kind of switch more into this field maybe like 10 years ago or something like that.


05:57: Noam Nisan:


I see.


05:57: Anna Rose:


Cool. What's the name of the book?


05:59: Tarun Chitra:


I think it's just called Algorithmic Game Theory, right?


06:01: Noam Nisan:


Yeah. So there was this new research field just emerging. We're talking about like the 2005 or something like that, and it was called algorithmic game theory. Some people call it economics and computation, which is very similar. And a lot of people, a lot of researchers in the world was starting to work on that area, but it was just an emerging field. So a few of us came together and wrote this like what we hoped would be like the handbook of the field, basically editing lots of different chapters by all the leading, if you wish, researchers in the field, trying to put together what was known in 2005 about this field. And we just called it Algorithmic Game Theory.


06:46: Anna Rose:


So I think we've just touched on like two works that you've created, but I think it would be really good for our audience and for us to hear a little bit about like maybe the phases of research that you've gone through. Just to give us a sense for like what kinds of problems have you been working on? And hopefully that can lead us a little bit to what we wanna talk about today.


07:07: Noam Nisan:


Okay.


07:08: Tarun Chitra:


We can start as early as you want. You can go to the 80s if you want, you can go and read more recently. Up to you, up to you where you wanna start.


07:15: Noam Nisan:


So I'm afraid my research does go back to the 80s. So I did my PhD in the 80s in Berkeley, and my first area of research was computational complexity. I was working mostly about pseudo-random generators, interactive proofs, computational complexity, algebraic complexity, things like deep theoretical work. And I... Maybe about 10 years I worked in that field. And then in the mid-90s the internet just popped into our lives. So I'm old enough to remember that, but I was already a professor in the middle of the 90s, and this new invention, the internet, that seemed to actually be an important change came into the world, and very quickly, everyone in the world knew this was a very significant thing, except for, I suppose, the researchers at universities. 


08:08: Anna Rose:


Who had created it in a way. 


08:11: Noam Nisan:


Yeah. So as users, we immediately knew this was important, but very few people changed their research at that point. And I thought that I have to change my research. I mean, this is a huge invention, things are going to change, and there's going to be amazingly interesting research problems in this new area. So it took me a while until I figured out that what I find most interesting about this new world of the internet is the interaction between different people with different incentives, with different interests, different companies with different goals and how you can organize these kinds of things. And that required taking game theory and economics and combining them with your usual computer science. And so since about 2000 or something like that, that's the area that I'm working with, trying to combine game theoretic, understanding and economic considerations into computer science world.


09:03: Anna Rose:


With the internet, I mean, there had been game theory studies before, but do you feel like with the internet, it just sort of put some of these marketplaces on steroids? Like all of a sudden a lot of friction was removed, like it just changed?


09:17: Noam Nisan:


Absolutely. So I think that, the scale of things you can do on the internet really changes game theory. So if you're an economist, you're really interested, let's say, in how you do create an auction for a single item because that's what economists really are worried about. Now you go to the internet and instead of an auction for a single item, you have hundreds or thousands or billions of items, whether it's like ads on Google or whether it's slots on the blockchain for transactions on the blockchain. So suddenly you're in this new world, you're still looking at the same kind of auctions for items that economists are looking at and game theorists are looking at, but now you're doing it at huge scales and huge complexities and that changes the whole story. 


10:01: Anna Rose:


Cool. Okay, so this is the switch that you made. When you had been doing complexity theory though, was that computer science or was that more like math?


10:10: Noam Nisan:


Yeah, so I was in a computer science department, but it's definitely true that my work was completely theoretical, mathematical. I probably, for these 10 years, I did not program. So I love to program before my PhD, I love to program now. I started programming again when I started moving to this new field. But for this decade, I did not program at all. I never needed it, I never needed a computer, I just proved things mathematically.


10:37: Anna Rose:


But then you made the shift over and you say you did that around 2000, maybe you can tell us from that point, what were the sort of general topics that you started to focus in on?


10:48: Noam Nisan:


So I think a large part, I worked on a field called algorithmic mechanism design. That basically takes the economic field that existed, which is called mechanism design, which is sort of a generalization of auctions. How do you create auctions? How do you create voting systems and so on? And then said, okay, what happens when that moves to computers, when that moves to the internet? Now things become complicated. Instead of one item auctioning, you have lots of items with interactions between them. And instead of actually talking about human institutions that people have used for years, now you can invent your own. You create completely new mechanisms, anything that you can imagine as possible for computers. You don't need to worry about people and their limitations. So basically what I was trying to do is take everything that existed in this area of economics and try to see, okay, what happens when we put it on steroids in computers?


11:42: Anna Rose:


Had you done work in economics before as well? Like it sounds like it also brings kind of that department more into the space.


11:49: Noam Nisan:


So the truth is no, I have not done any economics before that. I just figured out that I need game theory. That's the kind of analysis you need in order to actually work in this new field where you have computers interacting over the internet and these computers are owned by different entities. So they must be trying to achieve different goals. So I needed to study that, basically. And of course, as usual, as professors, we can't study anything by ourselves, we take a very smart graduate students and these graduate students learn the stuff and teach us.


12:21: Anna Rose:


Really? Is that how it works? 


12:23: Noam Nisan:


That's how it always works. Yeah, it's very difficult to learn by yourself once you're a certain age. So I had also an added benefit that I'm a member of what's called the Rationality Center at the Hebrew university. This is really an interdisciplinary center that focuses on game theory and its applications to various fields. So we have people there from economics, from psychology, from biology, from law, many different areas, and all of them trying to actually look at the common core of what do you do with game theory? How can you analyze game theoretic and decision issues in different fields? So that center that I'm a member of was immensely helpful because I had all these people there that knew game theory and could teach me game theory and were happy to collaborate and were happy to see how game theory is applied to new areas.


13:11: Tarun Chitra:


When you say that the era where you made that transition was around 2000, I feel like some of the older papers of yours that I read actually have a little more of this like complexity theory bent versus economics bent where they're like about the bidding languages, right? Where it's like, okay, I have a combinatorial auction. I want to define what a notion of a succinct bidding languages versus a non-succinct bidding language. And the language part looks like CS, but then the efficiency part sort of has economics, but started more CS. So I think it's kind of interesting to look through your history of writing where it's like started as this like you look at it and it looks like, Hey, I'm defining kind of NP language or some language with some predicate, I make some notion of size of the language, I tie the size to efficiency. How would you describe that kind of transition?


14:01: Noam Nisan: 


So I think you're completely right in the sense, but it's not only my own transition, but I think the whole field has been gone in this direction. So it started with a bunch of computer scientists figuring out that we need to use economics and game theory to study what happens in computerized systems. And at the beginning, you can see where we came from. You know, we think like computer scientists, we talk like computer scientists, and we try to formalize things like computer scientists. As the area progressed, we're now, I think, more balanced. So we know more, we understand more economics, we talk more like economists, we use more game theory. So as the field progressed, we're now more to the direction of economics. So probably I'm still not like an economist in any sense of the word, but definitely more than I was 20 years ago.


14:49: Tarun Chitra:


And I guess in that transition, when did you sort of feel like blockchains were an interesting thing to study?


14:59: Noam Nisan:


So I have to admit it's pretty late. I still remember I was at this conference of economics and computation, and a bunch of researchers were discussing this new invention, the Bitcoin thing. And I still remember the number. It was... Bitcoin was $3 then. And we were all reached the conclusion that this is way too expensive and no way is it going to pay for itself, and I just left it for another few years. And so then I didn't think about it for a few more years, and then the ICO wave came and then I thought, hmm, this starts sounding interesting. But the ICOs maybe are a bit iffy. And I think just lately, maybe two or three years ago, when I started hearing the word Web3, and it really clicked on me that this is really an interesting possibilities are opening up here.


15:49: Anna Rose:


I want to understand what sort of held you away. Like, so because that ICO boom, that would have been like 2017, 2016, 2017. But did you feel at the time that it just like wasn't serious enough? Or did you still feel like it could be a phase that was just going to pass by?


16:08: Noam Nisan:


Let me put it this way. So I think then I thought like many economists, professional economists think today. So if you talk to a professor of economics about the blockchains, the usual response or one of the responses that I got from a very famous economist is, oh, you're working on blockchains and stuff. Let me sell you some tulip bulbs. Right? So one way to look at it, it's all just a bubble, it has no intrinsic value and it will burst and maybe people will get rich in the middle by being in this like Ponzi scheme kind of thing, and that was sort of the general way I was looking at it, I suppose, at the time. Maybe not so strongly as some people have strong opinions today but I didn't see what it could really contribute as a significant human endeavor.


16:58: Anna Rose:


It's funny because like the tulip example, like I've lately and I feel like this might get some people mad by me saying it, but I felt like the NFT thing felt very like a tulip market. But tulips, remember, still to this day have some value. They're not completely worthless. 


17:16: Tarun Chitra:
Well, the existence of the joint stock company is due to the tulip bubble, right? So I think the idea of selling shares in a company to earn some future profits, you can thank the tulip for. Between that and the British East India Company is sort of like some combos. But one thing I will say is like, I like you kind of had this similarly like nebulous view of a lot of things in crypto until sort of maybe 2015 or so, when people started at least proving some properties of these networks. Like I feel like the idea that hey, we ran a bunch of servers and somehow they're reaching consensus, but we don't explain why like cap theorem doesn't hold or what the probabilistic definition of these properties is. So I'm more curious, like from your perspective, what kinds of results were the ones that changed your mind? Maybe more like academic results about things within the space that changed your mind versus sort of market-driven things.


18:17: Noam Nisan:


So I have to admit that for me, the real pull was not any academic results, but really just some kind of realization of the human usefulness of the Web3 endeavor, in the sense that I finally got into some kind of thinking that this could be as important, let's say, as a limited liability corporation invention of a few hundred years ago, where it changed... It seems like completely crazy. How can you take a loan and immediately from the beginning say you may not return it even though you yourself have money, but only the corporation doesn't have money to return the loan? Right? So that sounds like a crazy invention, and yet we know from history that that was an amazingly useful human invention. And at a certain point I figured out that this Web3 agenda, if you wish, of running things in a trustless way without trusting any single entity, I finally thought that this is really useful for many things and it's useful from a human perspective. So once I had this motivation, say, oh, this is something that may be really useful, it's not such a way to make money or play with whatever, then you start looking at, okay, so what are the challenges here? And of course, there are immense number of challenges, lots of difficulties, because it's very difficult to actually do very trustful systems without trusting any one particular person. And then you have lots of really interesting research problems.


19:46: Anna Rose:


So we've talked about everything up until that kind of led you to being interested in the blockchain side of things. But what were you able to kind of bring from your previous work into this blockchain world? What were the problems that you noticed right off the bat that you felt you could jump into?


20:01: Noam Nisan:


So I suppose the first problem was the transaction fee mechanism design, because that's very close to an auction, but it's not quite an auction in the sense that you also need to worry about the incentives of the validators or sequencers or miners or whatever. So it's like a sort of like a two-sided thing and it's a repeated thing. So you're really into basically my field of research, which is algorithmic mechanism design. So that was the first thing that seemed, oh, this is exactly up my alley, these kind of questions. Now, I think it took some time. So a lot of the early work in academia on blockchains was actually figuring out their safety, whether they work well or not. Right. All the Byzantine agreement, all the analysis of a longest chain, all these kind of questions were really saying, okay, does this system even work? And in what sense does it work and how can you attack it and how you can protect against these attacks and so on? Once at a certain point, I sort of accepted, okay, so lots of research, it sort of works. Now let's see what it means economically speaking. And that's where I thought that I could put in my expertise.


21:11: Tarun Chitra:


One kind of thing about transaction fee mechanism design is, at least recently, I would say, a lot of the results tend to be kind of either negative results or impossibility style results or sometimes sad, sometimes insightful in the counter examples, but not... You're kind of like, okay, well, maybe it doesn't fully drive. I'm kind of curious how you think about the role of impossibility results versus sort of constructive results or approximation algorithm style results when you look at this space, because I think one of the beauties certainly of complexity theory is these impossibility or like, hey, this is sharp P complete, you can't do it type of results. But there's also a sense in which for some reason people have always found these weird probabilistic loopholes around some of that... That you don't expect sometimes, around these kind of impossibility results. If you like slightly change the framing and then slightly change kind of what your state space is, what kind of lens do you take towards transaction fee mechanism design and how do you view impossibility results?


22:17: Noam Nisan:


That's a really great question. So I think that... I think in general in computer science, so in the 70s, we had this like NP hardest results, NP completeness and oh, you can't do this, you can't do that, you can't do that, you can't do that. And for a while that's what complexity was. You can't do stuff. But I think very early afterwards, we figured out, no, this doesn't mean you can't do it, it means you have to be more delicate. You have to find a more sophisticated model. You have to desire less. Maybe you can't be perfect, but you can approximate. Maybe you can only work on 99.9% of the instances and not on 100% and so on. So I think in general, that's my point of view. I love impossibility results because they really focus you on what you can and what you can't do. But I think that the point is you should take an impossibility result as something guiding you towards what you can do, rather than saying that you cannot do something. So if you can't do something that's 100% incentive compatible, as you said, as you cannot do mechanism design, 100% incentive compatible, that's fine. You don't need to be 100% incentive compatible. You can say maybe it works almost perfectly in large markets. Maybe it works almost perfectly except for these very strange situations, which we can account for and so on. So impossibility results just tell you what you should be doing instead.


23:36: Tarun Chitra:


Yeah. I mean, I think the interesting thing about blockchains to me and sort of, at least personally, why most of the work I've ever done has been in this space is they somehow are good at giving you some almost like intuitive way to think about impossibility results. If I look at prediction markets from 20 years ago and 10 years ago, all the results were, can't do anything. It's sharp P complete to source liquidity, sharp P complete to figure out how to solve some of these problems. But then somehow in practice, people who accidentally just wrote a couple of Reddit posts figured out something that looked like, had 90% of the flavor of what the original prediction markets were trying to do. And then when you formalize it, you find, oh, it's actually like, hey, you took the wrong frame of reference or representation of the problem. You like, instead of trying to map it directly to these variables, you know, you kind of have to like... If you look at it in a slightly different environment, slightly different frame of reference, it suddenly is a lot easier. So with that kind of in mind, I guess, what are the things you're most interested in research wise now and sort of where in your journey are you? Have you reflected from the impossibility results to something new or, you know?


24:52: Noam Nisan:


So I suppose I'm working on a bunch of things, mostly in Starkware, but also thinking more generally. So there are the questions of mechanism design, of transaction fee mechanism design. Nothing is perfect as possible, and then, but you have lots of things around it. You know, we have all the MEV thing, which of course, if you can destroy anything, but maybe you can do a little bit and maybe you can talk about how much MEV is possible, how much is it not possible, how do you protect against it and so on. Maybe you can't be completely incentive compatible, but practically maybe you can. So for example, one of my favorite points, usually mechanism designers do not like the first price auction, at least because it's not incentive compatible. It's what we... As we say in the blockchain world, it has bad UX. People need to figure out how to manipulate their bid and so on.


25:45: 


But the truth is, it's not so bad in the blockchain world because all your wallets are sitting on the mempool. They know exactly the situation of the market. It's lots of different players, lots of different transaction. You can get a very, very good estimate of what bid you should put in, even if the mechanism is first price like in Bitcoin, right? So once you look at the context, some things which are considered bad in classical economic theory maybe are just perfect for us. And also in classical economic theory, they like... You know, first price auction, they're used a lot because we know exactly how to analyze them, how you should bid and so on, and that can also be taken to the blockchain world. So that's like a very simple example. And I think there are lots... A lot is going on around it and trying to figure out complex mechanisms for transaction fees, which for example, in the L2 space you really need because you have many different resources. So the multidimensionality is sort of jumping at you and you need either to accept it or to approximate it in a way that you need to figure out how are you going to deal with it.


26:50: Tarun Chitra:


I think the interesting thing about blockchains is that the traditional sort of constraints you have in algorithmic game theory might change, right? Maybe individual rationality doesn't need to always hold, maybe incentive compatibility doesn't need to always hold. Maybe you care about Sybil resistance and credibility much more than you care about bid shading in a first price auction. Like what you're talking about. In the multi-dimensional resource case, though, you have a sort of different set of constraints. There's some types of resources that you need very fast response on, like execution, some type of resources you might be willing to take a lower sort of response rate on, like storage or proving that L2 did something wrong to the L1 to withdraw. How do you think about the types of constraints you want to construct? Right? I think when you read IC papers or you read algorithm game theory papers, people always jump to the five things everyone knows. It's some type of individual rationality, some type of IC constraint, some type of for all strategies that aren't like this, this is dominant or expected dominant, whatever. What do you think the constraints, game theoretically, for the multidimensional market will look like? Because I suspect they actually are quite different than kind of your classical ones?


28:11: Noam Nisan:


So first of all, I do think in terms of incentive compatibility, but I definitely do not think of it in a theoretical way. So I know I'm not going to get incentive compatibility in any theoretical way, I just want to be close enough practically to incentive compatibility. And there are many ways to get that, and that's what I want to do. So that's my first point of thinking. Then when I'm looking about my goal, I know my goal is efficiency, what is sometimes called social welfare in algorithmic mechanism design, trying to make sure that we're not losing too much resources. And now again, the focus is on too much. So I don't want to be a hundred percent efficient. That's going to be impossible and not really necessary. I'm happy of being 80% efficient in some sense cases, even 50% efficient is completely good enough because you get the security around it, you get simplicity. So for example, it's very important for everything to be as simple as possible. Why? Because you're gonna get complications whether you like them or not. So whenever you can avoid a complication, it's gonna pay for itself. So even if you lose a little bit in incentive compatibility and efficiency and so on, if you simplicity will do that for you, that's really important and it's gonna pay off.


29:22: 


So basically that's what I try. I try to get basic efficiency, basic incentive compatibility, none of them perfect and try to do everything as simple as possible. So for example, if you tell me about talking about multi-dimensional mechanism design, my first attempt will be to be single-dimensional, approximate everything by a single resource. If you can get away with it, that's perfect, that's great. And sometimes your bottlenecks are always going to be in one resource and the other, you can just sort of with a little bit of loss of efficiency take care of. Sometimes you have two different bottlenecks and you have to deal with them separately. And then to do a really multi-dimensional thing, annoy your users because they're going to have to pay separately for two different things. They're going to have to keep it in their mind. But if you need that, that's what you do.


30:09: Tarun Chitra:


Yeah. So one kind of thing, at least, I've been thinking a lot about in this regards is, if I look at the three pillars of algorithmic mechanism design, you sort of have mechanism design, contract theory, and then sort of signaling mechanisms, right? Something where I provide signals and they kind of... You could argue that the contract theory is sort of a mix of the two, right? Like there's some signal provided by the principal. But there's kind of this question in blockchains because you have this public revelation everywhere and you have a bulletin board everyone agrees on, you could do better signaling mechanisms. Like you could have the user signal some type of intent and have the mechanism input some of that signal versus just purely historical algorithmic pricing. How do you kind of view, given that you've written papers sort of, at least in, I know, in two of those you have the Babaioff paper on contracts 2012 and then you have a ton of auction papers. How do you view the three different prongs as important in decentralized mechanisms?


31:09: Noam Nisan:


So I think to begin with, before we can talk about how do you put them into the blockchain world, we're only starting. So as opposed to auction theory and mechanism design, which is really adopted into the computer science world with much work and lots of papers and, I think, pretty sophisticated understanding, the other two pillars that you were talking about, contract theory and information design, we're only now starting to do that. And I think there's really interesting work to getting more algorithmic contract design and combinatorial contract design and similarly combinatorial information design that's just starting now. And I believe that these two fields will grow in the future, first among computer scientists trying to do game theory and so on. And once we understand that a little bit better, I'm sure it will also find its way into blockchains. But at this point, I think I don't know how to apply any one of these newer fields, at least for us computer scientists, into the blockchain world in a useful way. I think it's bound to happen, but maybe not in the next two years.


32:12: Anna Rose:


I'm going to pull us a little bit out of this rabbit hole and bring us a kind of a little higher level, basically the work that was first suggested to me when having you on the show, which is this blog post called Simple Tokenomics for a Proof-of-Stake Utility Token. I kind of want to talk a little bit about that work, and then I have some questions about how these things apply to L2s. But what was the goal of writing that post? This is on the Starkware blog. It's quite well presented for someone who's not super familiar with the material. Like there's a lot of defining of proof-of-stake and all of these things in the beginning, which I always like it when posts do that, when they kind of like bring the user in. They don't throw too much lingo right at the start. Instead, you defined it. But yeah, what was the goal of that work? And then I want to ask you more questions about it.


32:58: Noam Nisan:


The goal was that... I was thinking about issues relating to our own token, our own mechanism design, our own minting and our own staking rewards, what we will have when once we are completely decentralized.


33:12: Anna Rose:


This is for Starkware.


33:13: Noam Nisan:


This is for Starkware, yes.


33:15: Anna Rose:


Or Starknet, maybe.


33:16: Noam Nisan:


This is for Starknet when I was working for Starkware. 


33:20: Anna Rose:


Cool. 


33:21: Noam Nisan:


Right. And these are sort of slippery issues. And many people are looking at it from many different angles. And I was thinking, okay, can we have a very simple kind of explanation of what's going on there? And I really wanted to get into something very simple, and I say it like an Economics 101 sense that sort of gives answers that make sense. So of course, it's going to be very simple and it's not going to capture everything, but I always want to start with a very simple point of view. And from there, we can make things more complicated and more exact. So I was thinking in our context, and then I tried to see, okay, how general is this? Can we generalize stuff? And I thought that I reached two, I think, important principles that I think could be like the basis of thinking about tokenomics of a certain types of systems, specifically of systems that have utility token, of proof-of-stake systems with utility tokens. And I wanted to write it down in a very generic way, not related to Starkware itself or to Arto stuff, but in a very general way that could try to appeal to people and say you should try thinking about stuff this way. And that's how I like to think about it. So that's what I was trying to do. 


34:36: Anna Rose:


In that you also compared a lot of kind of top blockchains that are live, that there's data on now about how it performs, what's the staking ratio, how many people are actually staking. You have kind of a nice chart which shows the staking ratio and adjusted rewards. I've never seen that compared actually, so this is really kind of nice to see. When you're laying all of this out, are you trying to provide just frameworks for people to think about their own tokenomics when they're designing them? Or were there any best practices that you actually learned through this work?


35:11: Noam Nisan:


Yeah, so I definitely have an agenda here of best practices. And these are two very simple rules, if you wish, rules of thumb, which I think you should... Should be the beginning of thought about how to do these kinds of tokenomics. And the first rule was like a microeconomic kind of analysis saying, how should you price your transactions? And the point here that I was trying to make is that there are correct pricing, if you wish. Now, of course, remember, this is extremely simplified only at the starting point, right? But the correct pricing should be what's called the marginal costs. So that especially means, how much more would it cost you to run this transaction relative to everything else without this transaction? In particular, the most important point about this kind of pricing, about the way you price this thing is that you don't want the transactions themselves to pay for all the startup costs, if you wish, for all the fixed costs, as economists call it. Especially, you don't want these transactions to pay for the capital costs of staking. Because that's an enormous amount, and if you let the transactions pay for them, you're basically driving up the price of transactions, you're artificially reducing the number of transactions that are going to use your system, and that's going to be bad. So you don't want transactions to pay for that. So that's the first point that I wanted to make. And that sort of tells you how you should price. You should price according to marginal costs that needs to take into account congestion, which is sometimes the most important thing, but not capital costs.


36:44: 


And that leads us to the second principle. So who will pay for these fixed costs? I mean, someone needs to pay for that. If I'm not letting the users pay for them, who is going to pay for them? And the point that I was trying to make is that it's fine to mint these new costs. That's actually one of the strengths is that we have in the web3 world where we have our own tokens, where we have cryptocurrencies. This is something you can do with them. You should pay capital costs, you should pay fixed costs from new minting. Because if you're looking who is really paying for that, the people are really paying the current owners of the tokens. Why should they pay? Because basically if they get more usage of the system, their platform grows. So they will eventually actually hold shares if you wish of a more significant ecosystem. So for them, it's not really paying taxes, but more like investing in the community. So that's the second point that I was trying to make, which is like a macroeconomic thing, because from there you can figure out how much minting do you want to do, how much are stakers going to get, and so on.


37:51: Anna Rose:


From that work though, and well, as I was looking at this, Starknet is going to be an L2, how do any of these things actually translate? Because L2s, originally like rollups, they were just meant to use the consensus of the main chain, the DA, that was like the settlement layer, and they were just going to have... And they kind of currently do have this, like these sort of like centralized sequencers that just did that, but there was no additional proof-of-stake network. Now, that's changed in a lot of the networks. They actually are introducing some sort of L2 proof-of-stake. I mean, it's not... I know it's not actually proof... It's like a decentralized sequencer or something, some sort of multi-agent decentralized group that's going to make decisions. How did these... And like there's tokens and there's tokenomics on those L2s as well, how do these principles translate? It becomes very complicated, I feel. You're like, we're starting simple, but I feel like it's going to get weird. 


38:53: Noam Nisan:


So, okay. So that's actually a very interesting question. So I think all L2s really started, if you wish, like normal corporations, but just working in the blockchain space. So for example, Starware itself, its first product was called StarkEx was just a centralized thing. You give us your transactions, we... You trust us and we'll put it on Ethereum and L1 for you. So this is just, we're software as a service, we're doing something for you, completely classical kind of company, only we happen to actually do something that only makes sense in the blockchain world. But we're not ourselves in like a Web3 company, if you wish. We're only working in that space in a standard business model. That was our original product. But when you start looking at it, so people who are using cryptocurrencies, using blockchains and so on, the reason they're doing it because they want what you get is a promise of not trusting anyone, anyone specific, but getting this consensus, this generalist trust without a trusted party. And if you're now an old fashioned kind of company giving this service, then why would they trust you even? Right. I mean, so it's sort of having this intermediary in the middle, sort of takes away the whole point of doing this kind of thing. 


40:09 :Anna Rose:


Totally.


40:10: Noam Nisan:


So it's not 100% because you do get eventually it's on L1 and so on. But to a large extent, that's the situation. So that's why I think both my company, Starkware and many other companies in that space, figured out there's nothing they can do. They also have to be decentralized themselves to gain that kind of trust. Because otherwise, their users are not going to want to use them but some other decentralized thing. So that's why L2s are becoming decentralized as well. I think that's completely necessary from that point of view. Now, once you're an L2, then the way that I'm looking at it, your tokenomics are going to be like just like you're providing any other service. So suppose we're providing a service, I don't know, of running popping balloons to there or something like that, but doing it for some reason in a decentralized way. So we're providing a service, there's going to be some utilities that we provide. Otherwise there's no reason for us to exist. And the token is going to be used to pay for that utilities and to run the system and so on. And now you're just... It doesn't really matter whether you're an L2 where the system... The service that provide is to put something on L1 or the service that you provide to some other thing, but you're still doing it in a nice decentralized way. So from my point of view, L2s are just one example of the basic tokenomic kind of point of view of platforms providing a real service that's useful to someone and have a token to support that.


41:38: Anna Rose:


Would you then just use the same kind of breakdown and best practices on the L2?


41:44: Noam Nisan:


I would say, yeah. I mean, again as a first starting point, right? Of course. So there are always going to be differences, for example. Maybe you need a little bit less security in terms of fraction just because you get a large part of your security from the L1, so maybe you need less on your own. And so then you start talking, right? But generally speaking, yes.


42:05: Anna Rose:


I so wonder what happens once... Like, as these networks have evolved, we started to see, I mean, two years ago, we were talking about bridging, we were talking about like tokens going between these things, synthetic tokens, and the shared sequencers and the MEV that could be captured from these things. Like I feel like the tokenomic, that simple tokenomics, does it not get influenced by all of those other things around it, eventually? Do the people who design these systems have to have the foresight to take into account all of these crazy like in-between cases that are happening? This is also to you, Tarun, by the way, because I know you play in this territory?


42:44: Noam Nisan:


I mean, that's a difficult question to answer because the answer is always both yes and no, right?


42:50: Anna Rose:


I guess it's like you can't predict it, but you do need to keep it in mind on some level.


42:54: Noam Nisan:


Yeah, so I suppose once you're designing any particular system, you have to understand everything that's happening in your system and try to take into account everything. Now the question is, how do you do that? So the way that I can think of doing that, you start with basic principles and then see, okay, what do we do here, here, and there, and there? If you wish, plug in everything that we know into this framework that we started with, which was simple. So for example, let's say if you're talking about... MEV is a big issue in our space, of course. And my point of view of MEV is still the very simplistic thing. It's sort of implicit fees on the users, the fees are not set in the correct way. They have no relation to cost, to marginal cost. They have no relation to anything except how much you can take advantage of this particular transaction. So I consider them something that's bad if you wish, okay? So maybe, there may be some positive aspects to it, maybe you can't eliminate it all together. All that you need to take into account. But from my point of view, if you start thinking about MEV and your platform, the starting point should be, we're against it. Now let's see how can we handle it. And nevertheless, maybe we can't completely eliminate it, maybe there are some special circumstances why it's positive, and then you start actually getting into the details. But having a departure point is sort of useful, I think.


44:19: Anna Rose:


I want Tarun to answer to the MEV is bad, because I feel like he's been spending time trying to convince me that MEV is necessary evil.


44:29: Tarun Chitra:


I think you can't... Yeah, you can't get rid of it. I mean, yeah, I feel like 2023 was just for me, just writing a lot of papers showing lower bounds of how much you could remove and couldn't remove. But I just like generally think it's good to have this idea of lowering it as an objective, but with the understanding that in a permissionless world, I can take an application on its own, I can give you some bounds on how much MEV exists, someone deploys another application, again, permissionless. By adding the other application, I have super linearly or potentially multiplicatively increased the amount of MEV between the two of them, and now all of a sudden, my initial analysis doesn't work anymore. So I think in the permissionless world, there's a sense in which you're never shrinking it to zero, and in some cases, if you can direct it towards positive things, like if there's some types of constraints you can add, you can at least have some guarantees on worst in average case, behavior. But yeah, I do think there was a long time of people being like, our thing gets rid of all of MEV and most of those were not correct.


45:42: Noam Nisan:


I believe I agree with what you said. But still, when you push, you can decide which way to push, right? Which direction?


45:51: Tarun Chitra:


Yeah. Finding constraints that help you have a better grappling on it, I think, is the ideal end state. But I think there was a while, especially I think 2021, 2022, where people would either A say they have solved it and hey we just shoved everything into a ZK circuit or in MPC and now we have no MEV and it's like, that's not really true.


46:15: Anna Rose:


But Tarun, I want to kind of throw that question to you too, like, once you introduce, and maybe I'm wrong in thinking it's like bridging, shared sequencers, the decentralized... Like the sort of proof-of-stake on proof-of-stake when it's like a PoS base chain and like a PoS L2 with just these extra things. Does that actually impact how the tokens perform, like the cost, the fees, or is that like, do those L2 still... Like each individual rollup, does it still get to exist in this sort of bubble, like apart from some of the other stuff? This is me actually trying to understand, like do the fees, do the tokenomics change because of those other things?


47:00: Tarun Chitra:


Inevitably, the answer is yes, but the thing is those other things you view as like a particular application, that application generates some fees, that application also has some value that enters or leaves. And the question is, do the fees compensate the average net flow of that application in some manner? And you're right, that these transaction fee mechanisms all will interact with each other, and you're never going to get a perfectly isolated one. The analysis in most formal results kind of is unrealistic in the sense that I have one rollup with a particular set of fees, another rollup with another set of fees, one of them has fraud proofs, one of them has ZK proofs. So one of them is continuously paying fees to have the proofs generated. The other one is only having these worst-case... There's fraud, that's when you have to pay the very, very high fee. Those are two very different systems, but yet they're interacting once they're bridged, right? And so there must be some trade between those two fees, and the sequencers are receiving fees from both of them. So I think you're right. I think it's very difficult to study formally, and maybe it's better to come up with some heuristics first before kind of... At least that's... I know it's a cop-out answer, it's an answer that's like, oh, it's too complicated to analyze. But I do really think it's like each little universe will choose their own fee structure. And first you have to see how that universe evolves before you can talk about how it interacts with other ones.


48:28: Noam Nisan:


So let me say something. So I think you can see that you're like a computer scientist. I don't know if by training or at heart, but because computer scientists...


48:36 Anna Rose:


Tarun??


Noam Nisan:


48:36: Tarun Chitra:


Not by training. I did pure math before.


48:42: Noam Nisan:


Okay, pure math. Okay. So with computer science, when we study a model, we expect the model to really represent reality very well. So if we compute something and the answer should be 5.3 and we get 5.2, we think something has gone bad. Economists, they're looking at it completely different. They know they're working with very complex systems, with lots of interaction, than with people also thrown in, which is a whole different level of problems, and if they expect something to be 5.3 and they get 5.2, they're ecstatic. They say, wow, our model is so exact, it's so perfect, it's so great. So the question is, what are your expectations? Once you manage expectations, that you say, we need to basically figure out how these things work, not completely not... Then you can start studying these systems, not in complete isolation, but maybe just try to formalize like one or two parameters that they affect each other. And so if your expectations are like an economist expectations, which are low, then you can probably do things.


49:47: Tarun Chitra:


Yes, R squared equals 0.1 is always a great lower bound for people.


49:53: Noam Nisan:


Yes. That's maybe extreme, but something like that, yes.


49:59: Anna Rose:


It's funny, as we talk about this, I almost like, I remember like a few years ago when there was only one rollup and it was a super simple rollup that didn't do really anything. And I feel like... Then there was a few more and we could look at how those behaved but we're on the brink of, and it's sort of already started, of just like a deluge of L2s and rollups and interconnected networks, like the bridges have been there for a while, but I don't think they've become seamless. I think they're still a little bit clunky. But I feel like that's going to change. I think we're going to have much more fluidity between all of these different places. Is there anything that you're like worried about when that kind of scenario happens? Like is there any sort of concern on the horizon of what could hurt these systems?


50:54: Noam Nisan:


So when you say concern in the blockchain world, my main concerns are still like at the society level. We have this whole system, we're trying to make sure that governments don't control everything, that corporations don't control everything, and we know that it's not always a good idea, right? So no government means terrorism, crime, and so on. And all of us are sort of hoping that we as the human race are smart enough to get the good without actually paying the price of the horrors that can happen. So if I'm worried about something, is it that great human level? Now when we're talking about the small things about what will happen with L2, I think it's a really interesting question, what will happen? So one can think of, if you wish two extreme possibilities, one of them is all these different L2s inter-operating with each other, with money moving back and forth and with everything seamless as possible. That's one possibility. The other possibility will be consolidation, right? There will be like one or two or maybe three different L2s, each with a significant purpose, and all the others will just wither away. And I don't know what would happen. Probably maybe something in the middle, but I think it's really interesting to see.


52:08: Anna Rose:


Or alternatively, everyone starts moving over to Solana. Which I kind of don't think is going to happen. 


52:15: Noam Nisan:


That's if you believe in the Ethereum world. But absolutely, the Alt-L1 is another possibility. Yes, absolutely.


52:22: Anna Rose:


I don't know why. I've become like the biggest Solana shill in the last few weeks. I have no connection to it, by the way. I just... yeah.


52:30: Tarun Chitra:


I think one thing about the complicated system. So now I maybe... I agree, maybe I'm over-relying on symbols versus heuristic models. But I will say the following. I kind of think the classical mechanism design world. I feel like it really changed when people were like, okay, what are we really designing here? Well, we're pricing some notion of the externality caused to each user, and then that's how we measure welfare or revenue, or that's how we should price entry fees. And there's sort of some sense here in which we don't know the externality that one L2 causes on the other by changing its fee, right? Like the existence of Solana to Ethereum, what's the externality that causes to Ethereum users indirectly? Because now maybe all the volume that was trading in ETH-USDC suddenly is trading in some memecoin to USDC. And so all that liquidity leaves Ethereum, causes prices to be worse, and somehow welfare decreases, right? I think the hard part about permissionless systems, and maybe this is the opportunity of them, is that you can never really figure out how to price the externalities completely. And then that's probably why it's like you get all these impossibility results that are just grand proclamations. But I think that there's also a sense in which it doesn't matter to real usage that they exist. It's a little bit like neural nets in that way, right? Like all the negative theoretical results have literally negative bearing on the fact that the things are used every day, right? Like no one cares.


54:00: Anna Rose:


I wonder, could you almost find out if all of the USDT on Tron has any impact on USDT on Ethereum? 


54:09: Tarun Chitra:


And we know that's true, right? We have seen that happen. 


54:12: Anna Rose:


Wow, okay. Because there's a really clear, singular case.


54:15: Tarun Chitra:


A really simple example is if you look at the distribution of sizes of transactions. So take the distribution of the number of $1 transactions, $2, bucket it by some interval, and compare the distribution pre-Tron USDT being over a billion and post, you see that the small sized transactions on Ethereum all disappeared. The weight of that distribution went down significantly. So if you condition on the small sizes, you look at some divergence measure, some measure of distance between the two distributions, you can see that it's statistically significantly changed. So that's an example of an externality, right? The introduction of a cheaper blockchain, lower fees, caused all the low value transactions to move and increased the high value transactions. Because the people who are high value transactions, well, they were already large ETH holders anyway. That's what I mean by like these things. I don't know how to measure this notion of externality of introduction of each new rollup or each new fee mechanism to the whole system. They have these kind of weird things that you can measure afterwards.


55:19: Noam Nisan:


Let me pitch again the simplicity point of view.


55:24: Anna Rose:


We've just taken it real complicated.


55:27: Noam Nisan:


Yeah. So here's the simplest way I like to think about these things. And I think they capture a lot of what you're saying but just from very simple principle, right? So all of these systems have very strong network effects. You know, they're huge, the externalities basically of having a bigger system that has a lot of value. So these are classic network effects. The more you have in one system, the bigger the effect is. So if you have two different blockchains, each one separate, that has much less value than having all of the users, all of the operators, everyone from these two separate blockchains being on one blockchain. That's just a classic network externalities kind of thing. So from this point of view, any split, if you wish, in the blockchain world is bad for the world, right? Because you want everyone to be working together. Now, of course, that can only go so far because once you have only one system, there's no competition, you can't trust it. So of course, you're basically kicking the shoe under yourself, kicking the chair under yourself, I suppose. But I think the first principle should be that separation is definitely bad.


56:44: Anna Rose:


You feel like a system that sort of sticks more together is going to be the stronger one. But I mean, we kind of... Yeah, I think for the future, there's going to be a lot of movement between L2s at least, like there already is, right?


56:59: Noam Nisan:


To some extent, just the fact that L2s are above L1, the same L1, let's say, that gives them some interoperability.


57:08: Anna Rose:


Especially those that are EVM compatible. I feel like those ones especially, you see a lot of flipping. Like you see apps deployed on all of them, people will go and play on all of them. I don't know that there's like a moat necessarily.


57:21: Noam Nisan:


I think you're right. So if all of you are EVM compatible, then you get the added benefit of the same developer base, if you wish.


57:29: Anna Rose:


Yeah, yeah, yeah.


57:29: Noam Nisan:


Right? So that's another network effect that you're getting. But even if you're not an EVM-based, you get the network effect of clearing, let's say using Ethereum or the ETH, and clearing together and so on. So there is some network adjusted by being in the same L1. Of course, if you were just one L2, there will be even a stronger network effect because you could transfer between people on the same network, the same blockchain much cheaper. So there will be even more of a network effect, right? So there are different levels of network effects. And of course, even though more network effect is always better, each one of them pays a price. For example, if you're limiting yourself to be an EVM, as you know, Starkware does not, then you're losing something because you now have to be an EVM, right? So you gain something that you get more developer base, but you're losing something that maybe you have a suboptimal language for your purposes. So that's the kind of trade-off that you need to play with always.


58:24: Anna Rose:


Yeah.


58:25: Tarun Chitra:


So one interesting kind of thing that seems to be starting to happen, and I'm kind of curious how you think about this, is that a lot of the rollups that have sort of networks of rollups, so say like rollups that all use OP Stack or Optimisms rollups or Arbitrum Stylus, the kind of share some execution semantics and also share sequencers. It's almost like they're a federation, they're kind of like the US, right? Where like each state has its own taxes, but they have to like tithe to the federal tax. And you're kind of this like loose federation of, I can change my transaction fees up to some amount, but the sequencer has some like minimum they charge. There's sort of some notion of like, we're sharing our fees in some way. How much do you view these kind of like agglomerations of rollups versus individual ones? Because I kind of... I know you said earlier like, hey, the ones that have the highest utility will have this network effect and you'll stick to those few left. But then you also see these federations forming. And I think this federative thing changes the way you think about transaction fees because there's now some component that's common to all of them, plus some amount they're allowed to charge and there's only these constraints. How do you reason about a world where that happens?


59:43: Noam Nisan:


Okay, so I think that's exactly the trade-off. So you have on one hand, the pull of one network is bigger, better than separate networks. On the other hand, you need to specialization because different blockchains serve different purposes. And this is somewhere in the middle. And I think it seems to me that there are many places where this is useful. And actually we're seeing that it's happening, so it probably is useful to someone. So, and I think there is an interesting area there that will develop.


1:00:14: Anna Rose:


The federated idea, Tarun, I've never heard it put that way. I like that.


1:00:19: Tarun Chitra:


I mean, it's basically the European Union or US in some ways, right? There's like some economic freedom via the sequencer, but you're paying some minimum tax. And between OP Stack and Stylus, I feel like you're already starting to see this happen, but I'm sure every rollup will eventually have this kind of like once people have trust in their particular infrastructure, as well as the sequencing behavior, as well as like their proving behavior, whether it's ZK or fraud proof, then people who want to make something that's slightly different, that needs a little bit of specialization will naturally kind of break off. The question to me is, what do you think the equilibrium is? Do you think it's like the big federations are the dominant ones? Or do you think it's like isolated in groups like because this is like betting in the 1600s on whether the European Union would exist or not.


1:01:11: Noam Nisan:


Yeah, so I think, these are fascinating questions. So I believe there is a place there. So the nice thing about this federated kind of idea is you get to choose how much of the network defect you get versus how much... If you wish freedom to choose your own optimizations, which are maybe different from the other sister chain, right. And it's really interesting that you can play this game and choose the sweet spot for you. And what equilibrium will it be? I mean, I don't know. I don't think anyone knows. And that's what's so interesting about this space. It changes every year.


1:01:44: Tarun Chitra:


That's why I said it does really feel like being the 16 or 1700s. I'm not sure what the French Revolution was, maybe FTX crashing. And so now we're just kind of like looking into like, which types of societies will survive the longest.


1:01:58: Noam Nisan:


That's true. From my point of view, I still remember like the internet boom, right? Like the 90s. And for me, one of the nicest things about the blockchain world is that it somewhat reminds me the excitement and the world of building a new world is very much like that. So when I had that something that I haven't seen since the mid 90s, such excitement and such a new... I don't know, human creation, huge human creation being developed. So I think it's really interesting. Like in '95, we couldn't imagine, I don't know, social networks. And not to mention the social effects of social networks.


1:02:34: Tarun Chitra:


On the other hand, we imagine DoorDash and Uber just a little too early, right? They needed a phone.


1:02:42: Anna Rose:


Cool. I like that you say that it reminds you of that era. I have a question about ZK, like zero knowledge. I mean, Starkware's got ZK at its core, Starks. Do you work on that? Like, is that something you focus on? Or is that something that a different part of the org works on.


1:03:04: Noam Nisan:


Yeah, so the truth is that I don't really work so much on that. First of all, because there are so many strong, so strong people in Starkware in that area. That's not something that I can help anyone. I mean, they're amazingly strong. They're a mathematician, crazy mathematicians. I mean, I'm not just talking about Eliud, like really a professor who made his career on this, but other people as well. So I'm not working that. But also, for me, it's like sort of like a deja vu because this really goes back to my original work, like 30 something years ago on complexity theory. It really developed from interactive proof systems, which became succinct proof systems and so on. So for me, it's something that I left, I don't know, 25 years ago, and I'm looking at what happened. It's like seeing your baby all grown up.


1:03:55: Anna Rose:


And come full circle to combine with what you do in an interesting way. 


1:03:59: Noam Nisan:


It's really an interesting way. So I really love looking at it and I love hearing all the sophisticated mathematics that these guys are doing, but it's not something that I can actively contribute, I suppose, at this point.


1:04:12: Anna Rose:


Well, I had one last question about the... I will say I should have asked it before. I just realized, do you think, like in the work that you're doing, would you be designing, like if Starknet decides to also become a federated system of sorts, is that sort of more the realm that you'd be focused on, like how to do that and what token economics would look like in such a scenario?


1:04:35: Noam Nisan:


Yes.


1:04:37: Anna Rose:


Can you tell us if you are planning this federated system?


1:04:40: Noam Nisan:


No, I can tell you. I mean, I can tell you in what should be clear, we're also talking about it, right? It's not a bad idea. And there are lots of things you can do and you can't do. And definitely, we're thinking about it. And I don't think I can say more, first of all, because it's something that we're definitely talking about, but I can say that we're talking about it. It's not... And that's definitely something that I would be interested in pursuing as a personal kind of endeavor.


1:05:08: Anna Rose:


That sounds very cool.


1:05:10: Tarun Chitra:


So thanks again for spending a lot of time with us today. I had one final question, given your kind of publication record in writing really influential books, and as someone who grew a lot from reading your books, are you planning on writing a book on anything in blockchains, Web3, tokenomics, any of the things we talked about? What's sort of your view on that?


1:05:33: Noam Nisan:


So I definitely don't have any specific plans of writing anything yet. So usually I write a book when I have something inside me that I have to basically get off my chest, tell the world, and then I don't need to worry about it anymore because I was able to tell. So I suppose that if I stay enough in the blockchain world, then if I have something, a way that I want people to look at things, that will be a reason to write a book. Before that, no, it's lots of work.


1:06:00: Anna Rose:


Well, Noam, thank you so much for coming on the show and kind of like going through this journey with us. Also, I love that idea that something you worked on in the past, complexity theory and interactive proofs comes back together with the work that you do. Thanks so much for sharing that with us.


1:06:17: Noam Nisan:


It was great being here and thank you.


1:06:19: Anna Rose:


Cool. Thanks, Tarun. 


1:06:20: Tarun Chitra:


Thank you. Excited. Thanks for having us.


1:06:22: Anna Rose:


And I want to say a big thank you to the podcast team, Rachel, Henrik, Jonas, and Tanya, and to our listeners. Thanks for listening.